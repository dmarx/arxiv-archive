%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: UTF8
%%Title: (Adobe Illustrator Artwork)
%%Creator: (Adobe Illustrator\(R\) 28.5)
%%For: (Aran Mun)
%%CreationDate: 7/17/24
%%BoundingBox: 0 0 1737 700
%%HiResBoundingBox: 0 0 1737 700
%%CropBox: 0 0 1737 700
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 28.5.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 28.5.0 x132 R agm 7.256 ct 9.256%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=100 RasterRes=300 GradRes=150 Text=1 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 9.1-c002 79.a6a6396, 2024/03/12-07:48:23        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/">
         <xmp:CreatorTool>Adobe Illustrator 28.5 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2024-07-17T13:05:16-07:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>104</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAaAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9U4q7FVOS5t4m4ySojEV&#xA;AZgDT6cIiTyRYW/XrL/loj/4Nf64eCXcvEHfXrL/AJaI/wDg1/rjwS7l4gvjuIJSRFIrkdQrA/qw&#xA;GJHNQV+BKySaGIAyusYOwLEAV+nCATyVT+v2P/LRF/wa/wBcPBLuVcl3aOwVJo2Y9FDAk/QDiYkd&#xA;FVcirsVdirsVdirsVaZ1UqD1c0X50J/hireKuqMVdUYq6oxV2KuxV2KuqMVdirsVWTXEECc55FiQ&#xA;mgZ2Cip7VOKtfWrb/fqf8EMVd9atv9+p/wAEMVcLi3YgLKhJ6AMMVVMVdirsVfLv5tu7fmJrHJi1&#xA;HjAqa0AhSgzuOyh/g8fx1dLqv7wsPzYOO7FWe/ki7r+YVkFYgPFOHANKj0mND9IBzVdsj/Bz7x97&#xA;laP+8D6VzjHcPBv+ckHc6xoycjwFvKwWuwJcAmn0Z1HYA9Eveyi8dzoEo/QHdNd050Yq63UJVlNC&#xA;CJBuCMqzi8cvcVfZmeeMHYq7FXYq7FXYqpTf3kH/ABkP/EGxVVxVjdySbiUkn7bdvfNhDkHClzUq&#xA;nxP3ZJDqnxP3YqmWiE+rKKmnEbdO+Y+o5Buw803zFchJdWJN4PalPuOZeH6WJQTf8at/DLgqL08k&#xA;XiU8T+rKsv0qE8zDZPJfz80SLVV0FZZpI0ha5fghHFm/dULAg9N6fPLcTXkYRlrW7FW1ZlYMpIYG&#xA;oI2IIxV9G27FoI2Y1JVST7kZiuQvxV2Kvlv82f8AyYes/wDGSP8A5Mpncdlf4vD8dXSan+8KS6N5&#xA;d1DVobua2Maw2Sq9zJK/AKrkjl8hSpzJzaiOMgH+Lk1wxmXLop6vod/pRt/rYSl1GZYWjYOCocp1&#xA;HuuHFmjkuuiygY82V/kn/wCTEsP+Mdx/yZbMHtn/ABc/D72/R/3gfS+cW7h4J/zkf/x29H/5hpP+&#xA;TmdR2B9EveyiwCy8j61eW9lPE9uo1Gos0kmVGcjlUUPSnHeubWeshEkG/Tz2TaB022ltfMtrazAC&#xA;WC8jikANRySUKd/mMsySEsZI6x/Qr7Izz5g7FXYq7FXYq7FVKb+8g/4yH/iDYqq4qxq4X/SJev22&#xA;/aPjmwidg4UuaVanrVnp00cMyTO0ilx6QZ6AMF3oa9W6DfMjHhlMWKap5BHmiNOvLfULKG9t+foz&#xA;ryTlyVqe4OQyQMJGJ5hlGQkLCd6ItJpOv2R3J7++Ymo5ByMPNMUvrJ7uSzS4ja7iUPLbh1Miq3Rm&#xA;QHkAcxXISvVf97B9H6jmXh+liWOzeZNPjvFtJFmWR39BH9MlGdn9MfEK7cgdz4HM0aeRje3erINP&#xA;/wB7I/n/AAzDyfSoTea7tYJIo5po4pJ24QI7BS7UrxQE/EflmGyeefnH/wBKj/o4/wCZWW4mvI8+&#xA;0+ye+vI7WN0jeSoDynigoCdzQ+GWktYRN3osttaNdfWbeVVcRskTkuGap6FR/L/nvgBTSXYUPo21&#xA;/wB5ov8AUX9WYrkKmKuxV8t/mz/5MPWf+Mkf/JlM7jsr/F4fjq6TU/3hSPRtSsLGSQ3mnR6jG/H4&#xA;JGZCvGv2WXxrmVmxyl9MuFrhIDmLWavqFleyxtaWEenogIMUTMwJZi1SXq23KgqelMOLHKI3lxIl&#xA;IHkKZZ+Sf/kxLD/jHcf8mWzA7Z/xc/D73I0f94H0vnFu4eCf85H/APHb0f8A5hpP+TmdR2B9Evey&#xA;iwe282aCiotx5Zs5SsfF3R5I2d6V5mvNR8QGwA2qO9c2ctLk6ZJJQMF9Be+Z7G4gtI7JGuLcfV4a&#xA;8AVdQSK779cslAxxEE3sVfYOcAwdirsVdirsVdiqlN/eQf8AGQ/8QbFVXFWMXKL9Yl2X7bfs++bG&#xA;B2DhSG6VanpN7dTJJa6i9kAArxpGjqwBJr8VaHfMjHljEUY8TVOBJ2NImwspba2EU0/1qSpYzOlC&#xA;eRr0B6DtkMkwTYFMoxod6d6GoE0tAB8I6CnfMTUcg5GHmjYtJ02HU7jVI4FXULqNIri5FebxxV9N&#xA;GPgnJuI7VPicxHIS7WF53JWpHIUqDQiqnoczMB2YliknlzWecZXX7niA3qqyISwNNlI48eg8e/jm&#xA;wGoh/MCsl0WGSB7eGSVp3QcWmf7TUHU++YOc2CapQns1pazyRSTQxyyQNzgd1DFGpTkhI+E/LMFk&#xA;88/OP/pUf9HH/MrLcTXkYBp9+1lK8iwxT80KFJlLLQkGtARvtlpDWCi5teWRSF02yjLIU5LEagEc&#xA;fhqx6DpWuCk2lWFD6Ntf95ov9Rf1ZiuQqYq7FXy3+bX/AJMTWf8AjJH/AMmUzuOyv8Xh+OpdLqv7&#xA;wsRzYOO7FWd/kl/5MOw/4x3H/Jls1fbP+Ln4fe5Wj/vA+l84t3DwT/nI/wD47ej/APMNJ/yczqOw&#xA;Pol72UXj+dAlHaF/x29P/wCYmH/k4MqzfRL3FX2bnnjB2KuxV2KuxV2KqU395B/xkP8AxBsVVcVY&#xA;1ccvrEux+23h45sI8g4UuanVvBvwySHVbwb8MVTLRK+rJWv2R1p4+2Y+o5Buw803zFchJdW/3sH0&#xA;fqOZeH6WJQTf8at/DLgqL0//AHsj+f8ADKsn0qE8zDZPN/zjBppB7f6R/wAystxNeR5tlrW7FXYq&#xA;+jbYEW8QOxCLUfRmK5CpirsVS2+8s+W9QuDc3+k2d3cEAGae3ikcgdBydSdsuhqckBUZSA8iWEsc&#xA;TuQEv1HyX5OTT7ll0HTlZYnKsLSAEEKdx8GWDWZv58v9MWJww7h8nP5Y/L1JXhfSdIWaOheM29sG&#xA;UN9moK1Fe2D85n/nz/0xXwodw+SK0jTfJ9rdO+j2unwXYBSRrOOBJAOpUmMBvoyGTPkmKlKRHmSy&#xA;jCI5AJxlLNBalomi6oIxqdhbXwiqYhcwxzca9ePMNStMsx5pw+kmPuNKlNz5I8mCa0A0DTgGlIYC&#xA;0g3HpOaH4PEZb+czfz5f6YraraeXfIkMiXdppmlxyQtyjuIoLdWRkPUOq7EEYJarMRRlIj3lbTuK&#xA;aGVeUTrIv8ykEfhmOq/FXYq7FXYq7FVKb+8g/wCMh/4g2KquKqbW9uxLNEjMepKgnJCR70cIa+q2&#xA;v++U/wCBH9MeOXejhHc76ra/75T/AIEf0x45d68I7l6RRx14IEr14gD9WAknmkABdgSteGFyC6Kx&#xA;HQsAf14RIjkqz6ra/wC+U/4Ef0w8Z71XJDChqkaqfEAA4DIlV+BVC7sLG9jEd5bxXMankqTIsgB6&#xA;VAYHCCtIT/DPlv8A6tVn/wBI8X/NOPEUUHf4Z8t/9Wqz/wCkeL/mnHiK0FyeXPLyOrppdorqQVYQ&#xA;RAgjcEELjxFaCYYEuxV2KuxVC6s6Jpd2zkKohkqx2A+E4QgqFzoehai31i4tIbkyhT6jqGDAUKn8&#xA;B+GNkLQXW2gaJbXS3VvYwxXKDikqoAygihAPbbGytI/Al2KoO+mijubBXcKzzkICaEn0nG334Qgo&#xA;T/CHlgy+q2mwPJvR3XkRXw5Vp7eGPEV4QjNP0jTNOMpsbaO39Ygy+mKciK0r9+JNqAi8CXYq7FXY&#xA;q7FVKb+8g/4yH/iDYqq4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkWou/1yT4jtQD7h&#xA;mbiHpDi5D6kNybxOWUwtvk3ifvxpbRelu31xRU0INR9GVZh6WzEd06zDclLNXZg8YBIFCaZkYBsg&#xA;pfybxOX0hfE7iVCGP2h398EhsrIMwWTGvzGnmh8pXbRO0bM0allNDxaQAio8cnDmxnyeMfWbn/fr&#xA;/wDBHL2l31m5/wB+v/wRxV31m5/36/8AwRxV7f5Glll8p6c8rl3MbAsxqaK7Abn2GY8+bdHknE39&#xA;5B/xkP8AxBsiyVcVdirDvNfla41PzXoeppqUtrHp8kbG0QEpJxmDmtGWnIDids2ek1IhhnHhB4uv&#xA;wcPPiMskTfJmOaxzHYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYqkOo/wC9svzH6hmdi+kOJk+pLNS1&#xA;Sx02AT3svpREkBuLNuqNIdlDH7KE5fjxSmai1SmI7luw1Ky1CFprOX1Y0cxuaFaOvUEMAccmOUDR&#xA;WMxLkmml/wC9qfI/qzHzfS3YvqToyxBxGXUSN9lCRU/IfRmE5SW6v/eR/I/rzJwckFjl95m0Sxmk&#xA;hurn05IjSQcJCAeIfqqkfZYZmw005CwEJtF/eJ/rD9eUHkqfyzRRJzldY02HJiFFTsNzmAyYx+Zf&#xA;/KIXX+vF/wAnBk8fNjPk8ZWKRhVULD2BPT/by9paKkCpBp44q1ir3LyD/wAohpv+o/8AycbMefNu&#xA;jyTqb+8g/wCMh/4g2RZKuKrJ54LeCSeeRYoIlLyyuQqIiirMzHYADck4qltzPDPc2M8DrNBLweOW&#xA;MhkZWYEMGBoQR4ZkYvpLTk+oJrmO3OxVD6jqFlptjPf30y29lao0tzcPskcaCrOx7Ko3J7DFUD/i&#xA;zy7+kYdN+vIL+4jEsVuQwcoyGQGhG3wiu+Xx02Qw4wPT3qj/AK/Z/wC/R45X4cu5bXJd2zsFSQFj&#xA;0GAwIVVyKuxV2KuxV2KuxV2KuxVIdR/3tl+Y/UMzsX0hxMn1JNrFjqV3Ggsb0Wbpy5coUmDcgBuG&#xA;6UFcycM4x+oX8aaZxJ5Gm9Isb+0ikW8u1u3kbmGSFYADQBvhUtUsRyJ8TjlnGR9Ir42sIkczadaX&#xA;/vanyP6sxc30t+L6kbPoWlz61a61LCW1Ozikt7afnIOMUxBkTgGCEMUUmo7DwGYTlKWr/wB5H8j+&#xA;vMnByQWH3Og6+5kMerqQ7khJLaMjgaCjEH4iF9t6Dpmyjnx9Y/ahOtLt7q3ijiurk3coevrFAhIJ&#xA;2FF22zFyyB3ApWRX2nafqFuba/toru2JVjBOiyoWU8lPFwRUEVGa5kx78y/+UQuv9eL/AJODJ4+b&#xA;GfJ5Raa/qtnaC1tpvThV/UAAFeVQevXqoy4gNVq3+K9b5s5mVmZlkJKIfiVAgYbbHiuPCF4ih77W&#xA;r29iMU3ARlw/FEVByUEDoOwY4gLb2PyD/wAohpv+o/8AycbKJ822PJOpv7yD/jIf+INkWSriqje2&#xA;dtfWc9ldJ6ltdRvDPHUjlHIpVlqCCKg9sVSx7K0sX02ytkEdtarHDbxkluKRkKqgtUmgHjmRi+gt&#xA;OT6gnOY7c7FVO4tre5geC5iSeCQUeKRQ6MOtCrVBxVLG8peXG1WHVfqEa39vGIoZlqvFApQKFUhN&#xA;lanTpmRHVZBDgB9PcqYfULP/AH0PDv3yrxJd60uS0tkYOkYDDocBmSqrkVdirsVdirsVdirsVdiq&#xA;Q6j/AL2y/MfqGZ2L6Q4mT6kNljB2KovS/wDe1Pkf1ZVm+lsxfUnmYTlJXq/95H8j+vMnByQUvy5i&#xA;vi/vE/1h+vE8kshzAZMW/Mv/AJRC6/14v+TgyePmxnyeL5e0uxV2KvcvIP8AyiGm/wCo/wDycbMe&#xA;fNujyTqb+8g/4yH/AIg2RZKuKuxVLdQr+kLTc/aXp/rZkYvpLTk+oJlmO3OxV2KuxV2KuxV2KuxV&#xA;2KuxV2KuxV2KuxVJNT13y9aTut5z9VSwcrBM+6KjHdENdpFpT5dQcsiZdGBEeqETzR5WaOQ8JBNH&#xA;GJWtmhkExQtxJVCPjp34174eKfejhiqJ5j8rPz48/gjaX4oJlBVRXYsoFT0CncnHin3rwxROl65o&#xA;F3crFY8zK/IAtDLGBxFSCXVQMjIyPNMQOiaXV1Ba273E5KxRirEKzHrT7Kgk5BmkVz5w8tmf0ZBO&#xA;7R8+bfVp6IEFSSSg8O1cmLHJjxBoeZ/KrCNo+UsUsYljljhkdCpptVQaEchUGnXJcUu9bC6TzP5X&#xA;ghS4/eMGBZFS3nZ9iBuoSq9duVK9sFyK2EdpPmLTdWklSyMjrEAfUaN0Rq0rwZgOVDscgRSQbR13&#xA;aW15bPbXUSzQSCjxuKgitf14AUpT/gnyp/1bIfuP9clxFjwh3+CfKn/Vsh+4/wBceIrwh3+CfKn/&#xA;AFbIfuP9ceIrwhN7e2gtoEt7eNYoYxxjjUUAA8BkWTpVYyQkCoVyT7Dgw/jiqpiqR3fnPQrVXLNO&#xA;7KjOEjt52LcCykL8FK1U9TkuEo4gsl84eWyDKXeRoJhBKBBIZImZeYZo+Pqcem4XvhAKCQqHzjoX&#xA;pzyepLS3ZUkX0JeVXbiOA4/H4njWg3ODhKeIIzTNd03U2dbN3fgoYlo3jFCSNuarXpXbsR44CKUF&#xA;Xvr2OziWR45JAzBKRIZGBNd6LvTbEBKSSeetMjVpHsr9YUUtJK1rIqrSmxrQ9/DbvTDwseJWfzjY&#xA;q8iraXkqx0PqxQGSNlP7SupKnfanX2x4V4nXHnLTIER2t7tldFkYpbuwQMK0kI2Rl/aU7jwx4U8S&#xA;O0bWYdVtjcRQT26ClFuY/TYhgGBAJO2+AilBtH4EuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Ku&#xA;xV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2Kv/2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>1737.000000</stDim:w>
            <stDim:h>700.000000</stDim:h>
            <stDim:unit>Pixels</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1  -1  scale 0 -700 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 700 li
1737 700 li
1737 0 li
cp
clp
0 0 mo
1737 0 li
1737 700 li
0 700 li
0 0 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
136 53 mo
295 53 li
303.284 53 310 59.7157 310 68 cv
310 263 li
310 271.284 303.284 278 295 278 cv
136 278 li
127.716 278 121 271.284 121 263 cv
121 68 li
121 59.7157 127.716 53 136 53 cv
cp
.160784 .384314 .85098 rgb
f
238.381 185.63 mo
237.228 185.63 236.378 185.35 235.831 184.79 cv
235.291 184.223 235.021 183.333 235.021 182.12 cv
235.021 176.94 li
233.061 176.94 li
233.061 175.5 li
235.021 175.5 li
235.021 172.52 li
236.821 172.52 li
236.821 175.5 li
240.061 175.5 li
240.061 176.94 li
236.821 176.94 li
236.821 181.9 li
236.821 182.727 236.958 183.303 237.231 183.63 cv
237.511 183.95 237.981 184.11 238.641 184.11 cv
238.941 184.11 239.211 184.093 239.451 184.06 cv
239.691 184.027 239.941 183.987 240.201 183.94 cv
240.201 185.4 li
239.934 185.467 239.641 185.52 239.321 185.56 cv
239.001 185.607 238.688 185.63 238.381 185.63 cv
cp
225.778 185.74 mo
225.568 185.74 li
224.415 185.74 223.535 185.36 222.928 184.6 cv
222.322 183.84 222.018 182.757 222.018 181.35 cv
222.018 175.5 li
223.818 175.5 li
223.818 181.12 li
223.818 183.173 224.552 184.2 226.018 184.2 cv
226.218 184.2 li
226.925 184.2 227.525 183.973 228.018 183.52 cv
228.518 183.067 228.888 182.493 229.128 181.8 cv
229.128 175.5 li
230.928 175.5 li
230.928 185.5 li
229.128 185.5 li
229.128 183.77 li
228.762 184.383 228.295 184.867 227.728 185.22 cv
227.168 185.567 226.518 185.74 225.778 185.74 cv
cp
214.476 184.2 mo
214.666 184.2 li
215.58 184.2 216.303 183.877 216.836 183.23 cv
217.376 182.583 217.646 181.673 217.646 180.5 cv
217.646 179.32 217.376 178.41 216.836 177.77 cv
216.303 177.123 215.58 176.8 214.666 176.8 cv
214.476 176.8 li
213.816 176.8 213.233 177.01 212.726 177.43 cv
212.226 177.843 211.84 178.387 211.566 179.06 cv
211.566 181.94 li
211.84 182.613 212.226 183.16 212.726 183.58 cv
213.233 183.993 213.816 184.2 214.476 184.2 cv
cp
211.566 189.7 mo
209.766 189.7 li
209.766 175.5 li
211.566 175.5 li
211.566 177.05 li
211.933 176.457 212.406 176.01 212.986 175.71 cv
213.573 175.41 214.21 175.26 214.896 175.26 cv
215.106 175.26 li
215.993 175.26 216.763 175.483 217.416 175.93 cv
218.076 176.37 218.59 176.983 218.956 177.77 cv
219.323 178.557 219.506 179.467 219.506 180.5 cv
219.506 181.527 219.323 182.437 218.956 183.23 cv
218.59 184.017 218.076 184.633 217.416 185.08 cv
216.763 185.52 215.993 185.74 215.106 185.74 cv
214.896 185.74 li
214.19 185.74 213.546 185.58 212.966 185.26 cv
212.386 184.94 211.92 184.467 211.566 183.84 cv
211.566 189.7 li
cp
197.774 185.5 mo
197.774 175.5 li
199.574 175.5 li
199.574 177.23 li
199.948 176.617 200.414 176.137 200.974 175.79 cv
201.541 175.437 202.194 175.26 202.934 175.26 cv
203.144 175.26 li
204.258 175.26 205.128 175.64 205.754 176.4 cv
206.381 177.16 206.694 178.243 206.694 179.65 cv
206.694 185.5 li
204.894 185.5 li
204.894 179.88 li
204.894 177.827 204.161 176.8 202.694 176.8 cv
202.494 176.8 li
201.781 176.8 201.174 177.027 200.674 177.48 cv
200.181 177.933 199.814 178.51 199.574 179.21 cv
199.574 185.5 li
197.774 185.5 li
cp
192.151 185.5 mo
192.151 171.5 li
194.061 171.5 li
194.061 185.5 li
192.151 185.5 li
cp
234.28 160.14 mo
234.47 160.14 li
235.383 160.14 236.113 159.867 236.66 159.32 cv
237.213 158.773 237.49 158.023 237.49 157.07 cv
237.49 156.163 237.216 155.44 236.67 154.9 cv
236.123 154.353 235.39 154.08 234.47 154.08 cv
234.28 154.08 li
233.52 154.08 232.863 154.263 232.31 154.63 cv
231.763 154.997 231.296 155.537 230.91 156.25 cv
231.016 157.21 231.24 157.973 231.58 158.54 cv
231.926 159.107 232.336 159.517 232.81 159.77 cv
233.29 160.017 233.78 160.14 234.28 160.14 cv
cp
234.28 161.74 mo
233.34 161.74 232.46 161.51 231.64 161.05 cv
230.826 160.583 230.166 159.85 229.66 158.85 cv
229.16 157.843 228.91 156.533 228.91 154.92 cv
228.91 153.247 229.15 151.843 229.63 150.71 cv
230.116 149.57 230.776 148.71 231.61 148.13 cv
232.443 147.55 233.386 147.26 234.44 147.26 cv
234.65 147.26 li
235.523 147.26 236.326 147.43 237.06 147.77 cv
237.793 148.11 238.433 148.647 238.98 149.38 cv
237.64 150.47 li
237.153 149.857 236.663 149.437 236.17 149.21 cv
235.676 148.977 235.193 148.86 234.72 148.86 cv
234.53 148.86 li
233.483 148.86 232.616 149.323 231.93 150.25 cv
231.25 151.177 230.89 152.597 230.85 154.51 cv
231.243 153.857 231.773 153.353 232.44 153 cv
233.106 152.647 233.83 152.47 234.61 152.47 cv
234.82 152.47 li
235.686 152.47 236.466 152.66 237.16 153.04 cv
237.853 153.42 238.403 153.953 238.81 154.64 cv
239.216 155.32 239.42 156.11 239.42 157.01 cv
239.42 157.943 239.21 158.767 238.79 159.48 cv
238.376 160.193 237.8 160.75 237.06 161.15 cv
236.32 161.543 235.463 161.74 234.49 161.74 cv
234.28 161.74 li
cp
223.281 161.5 mo
223.281 149.13 li
220.201 152.12 li
219.041 150.95 li
222.691 147.5 li
225.141 147.5 li
225.141 161.5 li
223.281 161.5 li
cp
207.404 161.5 mo
207.404 147.5 li
217.224 147.5 li
217.224 149.16 li
209.314 149.16 li
209.314 153.77 li
215.904 153.77 li
215.904 155.44 li
209.314 155.44 li
209.314 161.5 li
207.404 161.5 li
cp
198.92 155.24 mo
194.47 155.24 li
194.47 159.89 li
198.98 159.89 li
200.947 159.89 201.93 159.113 201.93 157.56 cv
201.93 156.787 201.707 156.207 201.26 155.82 cv
200.814 155.433 200.034 155.24 198.92 155.24 cv
cp
198.32 149.11 mo
194.47 149.11 li
194.47 153.64 li
198.43 153.64 li
200.264 153.64 201.18 152.883 201.18 151.37 cv
201.18 150.603 200.947 150.037 200.48 149.67 cv
200.014 149.297 199.294 149.11 198.32 149.11 cv
cp
192.58 161.5 mo
192.58 147.5 li
198.43 147.5 li
199.964 147.5 201.124 147.817 201.91 148.45 cv
202.697 149.077 203.09 149.953 203.09 151.08 cv
203.09 151.807 202.917 152.437 202.57 152.97 cv
202.23 153.497 201.64 153.887 200.8 154.14 cv
201.874 154.367 202.654 154.793 203.14 155.42 cv
203.627 156.04 203.87 156.797 203.87 157.69 cv
203.87 158.897 203.45 159.833 202.61 160.5 cv
201.777 161.167 200.574 161.5 199 161.5 cv
192.58 161.5 li
cp
1 1 1 rgb
f
214.5 280 mo
214.5 380 li
216.5 380 li
216.5 280 li
214.5 280 li
cp
214.793 380.707 mo
215.183 381.098 215.817 381.098 216.207 380.707 cv
222.571 374.343 li
222.962 373.953 222.962 373.319 222.571 372.929 cv
222.181 372.538 221.547 372.538 221.157 372.929 cv
215.5 378.586 li
209.843 372.929 li
209.453 372.538 208.819 372.538 208.429 372.929 cv
208.038 373.319 208.038 373.953 208.429 374.343 cv
214.793 380.707 li
cp
216.5 280 mo
216.5 279 li
214.5 279 li
214.5 280 li
216.5 280 li
cp
.521569 .584314 .643137 rgb
f
136 382 mo
295 382 li
303.284 382 310 388.716 310 397 cv
310 592 li
310 600.284 303.284 607 295 607 cv
136 607 li
127.716 607 121 600.284 121 592 cv
121 397 li
121 388.716 127.716 382 136 382 cv
cp
.8 .901961 1 rgb
f
238.381 514.63 mo
237.228 514.63 236.378 514.35 235.831 513.79 cv
235.291 513.223 235.021 512.333 235.021 511.12 cv
235.021 505.94 li
233.061 505.94 li
233.061 504.5 li
235.021 504.5 li
235.021 501.52 li
236.821 501.52 li
236.821 504.5 li
240.061 504.5 li
240.061 505.94 li
236.821 505.94 li
236.821 510.9 li
236.821 511.727 236.958 512.303 237.231 512.63 cv
237.511 512.95 237.981 513.11 238.641 513.11 cv
238.941 513.11 239.211 513.093 239.451 513.06 cv
239.691 513.027 239.941 512.987 240.201 512.94 cv
240.201 514.4 li
239.934 514.467 239.641 514.52 239.321 514.56 cv
239.001 514.607 238.688 514.63 238.381 514.63 cv
cp
225.778 514.74 mo
225.568 514.74 li
224.415 514.74 223.535 514.36 222.928 513.6 cv
222.322 512.84 222.018 511.757 222.018 510.35 cv
222.018 504.5 li
223.818 504.5 li
223.818 510.12 li
223.818 512.173 224.552 513.2 226.018 513.2 cv
226.218 513.2 li
226.925 513.2 227.525 512.973 228.018 512.52 cv
228.518 512.067 228.888 511.493 229.128 510.8 cv
229.128 504.5 li
230.928 504.5 li
230.928 514.5 li
229.128 514.5 li
229.128 512.77 li
228.762 513.383 228.295 513.867 227.728 514.22 cv
227.168 514.567 226.518 514.74 225.778 514.74 cv
cp
214.476 513.2 mo
214.666 513.2 li
215.58 513.2 216.303 512.877 216.836 512.23 cv
217.376 511.583 217.646 510.673 217.646 509.5 cv
217.646 508.32 217.376 507.41 216.836 506.77 cv
216.303 506.123 215.58 505.8 214.666 505.8 cv
214.476 505.8 li
213.816 505.8 213.233 506.01 212.726 506.43 cv
212.226 506.843 211.84 507.387 211.566 508.06 cv
211.566 510.94 li
211.84 511.613 212.226 512.16 212.726 512.58 cv
213.233 512.993 213.816 513.2 214.476 513.2 cv
cp
211.566 518.7 mo
209.766 518.7 li
209.766 504.5 li
211.566 504.5 li
211.566 506.05 li
211.933 505.457 212.406 505.01 212.986 504.71 cv
213.573 504.41 214.21 504.26 214.896 504.26 cv
215.106 504.26 li
215.993 504.26 216.763 504.483 217.416 504.93 cv
218.076 505.37 218.59 505.983 218.956 506.77 cv
219.323 507.557 219.506 508.467 219.506 509.5 cv
219.506 510.527 219.323 511.437 218.956 512.23 cv
218.59 513.017 218.076 513.633 217.416 514.08 cv
216.763 514.52 215.993 514.74 215.106 514.74 cv
214.896 514.74 li
214.19 514.74 213.546 514.58 212.966 514.26 cv
212.386 513.94 211.92 513.467 211.566 512.84 cv
211.566 518.7 li
cp
197.774 514.5 mo
197.774 504.5 li
199.574 504.5 li
199.574 506.23 li
199.948 505.617 200.414 505.137 200.974 504.79 cv
201.541 504.437 202.194 504.26 202.934 504.26 cv
203.144 504.26 li
204.258 504.26 205.128 504.64 205.754 505.4 cv
206.381 506.16 206.694 507.243 206.694 508.65 cv
206.694 514.5 li
204.894 514.5 li
204.894 508.88 li
204.894 506.827 204.161 505.8 202.694 505.8 cv
202.494 505.8 li
201.781 505.8 201.174 506.027 200.674 506.48 cv
200.181 506.933 199.814 507.51 199.574 508.21 cv
199.574 514.5 li
197.774 514.5 li
cp
192.151 514.5 mo
192.151 500.5 li
194.061 500.5 li
194.061 514.5 li
192.151 514.5 li
cp
228.982 489.14 mo
229.242 489.14 li
230.208 489.14 230.972 488.917 231.532 488.47 cv
232.098 488.023 232.382 487.4 232.382 486.6 cv
232.382 485.8 232.095 485.18 231.522 484.74 cv
230.948 484.293 230.188 484.07 229.242 484.07 cv
228.982 484.07 li
228.035 484.07 227.275 484.293 226.702 484.74 cv
226.128 485.18 225.842 485.8 225.842 486.6 cv
225.842 487.4 226.122 488.023 226.682 488.47 cv
227.248 488.917 228.015 489.14 228.982 489.14 cv
cp
228.982 482.51 mo
229.242 482.51 li
230.082 482.51 230.758 482.31 231.272 481.91 cv
231.785 481.503 232.042 480.917 232.042 480.15 cv
232.042 479.403 231.785 478.833 231.272 478.44 cv
230.758 478.04 230.082 477.84 229.242 477.84 cv
228.982 477.84 li
228.142 477.84 227.465 478.04 226.952 478.44 cv
226.438 478.833 226.182 479.403 226.182 480.15 cv
226.182 480.917 226.438 481.503 226.952 481.91 cv
227.465 482.31 228.142 482.51 228.982 482.51 cv
cp
228.972 490.74 mo
227.365 490.74 226.118 490.367 225.232 489.62 cv
224.352 488.867 223.912 487.893 223.912 486.7 cv
223.912 485.873 224.115 485.16 224.522 484.56 cv
224.935 483.953 225.542 483.5 226.342 483.2 cv
225.642 482.907 225.122 482.49 224.782 481.95 cv
224.442 481.403 224.272 480.773 224.272 480.06 cv
224.272 478.947 224.688 478.037 225.522 477.33 cv
226.355 476.617 227.505 476.26 228.972 476.26 cv
229.252 476.26 li
230.725 476.26 231.875 476.617 232.702 477.33 cv
233.535 478.037 233.952 478.947 233.952 480.06 cv
233.952 480.773 233.782 481.403 233.442 481.95 cv
233.102 482.49 232.582 482.907 231.882 483.2 cv
232.682 483.5 233.285 483.953 233.692 484.56 cv
234.105 485.16 234.312 485.873 234.312 486.7 cv
234.312 487.893 233.868 488.867 232.982 489.62 cv
232.102 490.367 230.858 490.74 229.252 490.74 cv
228.972 490.74 li
cp
216.062 478.13 mo
212.332 478.13 li
212.332 484 li
216.062 484 li
218.342 484 219.482 483.023 219.482 481.07 cv
219.482 479.11 218.342 478.13 216.062 478.13 cv
cp
210.442 490.5 mo
210.442 476.5 li
216.242 476.5 li
217.915 476.5 219.195 476.893 220.082 477.68 cv
220.975 478.467 221.422 479.597 221.422 481.07 cv
221.422 482.537 220.975 483.663 220.082 484.45 cv
219.195 485.237 217.915 485.63 216.242 485.63 cv
212.332 485.63 li
212.332 490.5 li
210.442 490.5 li
cp
197.375 490.5 mo
197.375 476.5 li
207.195 476.5 li
207.195 478.16 li
199.285 478.16 li
199.285 482.77 li
205.875 482.77 li
205.875 484.44 li
199.285 484.44 li
199.285 490.5 li
197.375 490.5 li
cp
0 .392157 .878431 rgb
f
308.105 647.117 mo
307.019 647.117 306.212 646.856 305.684 646.334 cv
305.162 645.812 304.901 644.993 304.901 643.877 cv
304.901 639.458 li
303.119 639.458 li
303.119 637.973 li
304.901 637.973 li
304.901 635.318 li
306.809 635.318 li
306.809 637.973 li
309.725 637.973 li
309.725 639.458 li
306.809 639.458 li
306.809 643.625 li
306.809 644.339 306.938 644.837 307.196 645.119 cv
307.454 645.401 307.871 645.542 308.447 645.542 cv
308.711 645.542 308.954 645.527 309.176 645.497 cv
309.398 645.467 309.623 645.431 309.851 645.389 cv
309.851 646.901 li
309.305 647.045 308.723 647.117 308.105 647.117 cv
cp
296.52 647.216 mo
296.313 647.216 li
295.281 647.216 294.492 646.868 293.946 646.172 cv
293.406 645.476 293.136 644.498 293.136 643.238 cv
293.136 637.973 li
295.044 637.973 li
295.044 643.013 li
295.044 644.747 295.647 645.614 296.853 645.614 cv
297.042 645.614 li
297.6 645.614 298.086 645.431 298.5 645.065 cv
298.92 644.699 299.235 644.228 299.445 643.652 cv
299.445 637.973 li
301.353 637.973 li
301.353 647 li
299.472 647 li
299.472 645.479 li
299.142 646.025 298.728 646.451 298.23 646.757 cv
297.738 647.063 297.168 647.216 296.52 647.216 cv
cp
286.394 645.614 mo
286.565 645.614 li
287.327 645.614 287.93 645.341 288.374 644.795 cv
288.818 644.249 289.04 643.481 289.04 642.491 cv
289.04 641.495 288.818 640.724 288.374 640.178 cv
287.93 639.632 287.327 639.359 286.565 639.359 cv
286.394 639.359 li
285.854 639.359 285.377 639.527 284.963 639.863 cv
284.555 640.193 284.234 640.634 284 641.186 cv
284 643.787 li
284.234 644.339 284.555 644.783 284.963 645.119 cv
285.377 645.449 285.854 645.614 286.394 645.614 cv
cp
284 650.78 mo
282.092 650.78 li
282.092 637.973 li
283.973 637.973 li
283.973 639.278 li
284.303 638.774 284.72 638.393 285.224 638.135 cv
285.728 637.877 286.277 637.748 286.871 637.748 cv
287.078 637.748 li
287.858 637.748 288.542 637.949 289.13 638.351 cv
289.724 638.747 290.186 639.302 290.516 640.016 cv
290.852 640.724 291.02 641.549 291.02 642.491 cv
291.02 643.427 290.852 644.252 290.516 644.966 cv
290.186 645.674 289.724 646.226 289.13 646.622 cv
288.542 647.018 287.858 647.216 287.078 647.216 cv
286.871 647.216 li
286.265 647.216 285.713 647.081 285.215 646.811 cv
284.723 646.541 284.318 646.145 284 645.623 cv
284 650.78 li
cp
271.264 647 mo
271.264 637.973 li
273.145 637.973 li
273.145 639.494 li
273.475 638.948 273.889 638.522 274.387 638.216 cv
274.885 637.904 275.458 637.748 276.106 637.748 cv
276.313 637.748 li
277.315 637.748 278.095 638.096 278.653 638.792 cv
279.211 639.488 279.49 640.466 279.49 641.726 cv
279.49 647 li
277.582 647 li
277.582 641.96 li
277.582 640.226 276.979 639.359 275.773 639.359 cv
275.584 639.359 li
275.02 639.359 274.528 639.542 274.108 639.908 cv
273.694 640.274 273.382 640.745 273.172 641.321 cv
273.172 647 li
271.264 647 li
cp
266.606 647 mo
266.606 637.973 li
268.514 637.973 li
268.514 647 li
266.606 647 li
cp
267.56 636.209 mo
267.176 636.209 266.873 636.101 266.651 635.885 cv
266.429 635.669 266.318 635.387 266.318 635.039 cv
266.318 634.691 266.429 634.409 266.651 634.193 cv
266.873 633.977 267.176 633.869 267.56 633.869 cv
267.95 633.869 268.253 633.977 268.469 634.193 cv
268.691 634.409 268.802 634.691 268.802 635.039 cv
268.802 635.387 268.691 635.669 268.469 635.885 cv
268.253 636.101 267.95 636.209 267.56 636.209 cv
cp
256.229 648.908 mo
256.229 647.648 li
265.229 647.648 li
265.229 648.908 li
256.229 648.908 li
cp
250.504 647 mo
250.504 637.973 li
252.385 637.973 li
252.385 639.458 li
252.667 638.906 253.018 638.483 253.438 638.189 cv
253.858 637.895 254.341 637.748 254.887 637.748 cv
255.163 637.748 255.43 637.775 255.688 637.829 cv
255.688 639.665 li
255.382 639.593 255.052 639.557 254.698 639.557 cv
254.104 639.557 253.621 639.728 253.249 640.07 cv
252.877 640.406 252.598 640.88 252.412 641.492 cv
252.412 647 li
250.504 647 li
cp
243.532 645.614 mo
243.721 645.614 li
244.507 645.614 245.125 645.329 245.575 644.759 cv
246.031 644.189 246.259 643.43 246.259 642.482 cv
246.259 641.534 246.031 640.778 245.575 640.214 cv
245.125 639.644 244.507 639.359 243.721 639.359 cv
243.532 639.359 li
242.746 639.359 242.125 639.644 241.669 640.214 cv
241.213 640.778 240.985 641.534 240.985 642.482 cv
240.985 643.43 241.213 644.189 241.669 644.759 cv
242.125 645.329 242.746 645.614 243.532 645.614 cv
cp
243.73 647.216 mo
243.523 647.216 li
242.611 647.216 241.816 647.015 241.138 646.613 cv
240.46 646.205 239.935 645.644 239.563 644.93 cv
239.197 644.216 239.014 643.4 239.014 642.482 cv
239.014 641.564 239.197 640.748 239.563 640.034 cv
239.935 639.32 240.46 638.762 241.138 638.36 cv
241.816 637.952 242.611 637.748 243.523 637.748 cv
243.73 637.748 li
244.648 637.748 245.443 637.952 246.115 638.36 cv
246.793 638.762 247.315 639.32 247.681 640.034 cv
248.053 640.748 248.239 641.564 248.239 642.482 cv
248.239 643.4 248.053 644.216 247.681 644.93 cv
247.315 645.644 246.793 646.205 246.115 646.613 cv
245.443 647.015 244.648 647.216 243.73 647.216 cv
cp
235.788 647.117 mo
234.702 647.117 233.895 646.856 233.367 646.334 cv
232.845 645.812 232.584 644.993 232.584 643.877 cv
232.584 639.458 li
230.802 639.458 li
230.802 637.973 li
232.584 637.973 li
232.584 635.318 li
234.492 635.318 li
234.492 637.973 li
237.408 637.973 li
237.408 639.458 li
234.492 639.458 li
234.492 643.625 li
234.492 644.339 234.621 644.837 234.879 645.119 cv
235.137 645.401 235.554 645.542 236.13 645.542 cv
236.394 645.542 236.637 645.527 236.859 645.497 cv
237.081 645.467 237.306 645.431 237.534 645.389 cv
237.534 646.901 li
236.988 647.045 236.406 647.117 235.788 647.117 cv
cp
225.864 647.216 mo
225 647.216 224.235 647.027 223.569 646.649 cv
222.909 646.265 222.39 645.719 222.012 645.011 cv
221.64 644.303 221.454 643.463 221.454 642.491 cv
221.454 641.513 221.64 640.67 222.012 639.962 cv
222.384 639.254 222.9 638.708 223.56 638.324 cv
224.226 637.94 224.994 637.748 225.864 637.748 cv
226.071 637.748 li
226.791 637.748 227.463 637.928 228.087 638.288 cv
228.717 638.648 229.218 639.14 229.59 639.764 cv
228.132 640.682 li
227.88 640.274 227.58 639.953 227.232 639.719 cv
226.884 639.485 226.491 639.368 226.053 639.368 cv
225.854 639.368 li
225.111 639.368 224.52 639.65 224.082 640.214 cv
223.65 640.778 223.434 641.534 223.434 642.482 cv
223.434 643.436 223.65 644.195 224.082 644.759 cv
224.52 645.323 225.111 645.605 225.854 645.605 cv
226.053 645.605 li
226.497 645.605 226.902 645.503 227.268 645.299 cv
227.634 645.089 227.949 644.81 228.213 644.462 cv
229.59 645.47 li
229.194 646.016 228.69 646.445 228.078 646.757 cv
227.466 647.063 226.797 647.216 226.071 647.216 cv
225.864 647.216 li
cp
214.801 645.677 mo
215.455 645.677 216.001 645.521 216.439 645.209 cv
216.883 644.897 217.219 644.465 217.447 643.913 cv
217.447 643.067 li
215.215 643.067 li
213.901 643.067 213.244 643.508 213.244 644.39 cv
213.244 644.792 213.373 645.107 213.631 645.335 cv
213.895 645.563 214.285 645.677 214.801 645.677 cv
cp
214.297 647.18 mo
213.373 647.18 212.647 646.94 212.119 646.46 cv
211.597 645.974 211.336 645.332 211.336 644.534 cv
211.336 643.652 211.657 642.974 212.299 642.5 cv
212.947 642.02 213.865 641.78 215.053 641.78 cv
217.447 641.78 li
217.447 641.636 li
217.447 640.1 216.766 639.332 215.404 639.332 cv
214.84 639.332 214.363 639.437 213.973 639.647 cv
213.583 639.857 213.262 640.16 213.01 640.556 cv
211.732 639.629 li
212.116 639.023 212.623 638.558 213.253 638.234 cv
213.889 637.91 214.612 637.748 215.422 637.748 cv
215.629 637.748 li
216.757 637.748 217.657 638.072 218.329 638.72 cv
219.001 639.362 219.337 640.31 219.337 641.564 cv
219.337 647 li
217.501 647 li
217.501 645.515 li
217.159 646.049 216.715 646.46 216.169 646.748 cv
215.629 647.036 215.005 647.18 214.297 647.18 cv
cp
205.511 647 mo
205.511 639.458 li
203.819 639.458 li
203.819 637.973 li
205.511 637.973 li
205.511 637.046 li
205.511 635.936 205.799 635.093 206.375 634.517 cv
206.951 633.935 207.761 633.644 208.805 633.644 cv
209.099 633.644 209.384 633.662 209.66 633.698 cv
209.942 633.734 210.188 633.782 210.398 633.842 cv
210.398 635.354 li
209.93 635.246 209.51 635.192 209.138 635.192 cv
208.592 635.192 208.169 635.342 207.869 635.642 cv
207.569 635.936 207.419 636.383 207.419 636.983 cv
207.419 637.973 li
210.308 637.973 li
210.308 639.458 li
207.419 639.458 li
207.419 647 li
205.511 647 li
cp
194.477 648.908 mo
194.477 647.648 li
203.477 647.648 li
203.477 648.908 li
194.477 648.908 li
cp
188.686 645.425 mo
188.857 645.425 li
189.379 645.425 189.844 645.275 190.252 644.975 cv
190.666 644.669 190.987 644.252 191.215 643.724 cv
191.215 641.06 li
190.987 640.538 190.666 640.124 190.252 639.818 cv
189.844 639.512 189.379 639.359 188.857 639.359 cv
188.686 639.359 li
187.936 639.359 187.339 639.623 186.895 640.151 cv
186.457 640.679 186.238 641.426 186.238 642.392 cv
186.238 643.358 186.457 644.105 186.895 644.633 cv
187.339 645.161 187.936 645.425 188.686 645.425 cv
cp
188.389 647.036 mo
188.182 647.036 li
187.402 647.036 186.718 646.841 186.13 646.451 cv
185.542 646.061 185.083 645.518 184.753 644.822 cv
184.423 644.12 184.258 643.31 184.258 642.392 cv
184.258 641.468 184.423 640.658 184.753 639.962 cv
185.083 639.266 185.542 638.723 186.13 638.333 cv
186.718 637.943 187.402 637.748 188.182 637.748 cv
188.389 637.748 li
188.977 637.748 189.517 637.874 190.009 638.126 cv
190.507 638.378 190.921 638.747 191.251 639.233 cv
191.251 638.009 li
193.087 638.009 li
193.087 646.244 li
193.087 647.312 192.901 648.197 192.529 648.899 cv
192.157 649.607 191.644 650.132 190.99 650.474 cv
190.336 650.822 189.583 650.996 188.731 650.996 cv
188.524 650.996 li
187.726 650.996 186.997 650.837 186.337 650.519 cv
185.683 650.207 185.149 649.754 184.735 649.16 cv
186.022 648.107 li
186.31 648.527 186.658 648.848 187.066 649.07 cv
187.48 649.292 187.969 649.403 188.533 649.403 cv
189.391 649.403 190.051 649.157 190.513 648.665 cv
190.981 648.173 191.215 647.426 191.215 646.424 cv
191.215 645.524 li
190.891 646.022 190.486 646.4 190 646.658 cv
189.514 646.91 188.977 647.036 188.389 647.036 cv
cp
173.916 647 mo
173.916 637.973 li
175.797 637.973 li
175.797 639.494 li
176.127 638.948 176.541 638.522 177.039 638.216 cv
177.537 637.904 178.11 637.748 178.758 637.748 cv
178.965 637.748 li
179.967 637.748 180.747 638.096 181.305 638.792 cv
181.863 639.488 182.142 640.466 182.142 641.726 cv
182.142 647 li
180.234 647 li
180.234 641.96 li
180.234 640.226 179.631 639.359 178.425 639.359 cv
178.236 639.359 li
177.672 639.359 177.18 639.542 176.76 639.908 cv
176.346 640.274 176.034 640.745 175.824 641.321 cv
175.824 647 li
173.916 647 li
cp
169.258 647 mo
169.258 637.973 li
171.166 637.973 li
171.166 647 li
169.258 647 li
cp
170.212 636.209 mo
169.828 636.209 169.525 636.101 169.303 635.885 cv
169.081 635.669 168.97 635.387 168.97 635.039 cv
168.97 634.691 169.081 634.409 169.303 634.193 cv
169.525 633.977 169.828 633.869 170.212 633.869 cv
170.602 633.869 170.905 633.977 171.121 634.193 cv
171.343 634.409 171.454 634.691 171.454 635.039 cv
171.454 635.387 171.343 635.669 171.121 635.885 cv
170.905 636.101 170.602 636.209 170.212 636.209 cv
cp
164.6 647 mo
164.6 633.86 li
166.508 633.86 li
166.508 647 li
164.6 647 li
cp
157.461 645.677 mo
158.115 645.677 158.661 645.521 159.099 645.209 cv
159.543 644.897 159.879 644.465 160.107 643.913 cv
160.107 643.067 li
157.875 643.067 li
156.561 643.067 155.904 643.508 155.904 644.39 cv
155.904 644.792 156.033 645.107 156.291 645.335 cv
156.555 645.563 156.945 645.677 157.461 645.677 cv
cp
156.957 647.18 mo
156.033 647.18 155.307 646.94 154.779 646.46 cv
154.257 645.974 153.996 645.332 153.996 644.534 cv
153.996 643.652 154.317 642.974 154.959 642.5 cv
155.607 642.02 156.525 641.78 157.713 641.78 cv
160.107 641.78 li
160.107 641.636 li
160.107 640.1 159.426 639.332 158.064 639.332 cv
157.5 639.332 157.023 639.437 156.633 639.647 cv
156.243 639.857 155.922 640.16 155.67 640.556 cv
154.392 639.629 li
154.776 639.023 155.283 638.558 155.913 638.234 cv
156.549 637.91 157.272 637.748 158.082 637.748 cv
158.289 637.748 li
159.417 637.748 160.317 638.072 160.989 638.72 cv
161.661 639.362 161.997 640.31 161.997 641.564 cv
161.997 647 li
160.161 647 li
160.161 645.515 li
159.819 646.049 159.375 646.46 158.829 646.748 cv
158.289 647.036 157.665 647.18 156.957 647.18 cv
cp
148.731 647.216 mo
147.867 647.216 147.102 647.027 146.436 646.649 cv
145.776 646.265 145.257 645.719 144.879 645.011 cv
144.507 644.303 144.321 643.463 144.321 642.491 cv
144.321 641.513 144.507 640.67 144.879 639.962 cv
145.251 639.254 145.767 638.708 146.427 638.324 cv
147.093 637.94 147.861 637.748 148.731 637.748 cv
148.938 637.748 li
149.658 637.748 150.33 637.928 150.954 638.288 cv
151.584 638.648 152.085 639.14 152.457 639.764 cv
150.999 640.682 li
150.747 640.274 150.447 639.953 150.099 639.719 cv
149.751 639.485 149.358 639.368 148.92 639.368 cv
148.722 639.368 li
147.978 639.368 147.387 639.65 146.949 640.214 cv
146.517 640.778 146.301 641.534 146.301 642.482 cv
146.301 643.436 146.517 644.195 146.949 644.759 cv
147.387 645.323 147.978 645.605 148.722 645.605 cv
148.92 645.605 li
149.364 645.605 149.769 645.503 150.135 645.299 cv
150.501 645.089 150.816 644.81 151.08 644.462 cv
152.457 645.47 li
152.061 646.016 151.557 646.445 150.945 646.757 cv
150.333 647.063 149.664 647.216 148.938 647.216 cv
148.731 647.216 li
cp
138.888 647.216 mo
137.082 647.216 135.759 646.622 134.919 645.434 cv
136.143 644.399 li
136.467 644.849 136.863 645.182 137.331 645.398 cv
137.799 645.614 138.309 645.722 138.861 645.722 cv
139.032 645.722 li
139.602 645.722 140.043 645.623 140.355 645.425 cv
140.673 645.221 140.832 644.936 140.832 644.57 cv
140.832 644.252 140.724 643.997 140.508 643.805 cv
140.298 643.613 139.917 643.457 139.365 643.337 cv
137.88 643.013 li
136.11 642.629 135.225 641.798 135.225 640.52 cv
135.225 639.68 135.558 639.008 136.224 638.504 cv
136.89 638 137.76 637.748 138.834 637.748 cv
139.041 637.748 li
139.785 637.748 140.457 637.892 141.057 638.18 cv
141.663 638.462 142.161 638.873 142.551 639.413 cv
141.354 640.403 li
141.06 640.007 140.715 639.716 140.319 639.53 cv
139.923 639.338 139.491 639.242 139.023 639.242 cv
138.852 639.242 li
138.324 639.242 137.898 639.344 137.574 639.548 cv
137.256 639.746 137.097 640.025 137.097 640.385 cv
137.097 640.667 137.199 640.892 137.403 641.06 cv
137.607 641.228 137.964 641.366 138.474 641.474 cv
140.112 641.825 li
140.934 642.005 141.57 642.311 142.02 642.743 cv
142.476 643.169 142.704 643.745 142.704 644.471 cv
142.704 645.287 142.389 645.95 141.759 646.46 cv
141.129 646.964 140.241 647.216 139.095 647.216 cv
138.888 647.216 li
cp
123.036 647 mo
120.93 647 li
121.392 646.268 121.899 645.518 122.451 644.75 cv
123.003 643.982 123.585 643.217 124.197 642.455 cv
123.603 641.687 123.036 640.925 122.496 640.169 cv
121.962 639.413 121.476 638.681 121.038 637.973 cv
123.261 637.973 li
123.561 638.483 123.9 639.023 124.278 639.593 cv
124.662 640.157 125.061 640.721 125.475 641.285 cv
125.889 640.727 126.285 640.163 126.663 639.593 cv
127.047 639.023 127.386 638.483 127.68 637.973 cv
129.795 637.973 li
129.345 638.681 128.853 639.404 128.319 640.142 cv
127.791 640.88 127.23 641.627 126.636 642.383 cv
127.248 643.175 127.83 643.961 128.382 644.741 cv
128.94 645.515 129.447 646.268 129.903 647 cv
127.689 647 li
127.371 646.466 127.008 645.902 126.6 645.308 cv
126.192 644.708 125.778 644.12 125.358 643.544 cv
124.926 644.126 124.509 644.714 124.107 645.308 cv
123.705 645.902 123.348 646.466 123.036 647 cv
cp
.4 .466667 .533333 rgb
f
304.819 325.287 mo
304.177 325.287 303.646 325.512 303.226 325.962 cv
302.806 326.412 302.548 327.024 302.452 327.798 cv
307.195 327.798 li
307.141 327.078 306.925 326.481 306.547 326.007 cv
306.175 325.527 305.653 325.287 304.981 325.287 cv
304.819 325.287 li
cp
304.9 333.216 mo
304.024 333.216 303.256 333.021 302.596 332.631 cv
301.936 332.235 301.42 331.683 301.048 330.975 cv
300.682 330.267 300.499 329.442 300.499 328.5 cv
300.499 327.564 300.682 326.739 301.048 326.025 cv
301.414 325.311 301.924 324.753 302.578 324.351 cv
303.232 323.949 303.991 323.748 304.855 323.748 cv
305.053 323.748 li
305.863 323.748 306.568 323.949 307.168 324.351 cv
307.774 324.747 308.245 325.308 308.581 326.034 cv
308.917 326.76 309.085 327.618 309.085 328.608 cv
309.085 329.139 li
302.443 329.139 li
302.545 329.919 302.818 330.534 303.262 330.984 cv
303.706 331.434 304.294 331.659 305.026 331.659 cv
305.206 331.659 li
305.644 331.659 306.058 331.569 306.448 331.389 cv
306.844 331.209 307.18 330.96 307.456 330.642 cv
308.563 331.794 li
308.143 332.232 307.636 332.58 307.042 332.838 cv
306.448 333.09 305.803 333.216 305.107 333.216 cv
304.9 333.216 li
cp
291.463 333 mo
291.463 331.704 li
296.512 325.485 li
291.643 325.485 li
291.643 323.973 li
298.897 323.973 li
298.897 325.269 li
293.848 331.488 li
298.987 331.488 li
298.987 333 li
291.463 333 li
cp
287.345 333 mo
287.345 323.973 li
289.253 323.973 li
289.253 333 li
287.345 333 li
cp
288.299 322.209 mo
287.915 322.209 287.612 322.101 287.39 321.885 cv
287.168 321.669 287.057 321.387 287.057 321.039 cv
287.057 320.691 287.168 320.409 287.39 320.193 cv
287.612 319.977 287.915 319.869 288.299 319.869 cv
288.689 319.869 288.992 319.977 289.208 320.193 cv
289.43 320.409 289.541 320.691 289.541 321.039 cv
289.541 321.387 289.43 321.669 289.208 321.885 cv
288.992 322.101 288.689 322.209 288.299 322.209 cv
cp
283.633 333.117 mo
282.547 333.117 281.74 332.856 281.212 332.334 cv
280.69 331.812 280.429 330.993 280.429 329.877 cv
280.429 325.458 li
278.647 325.458 li
278.647 323.973 li
280.429 323.973 li
280.429 321.318 li
282.337 321.318 li
282.337 323.973 li
285.253 323.973 li
285.253 325.458 li
282.337 325.458 li
282.337 329.625 li
282.337 330.339 282.466 330.837 282.724 331.119 cv
282.982 331.401 283.399 331.542 283.975 331.542 cv
284.239 331.542 284.482 331.527 284.704 331.497 cv
284.926 331.467 285.151 331.431 285.379 331.389 cv
285.379 332.901 li
284.833 333.045 284.251 333.117 283.633 333.117 cv
cp
268.8 333 mo
268.8 323.973 li
270.681 323.973 li
270.681 325.494 li
271.011 324.948 271.425 324.522 271.923 324.216 cv
272.421 323.904 272.994 323.748 273.642 323.748 cv
273.849 323.748 li
274.851 323.748 275.631 324.096 276.189 324.792 cv
276.747 325.488 277.026 326.466 277.026 327.726 cv
277.026 333 li
275.118 333 li
275.118 327.96 li
275.118 326.226 274.515 325.359 273.309 325.359 cv
273.12 325.359 li
272.556 325.359 272.064 325.542 271.644 325.908 cv
271.23 326.274 270.918 326.745 270.708 327.321 cv
270.708 333 li
268.8 333 li
cp
261.661 331.677 mo
262.315 331.677 262.861 331.521 263.299 331.209 cv
263.743 330.897 264.079 330.465 264.307 329.913 cv
264.307 329.067 li
262.075 329.067 li
260.761 329.067 260.104 329.508 260.104 330.39 cv
260.104 330.792 260.233 331.107 260.491 331.335 cv
260.755 331.563 261.145 331.677 261.661 331.677 cv
cp
261.157 333.18 mo
260.233 333.18 259.507 332.94 258.979 332.46 cv
258.457 331.974 258.196 331.332 258.196 330.534 cv
258.196 329.652 258.517 328.974 259.159 328.5 cv
259.807 328.02 260.725 327.78 261.913 327.78 cv
264.307 327.78 li
264.307 327.636 li
264.307 326.1 263.626 325.332 262.264 325.332 cv
261.7 325.332 261.223 325.437 260.833 325.647 cv
260.443 325.857 260.122 326.16 259.87 326.556 cv
258.592 325.629 li
258.976 325.023 259.483 324.558 260.113 324.234 cv
260.749 323.91 261.472 323.748 262.282 323.748 cv
262.489 323.748 li
263.617 323.748 264.517 324.072 265.189 324.72 cv
265.861 325.362 266.197 326.31 266.197 327.564 cv
266.197 333 li
264.361 333 li
264.361 331.515 li
264.019 332.049 263.575 332.46 263.029 332.748 cv
262.489 333.036 261.865 333.18 261.157 333.18 cv
cp
251.166 333.216 mo
250.959 333.216 li
249.927 333.216 249.138 332.868 248.592 332.172 cv
248.052 331.476 247.782 330.498 247.782 329.238 cv
247.782 323.973 li
249.69 323.973 li
249.69 329.013 li
249.69 330.747 250.293 331.614 251.499 331.614 cv
251.688 331.614 li
252.246 331.614 252.732 331.431 253.146 331.065 cv
253.566 330.699 253.881 330.228 254.091 329.652 cv
254.091 323.973 li
255.999 323.973 li
255.999 333 li
254.118 333 li
254.118 331.479 li
253.788 332.025 253.374 332.451 252.876 332.757 cv
252.384 333.063 251.814 333.216 251.166 333.216 cv
cp
239.183 331.506 mo
239.435 331.506 li
240.245 331.506 240.95 331.308 241.55 330.912 cv
242.156 330.516 242.624 329.958 242.954 329.238 cv
243.284 328.518 243.449 327.672 243.449 326.7 cv
243.449 325.728 243.284 324.882 242.954 324.162 cv
242.624 323.442 242.156 322.884 241.55 322.488 cv
240.95 322.092 240.245 321.894 239.435 321.894 cv
239.183 321.894 li
238.379 321.894 237.674 322.092 237.068 322.488 cv
236.468 322.884 236.003 323.442 235.673 324.162 cv
235.343 324.882 235.178 325.728 235.178 326.7 cv
235.178 327.672 235.343 328.518 235.673 329.238 cv
236.003 329.958 236.468 330.516 237.068 330.912 cv
237.674 331.308 238.379 331.506 239.183 331.506 cv
cp
239.174 333.216 mo
237.932 333.216 236.855 332.937 235.943 332.379 cv
235.031 331.815 234.326 331.044 233.828 330.066 cv
233.33 329.082 233.081 327.96 233.081 326.7 cv
233.081 325.44 233.33 324.321 233.828 323.343 cv
234.326 322.359 235.031 321.588 235.943 321.03 cv
236.855 320.466 237.932 320.184 239.174 320.184 cv
239.444 320.184 li
240.692 320.184 241.769 320.466 242.675 321.03 cv
243.587 321.588 244.292 322.359 244.79 323.343 cv
245.288 324.321 245.537 325.44 245.537 326.7 cv
245.537 327.936 245.297 329.04 244.817 330.012 cv
244.337 330.984 243.662 331.746 242.792 332.298 cv
243.59 333.282 244.274 334.281 244.844 335.295 cv
242.612 335.295 li
242.402 334.911 242.174 334.527 241.928 334.143 cv
241.688 333.759 241.43 333.381 241.154 333.009 cv
240.614 333.147 240.044 333.216 239.444 333.216 cv
239.174 333.216 li
cp
f
352.577 501 mo
349.693 501 li
350.431 499.861 351.238 498.695 352.115 497.5 cv
353.002 496.305 353.931 495.115 354.901 493.93 cv
353.949 492.745 353.044 491.569 352.185 490.402 cv
351.336 489.226 350.561 488.092 349.861 487 cv
352.857 487 li
353.903 488.708 355.144 490.5 356.581 492.376 cv
357.263 491.471 357.921 490.556 358.555 489.632 cv
359.19 488.699 359.755 487.821 360.249 487 cv
363.133 487 li
362.424 488.101 361.645 489.231 360.795 490.388 cv
359.946 491.536 359.045 492.693 358.093 493.86 cv
359.064 495.083 359.993 496.301 360.879 497.514 cv
361.766 498.718 362.573 499.88 363.301 501 cv
360.305 501 li
359.773 500.141 359.167 499.231 358.485 498.27 cv
357.813 497.299 357.123 496.352 356.413 495.428 cv
354.929 497.351 353.651 499.208 352.577 501 cv
cp
0 0 0 rgb
f
419 53 mo
524 53 li
532.284 53 539 59.7157 539 68 cv
539 263 li
539 271.284 532.284 278 524 278 cv
419 278 li
410.716 278 404 271.284 404 263 cv
404 68 li
404 59.7157 410.716 53 419 53 cv
cp
.392157 .254902 .823529 rgb
f
503.111 185.63 mo
501.958 185.63 501.108 185.35 500.561 184.79 cv
500.021 184.223 499.751 183.333 499.751 182.12 cv
499.751 176.94 li
497.791 176.94 li
497.791 175.5 li
499.751 175.5 li
499.751 172.52 li
501.551 172.52 li
501.551 175.5 li
504.791 175.5 li
504.791 176.94 li
501.551 176.94 li
501.551 181.9 li
501.551 182.727 501.688 183.303 501.961 183.63 cv
502.241 183.95 502.711 184.11 503.371 184.11 cv
503.671 184.11 503.941 184.093 504.181 184.06 cv
504.421 184.027 504.671 183.987 504.931 183.94 cv
504.931 185.4 li
504.665 185.467 504.371 185.52 504.051 185.56 cv
503.731 185.607 503.418 185.63 503.111 185.63 cv
cp
486.899 185.5 mo
486.899 170.9 li
488.699 170.9 li
488.699 177.23 li
489.073 176.617 489.539 176.137 490.099 175.79 cv
490.666 175.437 491.319 175.26 492.059 175.26 cv
492.269 175.26 li
493.383 175.26 494.253 175.64 494.879 176.4 cv
495.506 177.16 495.819 178.243 495.819 179.65 cv
495.819 185.5 li
494.019 185.5 li
494.019 179.88 li
494.019 177.827 493.286 176.8 491.819 176.8 cv
491.619 176.8 li
490.906 176.8 490.299 177.027 489.799 177.48 cv
489.306 177.933 488.939 178.51 488.699 179.21 cv
488.699 185.5 li
486.899 185.5 li
cp
478.845 184.06 mo
479.035 184.06 li
479.668 184.06 480.231 183.877 480.725 183.51 cv
481.225 183.143 481.611 182.643 481.885 182.01 cv
481.885 178.85 li
481.618 178.223 481.235 177.727 480.735 177.36 cv
480.235 176.987 479.668 176.8 479.035 176.8 cv
478.845 176.8 li
477.945 176.8 477.231 177.117 476.705 177.75 cv
476.178 178.377 475.915 179.27 475.915 180.43 cv
475.915 181.59 476.178 182.487 476.705 183.12 cv
477.231 183.747 477.945 184.06 478.845 184.06 cv
cp
478.635 185.6 mo
478.425 185.6 li
477.545 185.6 476.775 185.383 476.115 184.95 cv
475.461 184.51 474.951 183.9 474.585 183.12 cv
474.225 182.34 474.045 181.443 474.045 180.43 cv
474.045 179.41 474.225 178.513 474.585 177.74 cv
474.951 176.96 475.461 176.353 476.115 175.92 cv
476.775 175.48 477.545 175.26 478.425 175.26 cv
478.635 175.26 li
479.301 175.26 479.915 175.403 480.475 175.69 cv
481.041 175.97 481.511 176.39 481.885 176.95 cv
481.885 175.55 li
483.665 175.55 li
483.665 184.77 li
483.665 185.937 483.461 186.9 483.055 187.66 cv
482.655 188.427 482.098 188.997 481.385 189.37 cv
480.671 189.743 479.855 189.93 478.935 189.93 cv
478.735 189.93 li
477.835 189.93 477.031 189.75 476.325 189.39 cv
475.618 189.037 475.038 188.527 474.585 187.86 cv
475.895 186.87 li
476.215 187.37 476.605 187.747 477.065 188 cv
477.531 188.26 478.095 188.39 478.755 188.39 cv
479.761 188.39 480.535 188.103 481.075 187.53 cv
481.615 186.963 481.885 186.097 481.885 184.93 cv
481.885 183.84 li
481.525 184.427 481.061 184.867 480.495 185.16 cv
479.935 185.453 479.315 185.6 478.635 185.6 cv
cp
469.556 185.5 mo
469.556 175.5 li
471.356 175.5 li
471.356 185.5 li
469.556 185.5 li
cp
470.456 173.44 mo
470.076 173.44 469.776 173.33 469.556 173.11 cv
469.342 172.883 469.236 172.597 469.236 172.25 cv
469.236 171.897 469.342 171.61 469.556 171.39 cv
469.776 171.17 470.076 171.06 470.456 171.06 cv
470.836 171.06 471.132 171.17 471.346 171.39 cv
471.566 171.61 471.676 171.897 471.676 172.25 cv
471.676 172.597 471.566 172.883 471.346 173.11 cv
471.132 173.33 470.836 173.44 470.456 173.44 cv
cp
462.27 176.76 mo
461.49 176.76 460.847 177.037 460.34 177.59 cv
459.834 178.137 459.527 178.877 459.42 179.81 cv
465.11 179.81 li
465.064 178.943 464.814 178.22 464.36 177.64 cv
463.907 177.053 463.274 176.76 462.46 176.76 cv
462.27 176.76 li
cp
462.35 185.74 mo
461.397 185.74 460.56 185.52 459.84 185.08 cv
459.12 184.64 458.56 184.03 458.16 183.25 cv
457.76 182.463 457.56 181.55 457.56 180.51 cv
457.56 179.483 457.757 178.577 458.15 177.79 cv
458.55 176.997 459.107 176.377 459.82 175.93 cv
460.54 175.483 461.374 175.26 462.32 175.26 cv
462.52 175.26 li
463.4 175.26 464.167 175.48 464.82 175.92 cv
465.48 176.36 465.994 176.98 466.36 177.78 cv
466.727 178.58 466.91 179.527 466.91 180.62 cv
466.91 181.17 li
459.41 181.17 li
459.517 182.11 459.834 182.857 460.36 183.41 cv
460.887 183.957 461.58 184.23 462.44 184.23 cv
462.64 184.23 li
463.147 184.23 463.624 184.123 464.07 183.91 cv
464.517 183.697 464.894 183.407 465.2 183.04 cv
466.33 184.12 li
465.884 184.62 465.334 185.017 464.68 185.31 cv
464.027 185.597 463.32 185.74 462.56 185.74 cv
462.35 185.74 li
cp
442.1 185.5 mo
441.593 184.047 441.097 182.533 440.61 180.96 cv
440.123 179.38 439.667 177.79 439.24 176.19 cv
438.82 174.59 438.45 173.027 438.13 171.5 cv
440.22 171.5 li
440.467 172.807 440.757 174.177 441.09 175.61 cv
441.423 177.037 441.783 178.457 442.17 179.87 cv
442.557 181.277 442.95 182.61 443.35 183.87 cv
446.36 173.05 li
448.42 173.05 li
451.43 183.91 li
451.83 182.643 452.227 181.303 452.62 179.89 cv
453.02 178.47 453.39 177.047 453.73 175.62 cv
454.077 174.187 454.373 172.813 454.62 171.5 cv
456.64 171.5 li
456.32 173.027 455.947 174.59 455.52 176.19 cv
455.1 177.79 454.647 179.38 454.16 180.96 cv
453.673 182.533 453.177 184.047 452.67 185.5 cv
450.16 185.5 li
447.36 175.38 li
444.57 185.5 li
442.1 185.5 li
cp
488.004 160.14 mo
488.194 160.14 li
489.108 160.14 489.838 159.867 490.384 159.32 cv
490.938 158.773 491.214 158.023 491.214 157.07 cv
491.214 156.163 490.941 155.44 490.394 154.9 cv
489.848 154.353 489.114 154.08 488.194 154.08 cv
488.004 154.08 li
487.244 154.08 486.588 154.263 486.034 154.63 cv
485.488 154.997 485.021 155.537 484.634 156.25 cv
484.741 157.21 484.964 157.973 485.304 158.54 cv
485.651 159.107 486.061 159.517 486.534 159.77 cv
487.014 160.017 487.504 160.14 488.004 160.14 cv
cp
488.004 161.74 mo
487.064 161.74 486.184 161.51 485.364 161.05 cv
484.551 160.583 483.891 159.85 483.384 158.85 cv
482.884 157.843 482.634 156.533 482.634 154.92 cv
482.634 153.247 482.874 151.843 483.354 150.71 cv
483.841 149.57 484.501 148.71 485.334 148.13 cv
486.168 147.55 487.111 147.26 488.164 147.26 cv
488.374 147.26 li
489.248 147.26 490.051 147.43 490.784 147.77 cv
491.518 148.11 492.158 148.647 492.704 149.38 cv
491.364 150.47 li
490.878 149.857 490.388 149.437 489.894 149.21 cv
489.401 148.977 488.918 148.86 488.444 148.86 cv
488.254 148.86 li
487.208 148.86 486.341 149.323 485.654 150.25 cv
484.974 151.177 484.614 152.597 484.574 154.51 cv
484.968 153.857 485.498 153.353 486.164 153 cv
486.831 152.647 487.554 152.47 488.334 152.47 cv
488.544 152.47 li
489.411 152.47 490.191 152.66 490.884 153.04 cv
491.578 153.42 492.128 153.953 492.534 154.64 cv
492.941 155.32 493.144 156.11 493.144 157.01 cv
493.144 157.943 492.934 158.767 492.514 159.48 cv
492.101 160.193 491.524 160.75 490.784 161.15 cv
490.044 161.543 489.188 161.74 488.214 161.74 cv
488.004 161.74 li
cp
477.005 161.5 mo
477.005 149.13 li
473.925 152.12 li
472.765 150.95 li
476.415 147.5 li
478.865 147.5 li
478.865 161.5 li
477.005 161.5 li
cp
461.129 161.5 mo
461.129 147.5 li
470.949 147.5 li
470.949 149.16 li
463.039 149.16 li
463.039 153.77 li
469.629 153.77 li
469.629 155.44 li
463.039 155.44 li
463.039 161.5 li
461.129 161.5 li
cp
452.645 155.24 mo
448.195 155.24 li
448.195 159.89 li
452.705 159.89 li
454.672 159.89 455.655 159.113 455.655 157.56 cv
455.655 156.787 455.432 156.207 454.985 155.82 cv
454.538 155.433 453.758 155.24 452.645 155.24 cv
cp
452.045 149.11 mo
448.195 149.11 li
448.195 153.64 li
452.155 153.64 li
453.988 153.64 454.905 152.883 454.905 151.37 cv
454.905 150.603 454.672 150.037 454.205 149.67 cv
453.738 149.297 453.018 149.11 452.045 149.11 cv
cp
446.305 161.5 mo
446.305 147.5 li
452.155 147.5 li
453.688 147.5 454.848 147.817 455.635 148.45 cv
456.422 149.077 456.815 149.953 456.815 151.08 cv
456.815 151.807 456.642 152.437 456.295 152.97 cv
455.955 153.497 455.365 153.887 454.525 154.14 cv
455.598 154.367 456.378 154.793 456.865 155.42 cv
457.352 156.04 457.595 156.797 457.595 157.69 cv
457.595 158.897 457.175 159.833 456.335 160.5 cv
455.502 161.167 454.298 161.5 452.725 161.5 cv
446.305 161.5 li
cp
1 1 1 rgb
f
470.5 280 mo
470.5 380 li
472.5 380 li
472.5 280 li
470.5 280 li
cp
470.793 380.707 mo
471.183 381.098 471.817 381.098 472.207 380.707 cv
478.571 374.343 li
478.962 373.953 478.962 373.319 478.571 372.929 cv
478.181 372.538 477.547 372.538 477.157 372.929 cv
471.5 378.586 li
465.843 372.929 li
465.453 372.538 464.819 372.538 464.429 372.929 cv
464.038 373.319 464.038 373.953 464.429 374.343 cv
470.793 380.707 li
cp
472.5 280 mo
472.5 279 li
470.5 279 li
470.5 280 li
472.5 280 li
cp
.521569 .584314 .643137 rgb
f
419 382 mo
524 382 li
532.284 382 539 388.716 539 397 cv
539 592 li
539 600.284 532.284 607 524 607 cv
419 607 li
410.716 607 404 600.284 404 592 cv
404 397 li
404 388.716 410.716 382 419 382 cv
cp
.882353 .882353 1 rgb
f
503.111 514.63 mo
501.958 514.63 501.108 514.35 500.561 513.79 cv
500.021 513.223 499.751 512.333 499.751 511.12 cv
499.751 505.94 li
497.791 505.94 li
497.791 504.5 li
499.751 504.5 li
499.751 501.52 li
501.551 501.52 li
501.551 504.5 li
504.791 504.5 li
504.791 505.94 li
501.551 505.94 li
501.551 510.9 li
501.551 511.727 501.688 512.303 501.961 512.63 cv
502.241 512.95 502.711 513.11 503.371 513.11 cv
503.671 513.11 503.941 513.093 504.181 513.06 cv
504.421 513.027 504.671 512.987 504.931 512.94 cv
504.931 514.4 li
504.665 514.467 504.371 514.52 504.051 514.56 cv
503.731 514.607 503.418 514.63 503.111 514.63 cv
cp
486.899 514.5 mo
486.899 499.9 li
488.699 499.9 li
488.699 506.23 li
489.073 505.617 489.539 505.137 490.099 504.79 cv
490.666 504.437 491.319 504.26 492.059 504.26 cv
492.269 504.26 li
493.383 504.26 494.253 504.64 494.879 505.4 cv
495.506 506.16 495.819 507.243 495.819 508.65 cv
495.819 514.5 li
494.019 514.5 li
494.019 508.88 li
494.019 506.827 493.286 505.8 491.819 505.8 cv
491.619 505.8 li
490.906 505.8 490.299 506.027 489.799 506.48 cv
489.306 506.933 488.939 507.51 488.699 508.21 cv
488.699 514.5 li
486.899 514.5 li
cp
478.845 513.06 mo
479.035 513.06 li
479.668 513.06 480.231 512.877 480.725 512.51 cv
481.225 512.143 481.611 511.643 481.885 511.01 cv
481.885 507.85 li
481.618 507.223 481.235 506.727 480.735 506.36 cv
480.235 505.987 479.668 505.8 479.035 505.8 cv
478.845 505.8 li
477.945 505.8 477.231 506.117 476.705 506.75 cv
476.178 507.377 475.915 508.27 475.915 509.43 cv
475.915 510.59 476.178 511.487 476.705 512.12 cv
477.231 512.747 477.945 513.06 478.845 513.06 cv
cp
478.635 514.6 mo
478.425 514.6 li
477.545 514.6 476.775 514.383 476.115 513.95 cv
475.461 513.51 474.951 512.9 474.585 512.12 cv
474.225 511.34 474.045 510.443 474.045 509.43 cv
474.045 508.41 474.225 507.513 474.585 506.74 cv
474.951 505.96 475.461 505.353 476.115 504.92 cv
476.775 504.48 477.545 504.26 478.425 504.26 cv
478.635 504.26 li
479.301 504.26 479.915 504.403 480.475 504.69 cv
481.041 504.97 481.511 505.39 481.885 505.95 cv
481.885 504.55 li
483.665 504.55 li
483.665 513.77 li
483.665 514.937 483.461 515.9 483.055 516.66 cv
482.655 517.427 482.098 517.997 481.385 518.37 cv
480.671 518.743 479.855 518.93 478.935 518.93 cv
478.735 518.93 li
477.835 518.93 477.031 518.75 476.325 518.39 cv
475.618 518.037 475.038 517.527 474.585 516.86 cv
475.895 515.87 li
476.215 516.37 476.605 516.747 477.065 517 cv
477.531 517.26 478.095 517.39 478.755 517.39 cv
479.761 517.39 480.535 517.103 481.075 516.53 cv
481.615 515.963 481.885 515.097 481.885 513.93 cv
481.885 512.84 li
481.525 513.427 481.061 513.867 480.495 514.16 cv
479.935 514.453 479.315 514.6 478.635 514.6 cv
cp
469.556 514.5 mo
469.556 504.5 li
471.356 504.5 li
471.356 514.5 li
469.556 514.5 li
cp
470.456 502.44 mo
470.076 502.44 469.776 502.33 469.556 502.11 cv
469.342 501.883 469.236 501.597 469.236 501.25 cv
469.236 500.897 469.342 500.61 469.556 500.39 cv
469.776 500.17 470.076 500.06 470.456 500.06 cv
470.836 500.06 471.132 500.17 471.346 500.39 cv
471.566 500.61 471.676 500.897 471.676 501.25 cv
471.676 501.597 471.566 501.883 471.346 502.11 cv
471.132 502.33 470.836 502.44 470.456 502.44 cv
cp
462.27 505.76 mo
461.49 505.76 460.847 506.037 460.34 506.59 cv
459.834 507.137 459.527 507.877 459.42 508.81 cv
465.11 508.81 li
465.064 507.943 464.814 507.22 464.36 506.64 cv
463.907 506.053 463.274 505.76 462.46 505.76 cv
462.27 505.76 li
cp
462.35 514.74 mo
461.397 514.74 460.56 514.52 459.84 514.08 cv
459.12 513.64 458.56 513.03 458.16 512.25 cv
457.76 511.463 457.56 510.55 457.56 509.51 cv
457.56 508.483 457.757 507.577 458.15 506.79 cv
458.55 505.997 459.107 505.377 459.82 504.93 cv
460.54 504.483 461.374 504.26 462.32 504.26 cv
462.52 504.26 li
463.4 504.26 464.167 504.48 464.82 504.92 cv
465.48 505.36 465.994 505.98 466.36 506.78 cv
466.727 507.58 466.91 508.527 466.91 509.62 cv
466.91 510.17 li
459.41 510.17 li
459.517 511.11 459.834 511.857 460.36 512.41 cv
460.887 512.957 461.58 513.23 462.44 513.23 cv
462.64 513.23 li
463.147 513.23 463.624 513.123 464.07 512.91 cv
464.517 512.697 464.894 512.407 465.2 512.04 cv
466.33 513.12 li
465.884 513.62 465.334 514.017 464.68 514.31 cv
464.027 514.597 463.32 514.74 462.56 514.74 cv
462.35 514.74 li
cp
442.1 514.5 mo
441.593 513.047 441.097 511.533 440.61 509.96 cv
440.123 508.38 439.667 506.79 439.24 505.19 cv
438.82 503.59 438.45 502.027 438.13 500.5 cv
440.22 500.5 li
440.467 501.807 440.757 503.177 441.09 504.61 cv
441.423 506.037 441.783 507.457 442.17 508.87 cv
442.557 510.277 442.95 511.61 443.35 512.87 cv
446.36 502.05 li
448.42 502.05 li
451.43 512.91 li
451.83 511.643 452.227 510.303 452.62 508.89 cv
453.02 507.47 453.39 506.047 453.73 504.62 cv
454.077 503.187 454.373 501.813 454.62 500.5 cv
456.64 500.5 li
456.32 502.027 455.947 503.59 455.52 505.19 cv
455.1 506.79 454.647 508.38 454.16 509.96 cv
453.673 511.533 453.177 513.047 452.67 514.5 cv
450.16 514.5 li
447.36 504.38 li
444.57 514.5 li
442.1 514.5 li
cp
482.706 489.14 mo
482.966 489.14 li
483.933 489.14 484.696 488.917 485.256 488.47 cv
485.823 488.023 486.106 487.4 486.106 486.6 cv
486.106 485.8 485.82 485.18 485.246 484.74 cv
484.673 484.293 483.913 484.07 482.966 484.07 cv
482.706 484.07 li
481.76 484.07 481 484.293 480.426 484.74 cv
479.853 485.18 479.566 485.8 479.566 486.6 cv
479.566 487.4 479.846 488.023 480.406 488.47 cv
480.973 488.917 481.74 489.14 482.706 489.14 cv
cp
482.706 482.51 mo
482.966 482.51 li
483.806 482.51 484.483 482.31 484.996 481.91 cv
485.51 481.503 485.766 480.917 485.766 480.15 cv
485.766 479.403 485.51 478.833 484.996 478.44 cv
484.483 478.04 483.806 477.84 482.966 477.84 cv
482.706 477.84 li
481.866 477.84 481.19 478.04 480.676 478.44 cv
480.163 478.833 479.906 479.403 479.906 480.15 cv
479.906 480.917 480.163 481.503 480.676 481.91 cv
481.19 482.31 481.866 482.51 482.706 482.51 cv
cp
482.696 490.74 mo
481.09 490.74 479.843 490.367 478.956 489.62 cv
478.076 488.867 477.636 487.893 477.636 486.7 cv
477.636 485.873 477.84 485.16 478.246 484.56 cv
478.66 483.953 479.266 483.5 480.066 483.2 cv
479.366 482.907 478.846 482.49 478.506 481.95 cv
478.166 481.403 477.996 480.773 477.996 480.06 cv
477.996 478.947 478.413 478.037 479.246 477.33 cv
480.08 476.617 481.23 476.26 482.696 476.26 cv
482.976 476.26 li
484.45 476.26 485.6 476.617 486.426 477.33 cv
487.26 478.037 487.676 478.947 487.676 480.06 cv
487.676 480.773 487.506 481.403 487.166 481.95 cv
486.826 482.49 486.306 482.907 485.606 483.2 cv
486.406 483.5 487.01 483.953 487.416 484.56 cv
487.83 485.16 488.036 485.873 488.036 486.7 cv
488.036 487.893 487.593 488.867 486.706 489.62 cv
485.826 490.367 484.583 490.74 482.976 490.74 cv
482.696 490.74 li
cp
469.786 478.13 mo
466.056 478.13 li
466.056 484 li
469.786 484 li
472.066 484 473.206 483.023 473.206 481.07 cv
473.206 479.11 472.066 478.13 469.786 478.13 cv
cp
464.166 490.5 mo
464.166 476.5 li
469.966 476.5 li
471.64 476.5 472.92 476.893 473.806 477.68 cv
474.7 478.467 475.146 479.597 475.146 481.07 cv
475.146 482.537 474.7 483.663 473.806 484.45 cv
472.92 485.237 471.64 485.63 469.966 485.63 cv
466.056 485.63 li
466.056 490.5 li
464.166 490.5 li
cp
451.1 490.5 mo
451.1 476.5 li
460.92 476.5 li
460.92 478.16 li
453.01 478.16 li
453.01 482.77 li
459.6 482.77 li
459.6 484.44 li
453.01 484.44 li
453.01 490.5 li
451.1 490.5 li
cp
.431373 .333333 .882353 rgb
f
562.819 326.287 mo
562.177 326.287 561.646 326.512 561.226 326.962 cv
560.806 327.412 560.548 328.024 560.452 328.798 cv
565.195 328.798 li
565.141 328.078 564.925 327.481 564.547 327.007 cv
564.175 326.527 563.653 326.287 562.981 326.287 cv
562.819 326.287 li
cp
562.9 334.216 mo
562.024 334.216 561.256 334.021 560.596 333.631 cv
559.936 333.235 559.42 332.683 559.048 331.975 cv
558.682 331.267 558.499 330.442 558.499 329.5 cv
558.499 328.564 558.682 327.739 559.048 327.025 cv
559.414 326.311 559.924 325.753 560.578 325.351 cv
561.232 324.949 561.991 324.748 562.855 324.748 cv
563.053 324.748 li
563.863 324.748 564.568 324.949 565.168 325.351 cv
565.774 325.747 566.245 326.308 566.581 327.034 cv
566.917 327.76 567.085 328.618 567.085 329.608 cv
567.085 330.139 li
560.443 330.139 li
560.545 330.919 560.818 331.534 561.262 331.984 cv
561.706 332.434 562.294 332.659 563.026 332.659 cv
563.206 332.659 li
563.644 332.659 564.058 332.569 564.448 332.389 cv
564.844 332.209 565.18 331.96 565.456 331.642 cv
566.563 332.794 li
566.143 333.232 565.636 333.58 565.042 333.838 cv
564.448 334.09 563.803 334.216 563.107 334.216 cv
562.9 334.216 li
cp
549.463 334 mo
549.463 332.704 li
554.512 326.485 li
549.643 326.485 li
549.643 324.973 li
556.897 324.973 li
556.897 326.269 li
551.848 332.488 li
556.987 332.488 li
556.987 334 li
549.463 334 li
cp
545.345 334 mo
545.345 324.973 li
547.253 324.973 li
547.253 334 li
545.345 334 li
cp
546.299 323.209 mo
545.915 323.209 545.612 323.101 545.39 322.885 cv
545.168 322.669 545.057 322.387 545.057 322.039 cv
545.057 321.691 545.168 321.409 545.39 321.193 cv
545.612 320.977 545.915 320.869 546.299 320.869 cv
546.689 320.869 546.992 320.977 547.208 321.193 cv
547.43 321.409 547.541 321.691 547.541 322.039 cv
547.541 322.387 547.43 322.669 547.208 322.885 cv
546.992 323.101 546.689 323.209 546.299 323.209 cv
cp
541.633 334.117 mo
540.547 334.117 539.74 333.856 539.212 333.334 cv
538.69 332.812 538.429 331.993 538.429 330.877 cv
538.429 326.458 li
536.647 326.458 li
536.647 324.973 li
538.429 324.973 li
538.429 322.318 li
540.337 322.318 li
540.337 324.973 li
543.253 324.973 li
543.253 326.458 li
540.337 326.458 li
540.337 330.625 li
540.337 331.339 540.466 331.837 540.724 332.119 cv
540.982 332.401 541.399 332.542 541.975 332.542 cv
542.239 332.542 542.482 332.527 542.704 332.497 cv
542.926 332.467 543.151 332.431 543.379 332.389 cv
543.379 333.901 li
542.833 334.045 542.251 334.117 541.633 334.117 cv
cp
526.8 334 mo
526.8 324.973 li
528.681 324.973 li
528.681 326.494 li
529.011 325.948 529.425 325.522 529.923 325.216 cv
530.421 324.904 530.994 324.748 531.642 324.748 cv
531.849 324.748 li
532.851 324.748 533.631 325.096 534.189 325.792 cv
534.747 326.488 535.026 327.466 535.026 328.726 cv
535.026 334 li
533.118 334 li
533.118 328.96 li
533.118 327.226 532.515 326.359 531.309 326.359 cv
531.12 326.359 li
530.556 326.359 530.064 326.542 529.644 326.908 cv
529.23 327.274 528.918 327.745 528.708 328.321 cv
528.708 334 li
526.8 334 li
cp
519.661 332.677 mo
520.315 332.677 520.861 332.521 521.299 332.209 cv
521.743 331.897 522.079 331.465 522.307 330.913 cv
522.307 330.067 li
520.075 330.067 li
518.761 330.067 518.104 330.508 518.104 331.39 cv
518.104 331.792 518.233 332.107 518.491 332.335 cv
518.755 332.563 519.145 332.677 519.661 332.677 cv
cp
519.157 334.18 mo
518.233 334.18 517.507 333.94 516.979 333.46 cv
516.457 332.974 516.196 332.332 516.196 331.534 cv
516.196 330.652 516.517 329.974 517.159 329.5 cv
517.807 329.02 518.725 328.78 519.913 328.78 cv
522.307 328.78 li
522.307 328.636 li
522.307 327.1 521.626 326.332 520.264 326.332 cv
519.7 326.332 519.223 326.437 518.833 326.647 cv
518.443 326.857 518.122 327.16 517.87 327.556 cv
516.592 326.629 li
516.976 326.023 517.483 325.558 518.113 325.234 cv
518.749 324.91 519.472 324.748 520.282 324.748 cv
520.489 324.748 li
521.617 324.748 522.517 325.072 523.189 325.72 cv
523.861 326.362 524.197 327.31 524.197 328.564 cv
524.197 334 li
522.361 334 li
522.361 332.515 li
522.019 333.049 521.575 333.46 521.029 333.748 cv
520.489 334.036 519.865 334.18 519.157 334.18 cv
cp
509.166 334.216 mo
508.959 334.216 li
507.927 334.216 507.138 333.868 506.592 333.172 cv
506.052 332.476 505.782 331.498 505.782 330.238 cv
505.782 324.973 li
507.69 324.973 li
507.69 330.013 li
507.69 331.747 508.293 332.614 509.499 332.614 cv
509.688 332.614 li
510.246 332.614 510.732 332.431 511.146 332.065 cv
511.566 331.699 511.881 331.228 512.091 330.652 cv
512.091 324.973 li
513.999 324.973 li
513.999 334 li
512.118 334 li
512.118 332.479 li
511.788 333.025 511.374 333.451 510.876 333.757 cv
510.384 334.063 509.814 334.216 509.166 334.216 cv
cp
497.183 332.506 mo
497.435 332.506 li
498.245 332.506 498.95 332.308 499.55 331.912 cv
500.156 331.516 500.624 330.958 500.954 330.238 cv
501.284 329.518 501.449 328.672 501.449 327.7 cv
501.449 326.728 501.284 325.882 500.954 325.162 cv
500.624 324.442 500.156 323.884 499.55 323.488 cv
498.95 323.092 498.245 322.894 497.435 322.894 cv
497.183 322.894 li
496.379 322.894 495.674 323.092 495.068 323.488 cv
494.468 323.884 494.003 324.442 493.673 325.162 cv
493.343 325.882 493.178 326.728 493.178 327.7 cv
493.178 328.672 493.343 329.518 493.673 330.238 cv
494.003 330.958 494.468 331.516 495.068 331.912 cv
495.674 332.308 496.379 332.506 497.183 332.506 cv
cp
497.174 334.216 mo
495.932 334.216 494.855 333.937 493.943 333.379 cv
493.031 332.815 492.326 332.044 491.828 331.066 cv
491.33 330.082 491.081 328.96 491.081 327.7 cv
491.081 326.44 491.33 325.321 491.828 324.343 cv
492.326 323.359 493.031 322.588 493.943 322.03 cv
494.855 321.466 495.932 321.184 497.174 321.184 cv
497.444 321.184 li
498.692 321.184 499.769 321.466 500.675 322.03 cv
501.587 322.588 502.292 323.359 502.79 324.343 cv
503.288 325.321 503.537 326.44 503.537 327.7 cv
503.537 328.936 503.297 330.04 502.817 331.012 cv
502.337 331.984 501.662 332.746 500.792 333.298 cv
501.59 334.282 502.274 335.281 502.844 336.295 cv
500.612 336.295 li
500.402 335.911 500.174 335.527 499.928 335.143 cv
499.688 334.759 499.43 334.381 499.154 334.009 cv
498.614 334.147 498.044 334.216 497.444 334.216 cv
497.174 334.216 li
cp
.4 .466667 .533333 rgb
f
582.094 495.12 mo
582.094 492.894 li
593.91 492.894 li
593.91 495.12 li
582.094 495.12 li
cp
582.094 489.506 mo
582.094 487.28 li
593.91 487.28 li
593.91 489.506 li
582.094 489.506 li
cp
0 0 0 rgb
f
652 382 mo
811 382 li
819.284 382 826 388.716 826 397 cv
826 592 li
826 600.284 819.284 607 811 607 cv
652 607 li
643.716 607 637 600.284 637 592 cv
637 397 li
637 388.716 643.716 382 652 382 cv
cp
.521569 .584314 .643137 rgb
f
790.836 502.63 mo
789.683 502.63 788.833 502.35 788.286 501.79 cv
787.746 501.223 787.476 500.333 787.476 499.12 cv
787.476 493.94 li
785.516 493.94 li
785.516 492.5 li
787.476 492.5 li
787.476 489.52 li
789.276 489.52 li
789.276 492.5 li
792.516 492.5 li
792.516 493.94 li
789.276 493.94 li
789.276 498.9 li
789.276 499.727 789.413 500.303 789.686 500.63 cv
789.966 500.95 790.436 501.11 791.096 501.11 cv
791.396 501.11 791.666 501.093 791.906 501.06 cv
792.146 501.027 792.396 500.987 792.656 500.94 cv
792.656 502.4 li
792.389 502.467 792.096 502.52 791.776 502.56 cv
791.456 502.607 791.143 502.63 790.836 502.63 cv
cp
778.233 502.74 mo
778.023 502.74 li
776.87 502.74 775.99 502.36 775.383 501.6 cv
774.777 500.84 774.473 499.757 774.473 498.35 cv
774.473 492.5 li
776.273 492.5 li
776.273 498.12 li
776.273 500.173 777.007 501.2 778.473 501.2 cv
778.673 501.2 li
779.38 501.2 779.98 500.973 780.473 500.52 cv
780.973 500.067 781.343 499.493 781.583 498.8 cv
781.583 492.5 li
783.383 492.5 li
783.383 502.5 li
781.583 502.5 li
781.583 500.77 li
781.217 501.383 780.75 501.867 780.183 502.22 cv
779.623 502.567 778.973 502.74 778.233 502.74 cv
cp
766.932 501.2 mo
767.122 501.2 li
768.035 501.2 768.758 500.877 769.292 500.23 cv
769.832 499.583 770.102 498.673 770.102 497.5 cv
770.102 496.32 769.832 495.41 769.292 494.77 cv
768.758 494.123 768.035 493.8 767.122 493.8 cv
766.932 493.8 li
766.272 493.8 765.688 494.01 765.182 494.43 cv
764.682 494.843 764.295 495.387 764.022 496.06 cv
764.022 498.94 li
764.295 499.613 764.682 500.16 765.182 500.58 cv
765.688 500.993 766.272 501.2 766.932 501.2 cv
cp
764.022 506.7 mo
762.222 506.7 li
762.222 492.5 li
764.022 492.5 li
764.022 494.05 li
764.388 493.457 764.862 493.01 765.442 492.71 cv
766.028 492.41 766.665 492.26 767.352 492.26 cv
767.562 492.26 li
768.448 492.26 769.218 492.483 769.872 492.93 cv
770.532 493.37 771.045 493.983 771.412 494.77 cv
771.778 495.557 771.962 496.467 771.962 497.5 cv
771.962 498.527 771.778 499.437 771.412 500.23 cv
771.045 501.017 770.532 501.633 769.872 502.08 cv
769.218 502.52 768.448 502.74 767.562 502.74 cv
767.352 502.74 li
766.645 502.74 766.002 502.58 765.422 502.26 cv
764.842 501.94 764.375 501.467 764.022 500.84 cv
764.022 506.7 li
cp
758.043 502.63 mo
756.89 502.63 756.04 502.35 755.493 501.79 cv
754.953 501.223 754.683 500.333 754.683 499.12 cv
754.683 493.94 li
752.723 493.94 li
752.723 492.5 li
754.683 492.5 li
754.683 489.52 li
756.483 489.52 li
756.483 492.5 li
759.723 492.5 li
759.723 493.94 li
756.483 493.94 li
756.483 498.9 li
756.483 499.727 756.62 500.303 756.893 500.63 cv
757.173 500.95 757.643 501.11 758.303 501.11 cv
758.603 501.11 758.873 501.093 759.113 501.06 cv
759.353 501.027 759.603 500.987 759.863 500.94 cv
759.863 502.4 li
759.596 502.467 759.303 502.52 758.983 502.56 cv
758.663 502.607 758.35 502.63 758.043 502.63 cv
cp
745.44 502.74 mo
745.23 502.74 li
744.077 502.74 743.197 502.36 742.59 501.6 cv
741.984 500.84 741.68 499.757 741.68 498.35 cv
741.68 492.5 li
743.48 492.5 li
743.48 498.12 li
743.48 500.173 744.214 501.2 745.68 501.2 cv
745.88 501.2 li
746.587 501.2 747.187 500.973 747.68 500.52 cv
748.18 500.067 748.55 499.493 748.79 498.8 cv
748.79 492.5 li
750.59 492.5 li
750.59 502.5 li
748.79 502.5 li
748.79 500.77 li
748.424 501.383 747.957 501.867 747.39 502.22 cv
746.83 502.567 746.18 502.74 745.44 502.74 cv
cp
732.076 501.1 mo
732.336 501.1 li
733.289 501.1 734.119 500.87 734.826 500.41 cv
735.532 499.943 736.079 499.29 736.466 498.45 cv
736.852 497.61 737.046 496.627 737.046 495.5 cv
737.046 494.373 736.852 493.39 736.466 492.55 cv
736.079 491.71 735.532 491.06 734.826 490.6 cv
734.119 490.133 733.289 489.9 732.336 489.9 cv
732.076 489.9 li
731.122 489.9 730.292 490.133 729.586 490.6 cv
728.879 491.06 728.332 491.71 727.946 492.55 cv
727.559 493.39 727.366 494.373 727.366 495.5 cv
727.366 496.627 727.559 497.61 727.946 498.45 cv
728.332 499.29 728.879 499.943 729.586 500.41 cv
730.292 500.87 731.122 501.1 732.076 501.1 cv
cp
732.066 502.74 mo
730.699 502.74 729.516 502.43 728.516 501.81 cv
727.516 501.183 726.742 500.327 726.196 499.24 cv
725.656 498.147 725.386 496.9 725.386 495.5 cv
725.386 494.1 725.656 492.857 726.196 491.77 cv
726.742 490.677 727.516 489.82 728.516 489.2 cv
729.516 488.573 730.699 488.26 732.066 488.26 cv
732.346 488.26 li
733.712 488.26 734.896 488.573 735.896 489.2 cv
736.896 489.82 737.666 490.677 738.206 491.77 cv
738.752 492.857 739.026 494.1 739.026 495.5 cv
739.026 496.9 738.752 498.147 738.206 499.24 cv
737.666 500.327 736.896 501.183 735.896 501.81 cv
734.896 502.43 733.712 502.74 732.346 502.74 cv
732.066 502.74 li
cp
713.395 501.14 mo
713.585 501.14 li
714.498 501.14 715.228 500.867 715.775 500.32 cv
716.328 499.773 716.605 499.023 716.605 498.07 cv
716.605 497.163 716.332 496.44 715.785 495.9 cv
715.238 495.353 714.505 495.08 713.585 495.08 cv
713.395 495.08 li
712.635 495.08 711.978 495.263 711.425 495.63 cv
710.878 495.997 710.412 496.537 710.025 497.25 cv
710.132 498.21 710.355 498.973 710.695 499.54 cv
711.042 500.107 711.452 500.517 711.925 500.77 cv
712.405 501.017 712.895 501.14 713.395 501.14 cv
cp
713.395 502.74 mo
712.455 502.74 711.575 502.51 710.755 502.05 cv
709.942 501.583 709.282 500.85 708.775 499.85 cv
708.275 498.843 708.025 497.533 708.025 495.92 cv
708.025 494.247 708.265 492.843 708.745 491.71 cv
709.232 490.57 709.892 489.71 710.725 489.13 cv
711.558 488.55 712.502 488.26 713.555 488.26 cv
713.765 488.26 li
714.638 488.26 715.442 488.43 716.175 488.77 cv
716.908 489.11 717.548 489.647 718.095 490.38 cv
716.755 491.47 li
716.268 490.857 715.778 490.437 715.285 490.21 cv
714.792 489.977 714.308 489.86 713.835 489.86 cv
713.645 489.86 li
712.598 489.86 711.732 490.323 711.045 491.25 cv
710.365 492.177 710.005 493.597 709.965 495.51 cv
710.358 494.857 710.888 494.353 711.555 494 cv
712.222 493.647 712.945 493.47 713.725 493.47 cv
713.935 493.47 li
714.802 493.47 715.582 493.66 716.275 494.04 cv
716.968 494.42 717.518 494.953 717.925 495.64 cv
718.332 496.32 718.535 497.11 718.535 498.01 cv
718.535 498.943 718.325 499.767 717.905 500.48 cv
717.492 501.193 716.915 501.75 716.175 502.15 cv
715.435 502.543 714.578 502.74 713.605 502.74 cv
713.395 502.74 li
cp
702.396 502.5 mo
702.396 490.13 li
699.316 493.12 li
698.156 491.95 li
701.806 488.5 li
704.256 488.5 li
704.256 502.5 li
702.396 502.5 li
cp
686.52 502.5 mo
686.52 488.5 li
696.34 488.5 li
696.34 490.16 li
688.43 490.16 li
688.43 494.77 li
695.02 494.77 li
695.02 496.44 li
688.43 496.44 li
688.43 502.5 li
686.52 502.5 li
cp
678.035 496.24 mo
673.585 496.24 li
673.585 500.89 li
678.095 500.89 li
680.062 500.89 681.045 500.113 681.045 498.56 cv
681.045 497.787 680.822 497.207 680.375 496.82 cv
679.929 496.433 679.149 496.24 678.035 496.24 cv
cp
677.435 490.11 mo
673.585 490.11 li
673.585 494.64 li
677.545 494.64 li
679.379 494.64 680.295 493.883 680.295 492.37 cv
680.295 491.603 680.062 491.037 679.595 490.67 cv
679.129 490.297 678.409 490.11 677.435 490.11 cv
cp
671.695 502.5 mo
671.695 488.5 li
677.545 488.5 li
679.079 488.5 680.239 488.817 681.025 489.45 cv
681.812 490.077 682.205 490.953 682.205 492.08 cv
682.205 492.807 682.032 493.437 681.685 493.97 cv
681.345 494.497 680.755 494.887 679.915 495.14 cv
680.989 495.367 681.769 495.793 682.255 496.42 cv
682.742 497.04 682.985 497.797 682.985 498.69 cv
682.985 499.897 682.565 500.833 681.725 501.5 cv
680.892 502.167 679.689 502.5 678.115 502.5 cv
671.695 502.5 li
cp
1 1 1 rgb
f
1168.1 647.117 mo
1167.02 647.117 1166.21 646.856 1165.68 646.334 cv
1165.16 645.812 1164.9 644.993 1164.9 643.877 cv
1164.9 639.458 li
1163.12 639.458 li
1163.12 637.973 li
1164.9 637.973 li
1164.9 635.318 li
1166.81 635.318 li
1166.81 637.973 li
1169.72 637.973 li
1169.72 639.458 li
1166.81 639.458 li
1166.81 643.625 li
1166.81 644.339 1166.94 644.837 1167.2 645.119 cv
1167.45 645.401 1167.87 645.542 1168.45 645.542 cv
1168.71 645.542 1168.95 645.527 1169.18 645.497 cv
1169.4 645.467 1169.62 645.431 1169.85 645.389 cv
1169.85 646.901 li
1169.3 647.045 1168.72 647.117 1168.1 647.117 cv
cp
1156.52 647.216 mo
1156.31 647.216 li
1155.28 647.216 1154.49 646.868 1153.95 646.172 cv
1153.41 645.476 1153.14 644.498 1153.14 643.238 cv
1153.14 637.973 li
1155.04 637.973 li
1155.04 643.013 li
1155.04 644.747 1155.65 645.614 1156.85 645.614 cv
1157.04 645.614 li
1157.6 645.614 1158.09 645.431 1158.5 645.065 cv
1158.92 644.699 1159.24 644.228 1159.45 643.652 cv
1159.45 637.973 li
1161.35 637.973 li
1161.35 647 li
1159.47 647 li
1159.47 645.479 li
1159.14 646.025 1158.73 646.451 1158.23 646.757 cv
1157.74 647.063 1157.17 647.216 1156.52 647.216 cv
cp
1146.39 645.614 mo
1146.56 645.614 li
1147.33 645.614 1147.93 645.341 1148.37 644.795 cv
1148.82 644.249 1149.04 643.481 1149.04 642.491 cv
1149.04 641.495 1148.82 640.724 1148.37 640.178 cv
1147.93 639.632 1147.33 639.359 1146.56 639.359 cv
1146.39 639.359 li
1145.85 639.359 1145.38 639.527 1144.96 639.863 cv
1144.55 640.193 1144.23 640.634 1144 641.186 cv
1144 643.787 li
1144.23 644.339 1144.55 644.783 1144.96 645.119 cv
1145.38 645.449 1145.85 645.614 1146.39 645.614 cv
cp
1144 650.78 mo
1142.09 650.78 li
1142.09 637.973 li
1143.97 637.973 li
1143.97 639.278 li
1144.3 638.774 1144.72 638.393 1145.22 638.135 cv
1145.73 637.877 1146.28 637.748 1146.87 637.748 cv
1147.08 637.748 li
1147.86 637.748 1148.54 637.949 1149.13 638.351 cv
1149.72 638.747 1150.19 639.302 1150.52 640.016 cv
1150.85 640.724 1151.02 641.549 1151.02 642.491 cv
1151.02 643.427 1150.85 644.252 1150.52 644.966 cv
1150.19 645.674 1149.72 646.226 1149.13 646.622 cv
1148.54 647.018 1147.86 647.216 1147.08 647.216 cv
1146.87 647.216 li
1146.26 647.216 1145.71 647.081 1145.21 646.811 cv
1144.72 646.541 1144.32 646.145 1144 645.623 cv
1144 650.78 li
cp
1131.26 647 mo
1131.26 637.973 li
1133.14 637.973 li
1133.14 639.494 li
1133.47 638.948 1133.89 638.522 1134.39 638.216 cv
1134.88 637.904 1135.46 637.748 1136.11 637.748 cv
1136.31 637.748 li
1137.31 637.748 1138.09 638.096 1138.65 638.792 cv
1139.21 639.488 1139.49 640.466 1139.49 641.726 cv
1139.49 647 li
1137.58 647 li
1137.58 641.96 li
1137.58 640.226 1136.98 639.359 1135.77 639.359 cv
1135.58 639.359 li
1135.02 639.359 1134.53 639.542 1134.11 639.908 cv
1133.69 640.274 1133.38 640.745 1133.17 641.321 cv
1133.17 647 li
1131.26 647 li
cp
1126.61 647 mo
1126.61 637.973 li
1128.51 637.973 li
1128.51 647 li
1126.61 647 li
cp
1127.56 636.209 mo
1127.18 636.209 1126.87 636.101 1126.65 635.885 cv
1126.43 635.669 1126.32 635.387 1126.32 635.039 cv
1126.32 634.691 1126.43 634.409 1126.65 634.193 cv
1126.87 633.977 1127.18 633.869 1127.56 633.869 cv
1127.95 633.869 1128.25 633.977 1128.47 634.193 cv
1128.69 634.409 1128.8 634.691 1128.8 635.039 cv
1128.8 635.387 1128.69 635.669 1128.47 635.885 cv
1128.25 636.101 1127.95 636.209 1127.56 636.209 cv
cp
1116.23 648.908 mo
1116.23 647.648 li
1125.23 647.648 li
1125.23 648.908 li
1116.23 648.908 li
cp
1110.5 647 mo
1110.5 637.973 li
1112.38 637.973 li
1112.38 639.458 li
1112.67 638.906 1113.02 638.483 1113.44 638.189 cv
1113.86 637.895 1114.34 637.748 1114.89 637.748 cv
1115.16 637.748 1115.43 637.775 1115.69 637.829 cv
1115.69 639.665 li
1115.38 639.593 1115.05 639.557 1114.7 639.557 cv
1114.1 639.557 1113.62 639.728 1113.25 640.07 cv
1112.88 640.406 1112.6 640.88 1112.41 641.492 cv
1112.41 647 li
1110.5 647 li
cp
1103.53 645.614 mo
1103.72 645.614 li
1104.51 645.614 1105.13 645.329 1105.58 644.759 cv
1106.03 644.189 1106.26 643.43 1106.26 642.482 cv
1106.26 641.534 1106.03 640.778 1105.58 640.214 cv
1105.13 639.644 1104.51 639.359 1103.72 639.359 cv
1103.53 639.359 li
1102.75 639.359 1102.13 639.644 1101.67 640.214 cv
1101.21 640.778 1100.99 641.534 1100.99 642.482 cv
1100.99 643.43 1101.21 644.189 1101.67 644.759 cv
1102.13 645.329 1102.75 645.614 1103.53 645.614 cv
cp
1103.73 647.216 mo
1103.52 647.216 li
1102.61 647.216 1101.82 647.015 1101.14 646.613 cv
1100.46 646.205 1099.94 645.644 1099.56 644.93 cv
1099.2 644.216 1099.01 643.4 1099.01 642.482 cv
1099.01 641.564 1099.2 640.748 1099.56 640.034 cv
1099.94 639.32 1100.46 638.762 1101.14 638.36 cv
1101.82 637.952 1102.61 637.748 1103.52 637.748 cv
1103.73 637.748 li
1104.65 637.748 1105.44 637.952 1106.12 638.36 cv
1106.79 638.762 1107.32 639.32 1107.68 640.034 cv
1108.05 640.748 1108.24 641.564 1108.24 642.482 cv
1108.24 643.4 1108.05 644.216 1107.68 644.93 cv
1107.32 645.644 1106.79 646.205 1106.12 646.613 cv
1105.44 647.015 1104.65 647.216 1103.73 647.216 cv
cp
1095.79 647.117 mo
1094.7 647.117 1093.9 646.856 1093.37 646.334 cv
1092.85 645.812 1092.58 644.993 1092.58 643.877 cv
1092.58 639.458 li
1090.8 639.458 li
1090.8 637.973 li
1092.58 637.973 li
1092.58 635.318 li
1094.49 635.318 li
1094.49 637.973 li
1097.41 637.973 li
1097.41 639.458 li
1094.49 639.458 li
1094.49 643.625 li
1094.49 644.339 1094.62 644.837 1094.88 645.119 cv
1095.14 645.401 1095.55 645.542 1096.13 645.542 cv
1096.39 645.542 1096.64 645.527 1096.86 645.497 cv
1097.08 645.467 1097.31 645.431 1097.53 645.389 cv
1097.53 646.901 li
1096.99 647.045 1096.41 647.117 1095.79 647.117 cv
cp
1085.86 647.216 mo
1085 647.216 1084.23 647.027 1083.57 646.649 cv
1082.91 646.265 1082.39 645.719 1082.01 645.011 cv
1081.64 644.303 1081.45 643.463 1081.45 642.491 cv
1081.45 641.513 1081.64 640.67 1082.01 639.962 cv
1082.38 639.254 1082.9 638.708 1083.56 638.324 cv
1084.23 637.94 1084.99 637.748 1085.86 637.748 cv
1086.07 637.748 li
1086.79 637.748 1087.46 637.928 1088.09 638.288 cv
1088.72 638.648 1089.22 639.14 1089.59 639.764 cv
1088.13 640.682 li
1087.88 640.274 1087.58 639.953 1087.23 639.719 cv
1086.88 639.485 1086.49 639.368 1086.05 639.368 cv
1085.85 639.368 li
1085.11 639.368 1084.52 639.65 1084.08 640.214 cv
1083.65 640.778 1083.43 641.534 1083.43 642.482 cv
1083.43 643.436 1083.65 644.195 1084.08 644.759 cv
1084.52 645.323 1085.11 645.605 1085.85 645.605 cv
1086.05 645.605 li
1086.5 645.605 1086.9 645.503 1087.27 645.299 cv
1087.63 645.089 1087.95 644.81 1088.21 644.462 cv
1089.59 645.47 li
1089.19 646.016 1088.69 646.445 1088.08 646.757 cv
1087.47 647.063 1086.8 647.216 1086.07 647.216 cv
1085.86 647.216 li
cp
1074.8 645.677 mo
1075.45 645.677 1076 645.521 1076.44 645.209 cv
1076.88 644.897 1077.22 644.465 1077.45 643.913 cv
1077.45 643.067 li
1075.21 643.067 li
1073.9 643.067 1073.24 643.508 1073.24 644.39 cv
1073.24 644.792 1073.37 645.107 1073.63 645.335 cv
1073.89 645.563 1074.28 645.677 1074.8 645.677 cv
cp
1074.3 647.18 mo
1073.37 647.18 1072.65 646.94 1072.12 646.46 cv
1071.6 645.974 1071.34 645.332 1071.34 644.534 cv
1071.34 643.652 1071.66 642.974 1072.3 642.5 cv
1072.95 642.02 1073.86 641.78 1075.05 641.78 cv
1077.45 641.78 li
1077.45 641.636 li
1077.45 640.1 1076.77 639.332 1075.4 639.332 cv
1074.84 639.332 1074.36 639.437 1073.97 639.647 cv
1073.58 639.857 1073.26 640.16 1073.01 640.556 cv
1071.73 639.629 li
1072.12 639.023 1072.62 638.558 1073.25 638.234 cv
1073.89 637.91 1074.61 637.748 1075.42 637.748 cv
1075.63 637.748 li
1076.76 637.748 1077.66 638.072 1078.33 638.72 cv
1079 639.362 1079.34 640.31 1079.34 641.564 cv
1079.34 647 li
1077.5 647 li
1077.5 645.515 li
1077.16 646.049 1076.71 646.46 1076.17 646.748 cv
1075.63 647.036 1075 647.18 1074.3 647.18 cv
cp
1065.51 647 mo
1065.51 639.458 li
1063.82 639.458 li
1063.82 637.973 li
1065.51 637.973 li
1065.51 637.046 li
1065.51 635.936 1065.8 635.093 1066.37 634.517 cv
1066.95 633.935 1067.76 633.644 1068.8 633.644 cv
1069.1 633.644 1069.38 633.662 1069.66 633.698 cv
1069.94 633.734 1070.19 633.782 1070.4 633.842 cv
1070.4 635.354 li
1069.93 635.246 1069.51 635.192 1069.14 635.192 cv
1068.59 635.192 1068.17 635.342 1067.87 635.642 cv
1067.57 635.936 1067.42 636.383 1067.42 636.983 cv
1067.42 637.973 li
1070.31 637.973 li
1070.31 639.458 li
1067.42 639.458 li
1067.42 647 li
1065.51 647 li
cp
1054.48 648.908 mo
1054.48 647.648 li
1063.48 647.648 li
1063.48 648.908 li
1054.48 648.908 li
cp
1048.69 645.425 mo
1048.86 645.425 li
1049.38 645.425 1049.84 645.275 1050.25 644.975 cv
1050.67 644.669 1050.99 644.252 1051.22 643.724 cv
1051.22 641.06 li
1050.99 640.538 1050.67 640.124 1050.25 639.818 cv
1049.84 639.512 1049.38 639.359 1048.86 639.359 cv
1048.69 639.359 li
1047.94 639.359 1047.34 639.623 1046.9 640.151 cv
1046.46 640.679 1046.24 641.426 1046.24 642.392 cv
1046.24 643.358 1046.46 644.105 1046.9 644.633 cv
1047.34 645.161 1047.94 645.425 1048.69 645.425 cv
cp
1048.39 647.036 mo
1048.18 647.036 li
1047.4 647.036 1046.72 646.841 1046.13 646.451 cv
1045.54 646.061 1045.08 645.518 1044.75 644.822 cv
1044.42 644.12 1044.26 643.31 1044.26 642.392 cv
1044.26 641.468 1044.42 640.658 1044.75 639.962 cv
1045.08 639.266 1045.54 638.723 1046.13 638.333 cv
1046.72 637.943 1047.4 637.748 1048.18 637.748 cv
1048.39 637.748 li
1048.98 637.748 1049.52 637.874 1050.01 638.126 cv
1050.51 638.378 1050.92 638.747 1051.25 639.233 cv
1051.25 638.009 li
1053.09 638.009 li
1053.09 646.244 li
1053.09 647.312 1052.9 648.197 1052.53 648.899 cv
1052.16 649.607 1051.64 650.132 1050.99 650.474 cv
1050.34 650.822 1049.58 650.996 1048.73 650.996 cv
1048.52 650.996 li
1047.73 650.996 1047 650.837 1046.34 650.519 cv
1045.68 650.207 1045.15 649.754 1044.74 649.16 cv
1046.02 648.107 li
1046.31 648.527 1046.66 648.848 1047.07 649.07 cv
1047.48 649.292 1047.97 649.403 1048.53 649.403 cv
1049.39 649.403 1050.05 649.157 1050.51 648.665 cv
1050.98 648.173 1051.22 647.426 1051.22 646.424 cv
1051.22 645.524 li
1050.89 646.022 1050.49 646.4 1050 646.658 cv
1049.51 646.91 1048.98 647.036 1048.39 647.036 cv
cp
1033.92 647 mo
1033.92 637.973 li
1035.8 637.973 li
1035.8 639.494 li
1036.13 638.948 1036.54 638.522 1037.04 638.216 cv
1037.54 637.904 1038.11 637.748 1038.76 637.748 cv
1038.97 637.748 li
1039.97 637.748 1040.75 638.096 1041.31 638.792 cv
1041.86 639.488 1042.14 640.466 1042.14 641.726 cv
1042.14 647 li
1040.23 647 li
1040.23 641.96 li
1040.23 640.226 1039.63 639.359 1038.43 639.359 cv
1038.24 639.359 li
1037.67 639.359 1037.18 639.542 1036.76 639.908 cv
1036.35 640.274 1036.03 640.745 1035.82 641.321 cv
1035.82 647 li
1033.92 647 li
cp
1029.26 647 mo
1029.26 637.973 li
1031.17 637.973 li
1031.17 647 li
1029.26 647 li
cp
1030.21 636.209 mo
1029.83 636.209 1029.52 636.101 1029.3 635.885 cv
1029.08 635.669 1028.97 635.387 1028.97 635.039 cv
1028.97 634.691 1029.08 634.409 1029.3 634.193 cv
1029.52 633.977 1029.83 633.869 1030.21 633.869 cv
1030.6 633.869 1030.9 633.977 1031.12 634.193 cv
1031.34 634.409 1031.45 634.691 1031.45 635.039 cv
1031.45 635.387 1031.34 635.669 1031.12 635.885 cv
1030.9 636.101 1030.6 636.209 1030.21 636.209 cv
cp
1024.6 647 mo
1024.6 633.86 li
1026.51 633.86 li
1026.51 647 li
1024.6 647 li
cp
1017.46 645.677 mo
1018.11 645.677 1018.66 645.521 1019.1 645.209 cv
1019.54 644.897 1019.88 644.465 1020.11 643.913 cv
1020.11 643.067 li
1017.87 643.067 li
1016.56 643.067 1015.9 643.508 1015.9 644.39 cv
1015.9 644.792 1016.03 645.107 1016.29 645.335 cv
1016.55 645.563 1016.94 645.677 1017.46 645.677 cv
cp
1016.96 647.18 mo
1016.03 647.18 1015.31 646.94 1014.78 646.46 cv
1014.26 645.974 1014 645.332 1014 644.534 cv
1014 643.652 1014.32 642.974 1014.96 642.5 cv
1015.61 642.02 1016.52 641.78 1017.71 641.78 cv
1020.11 641.78 li
1020.11 641.636 li
1020.11 640.1 1019.43 639.332 1018.06 639.332 cv
1017.5 639.332 1017.02 639.437 1016.63 639.647 cv
1016.24 639.857 1015.92 640.16 1015.67 640.556 cv
1014.39 639.629 li
1014.78 639.023 1015.28 638.558 1015.91 638.234 cv
1016.55 637.91 1017.27 637.748 1018.08 637.748 cv
1018.29 637.748 li
1019.42 637.748 1020.32 638.072 1020.99 638.72 cv
1021.66 639.362 1022 640.31 1022 641.564 cv
1022 647 li
1020.16 647 li
1020.16 645.515 li
1019.82 646.049 1019.37 646.46 1018.83 646.748 cv
1018.29 647.036 1017.66 647.18 1016.96 647.18 cv
cp
1008.73 647.216 mo
1007.87 647.216 1007.1 647.027 1006.44 646.649 cv
1005.78 646.265 1005.26 645.719 1004.88 645.011 cv
1004.51 644.303 1004.32 643.463 1004.32 642.491 cv
1004.32 641.513 1004.51 640.67 1004.88 639.962 cv
1005.25 639.254 1005.77 638.708 1006.43 638.324 cv
1007.09 637.94 1007.86 637.748 1008.73 637.748 cv
1008.94 637.748 li
1009.66 637.748 1010.33 637.928 1010.95 638.288 cv
1011.58 638.648 1012.08 639.14 1012.46 639.764 cv
1011 640.682 li
1010.75 640.274 1010.45 639.953 1010.1 639.719 cv
1009.75 639.485 1009.36 639.368 1008.92 639.368 cv
1008.72 639.368 li
1007.98 639.368 1007.39 639.65 1006.95 640.214 cv
1006.52 640.778 1006.3 641.534 1006.3 642.482 cv
1006.3 643.436 1006.52 644.195 1006.95 644.759 cv
1007.39 645.323 1007.98 645.605 1008.72 645.605 cv
1008.92 645.605 li
1009.36 645.605 1009.77 645.503 1010.13 645.299 cv
1010.5 645.089 1010.82 644.81 1011.08 644.462 cv
1012.46 645.47 li
1012.06 646.016 1011.56 646.445 1010.94 646.757 cv
1010.33 647.063 1009.66 647.216 1008.94 647.216 cv
1008.73 647.216 li
cp
998.888 647.216 mo
997.082 647.216 995.759 646.622 994.919 645.434 cv
996.143 644.399 li
996.467 644.849 996.863 645.182 997.331 645.398 cv
997.799 645.614 998.309 645.722 998.861 645.722 cv
999.032 645.722 li
999.602 645.722 1000.04 645.623 1000.36 645.425 cv
1000.67 645.221 1000.83 644.936 1000.83 644.57 cv
1000.83 644.252 1000.72 643.997 1000.51 643.805 cv
1000.3 643.613 999.917 643.457 999.365 643.337 cv
997.88 643.013 li
996.11 642.629 995.225 641.798 995.225 640.52 cv
995.225 639.68 995.558 639.008 996.224 638.504 cv
996.89 638 997.76 637.748 998.834 637.748 cv
999.041 637.748 li
999.785 637.748 1000.46 637.892 1001.06 638.18 cv
1001.66 638.462 1002.16 638.873 1002.55 639.413 cv
1001.35 640.403 li
1001.06 640.007 1000.72 639.716 1000.32 639.53 cv
999.923 639.338 999.491 639.242 999.023 639.242 cv
998.852 639.242 li
998.324 639.242 997.898 639.344 997.574 639.548 cv
997.256 639.746 997.097 640.025 997.097 640.385 cv
997.097 640.667 997.199 640.892 997.403 641.06 cv
997.607 641.228 997.964 641.366 998.474 641.474 cv
1000.11 641.825 li
1000.93 642.005 1001.57 642.311 1002.02 642.743 cv
1002.48 643.169 1002.7 643.745 1002.7 644.471 cv
1002.7 645.287 1002.39 645.95 1001.76 646.46 cv
1001.13 646.964 1000.24 647.216 999.095 647.216 cv
998.888 647.216 li
cp
983.036 647 mo
980.93 647 li
981.392 646.268 981.899 645.518 982.451 644.75 cv
983.003 643.982 983.585 643.217 984.197 642.455 cv
983.603 641.687 983.036 640.925 982.496 640.169 cv
981.962 639.413 981.476 638.681 981.038 637.973 cv
983.261 637.973 li
983.561 638.483 983.9 639.023 984.278 639.593 cv
984.662 640.157 985.061 640.721 985.475 641.285 cv
985.889 640.727 986.285 640.163 986.663 639.593 cv
987.047 639.023 987.386 638.483 987.68 637.973 cv
989.795 637.973 li
989.345 638.681 988.853 639.404 988.319 640.142 cv
987.791 640.88 987.23 641.627 986.636 642.383 cv
987.248 643.175 987.83 643.961 988.382 644.741 cv
988.94 645.515 989.447 646.268 989.903 647 cv
987.689 647 li
987.371 646.466 987.008 645.902 986.6 645.308 cv
986.192 644.708 985.778 644.12 985.358 643.544 cv
984.926 644.126 984.509 644.714 984.107 645.308 cv
983.705 645.902 983.348 646.466 983.036 647 cv
cp
.4 .466667 .533333 rgb
f
1213.58 172 mo
1210.69 172 li
1211.43 170.861 1212.24 169.695 1213.12 168.5 cv
1214 167.305 1214.93 166.115 1215.9 164.93 cv
1214.95 163.745 1214.04 162.569 1213.19 161.402 cv
1212.34 160.226 1211.56 159.092 1210.86 158 cv
1213.86 158 li
1214.9 159.708 1216.14 161.5 1217.58 163.376 cv
1218.26 162.471 1218.92 161.556 1219.56 160.632 cv
1220.19 159.699 1220.75 158.821 1221.25 158 cv
1224.13 158 li
1223.42 159.101 1222.64 160.231 1221.8 161.388 cv
1220.95 162.536 1220.05 163.693 1219.09 164.86 cv
1220.06 166.083 1220.99 167.301 1221.88 168.514 cv
1222.77 169.718 1223.57 170.88 1224.3 172 cv
1221.31 172 li
1220.77 171.141 1220.17 170.231 1219.49 169.27 cv
1218.81 168.299 1218.12 167.352 1217.41 166.428 cv
1215.93 168.351 1214.65 170.208 1213.58 172 cv
cp
0 0 0 rgb
f
1443.09 166.12 mo
1443.09 163.894 li
1454.91 163.894 li
1454.91 166.12 li
1443.09 166.12 li
cp
1443.09 160.506 mo
1443.09 158.28 li
1454.91 158.28 li
1454.91 160.506 li
1443.09 160.506 li
cp
f
571.32 647.117 mo
570.234 647.117 569.427 646.856 568.899 646.334 cv
568.377 645.812 568.116 644.993 568.116 643.877 cv
568.116 639.458 li
566.334 639.458 li
566.334 637.973 li
568.116 637.973 li
568.116 635.318 li
570.024 635.318 li
570.024 637.973 li
572.94 637.973 li
572.94 639.458 li
570.024 639.458 li
570.024 643.625 li
570.024 644.339 570.153 644.837 570.411 645.119 cv
570.669 645.401 571.086 645.542 571.662 645.542 cv
571.926 645.542 572.169 645.527 572.391 645.497 cv
572.613 645.467 572.838 645.431 573.066 645.389 cv
573.066 646.901 li
572.52 647.045 571.938 647.117 571.32 647.117 cv
cp
556.487 647 mo
556.487 633.86 li
558.395 633.86 li
558.395 639.449 li
558.725 638.915 559.136 638.498 559.628 638.198 cv
560.12 637.898 560.687 637.748 561.329 637.748 cv
561.536 637.748 li
562.538 637.748 563.318 638.096 563.876 638.792 cv
564.434 639.488 564.713 640.466 564.713 641.726 cv
564.713 647 li
562.805 647 li
562.805 641.96 li
562.805 640.226 562.202 639.359 560.996 639.359 cv
560.807 639.359 li
560.243 639.359 559.751 639.542 559.331 639.908 cv
558.917 640.274 558.605 640.745 558.395 641.321 cv
558.395 647 li
556.487 647 li
cp
549.32 645.425 mo
549.491 645.425 li
550.013 645.425 550.478 645.275 550.886 644.975 cv
551.3 644.669 551.621 644.252 551.849 643.724 cv
551.849 641.06 li
551.621 640.538 551.3 640.124 550.886 639.818 cv
550.478 639.512 550.013 639.359 549.491 639.359 cv
549.32 639.359 li
548.57 639.359 547.973 639.623 547.529 640.151 cv
547.091 640.679 546.872 641.426 546.872 642.392 cv
546.872 643.358 547.091 644.105 547.529 644.633 cv
547.973 645.161 548.57 645.425 549.32 645.425 cv
cp
549.023 647.036 mo
548.816 647.036 li
548.036 647.036 547.352 646.841 546.764 646.451 cv
546.176 646.061 545.717 645.518 545.387 644.822 cv
545.057 644.12 544.892 643.31 544.892 642.392 cv
544.892 641.468 545.057 640.658 545.387 639.962 cv
545.717 639.266 546.176 638.723 546.764 638.333 cv
547.352 637.943 548.036 637.748 548.816 637.748 cv
549.023 637.748 li
549.611 637.748 550.151 637.874 550.643 638.126 cv
551.141 638.378 551.555 638.747 551.885 639.233 cv
551.885 638.009 li
553.721 638.009 li
553.721 646.244 li
553.721 647.312 553.535 648.197 553.163 648.899 cv
552.791 649.607 552.278 650.132 551.624 650.474 cv
550.97 650.822 550.217 650.996 549.365 650.996 cv
549.158 650.996 li
548.36 650.996 547.631 650.837 546.971 650.519 cv
546.317 650.207 545.783 649.754 545.369 649.16 cv
546.656 648.107 li
546.944 648.527 547.292 648.848 547.7 649.07 cv
548.114 649.292 548.603 649.403 549.167 649.403 cv
550.025 649.403 550.685 649.157 551.147 648.665 cv
551.615 648.173 551.849 647.426 551.849 646.424 cv
551.849 645.524 li
551.525 646.022 551.12 646.4 550.634 646.658 cv
550.148 646.91 549.611 647.036 549.023 647.036 cv
cp
540.72 647 mo
540.72 637.973 li
542.628 637.973 li
542.628 647 li
540.72 647 li
cp
541.674 636.209 mo
541.29 636.209 540.987 636.101 540.765 635.885 cv
540.543 635.669 540.432 635.387 540.432 635.039 cv
540.432 634.691 540.543 634.409 540.765 634.193 cv
540.987 633.977 541.29 633.869 541.674 633.869 cv
542.064 633.869 542.367 633.977 542.583 634.193 cv
542.805 634.409 542.916 634.691 542.916 635.039 cv
542.916 635.387 542.805 635.669 542.583 635.885 cv
542.367 636.101 542.064 636.209 541.674 636.209 cv
cp
534.235 639.287 mo
533.593 639.287 533.062 639.512 532.642 639.962 cv
532.222 640.412 531.964 641.024 531.868 641.798 cv
536.611 641.798 li
536.557 641.078 536.341 640.481 535.963 640.007 cv
535.591 639.527 535.069 639.287 534.397 639.287 cv
534.235 639.287 li
cp
534.316 647.216 mo
533.44 647.216 532.672 647.021 532.012 646.631 cv
531.352 646.235 530.836 645.683 530.464 644.975 cv
530.098 644.267 529.915 643.442 529.915 642.5 cv
529.915 641.564 530.098 640.739 530.464 640.025 cv
530.83 639.311 531.34 638.753 531.994 638.351 cv
532.648 637.949 533.407 637.748 534.271 637.748 cv
534.469 637.748 li
535.279 637.748 535.984 637.949 536.584 638.351 cv
537.19 638.747 537.661 639.308 537.997 640.034 cv
538.333 640.76 538.501 641.618 538.501 642.608 cv
538.501 643.139 li
531.859 643.139 li
531.961 643.919 532.234 644.534 532.678 644.984 cv
533.122 645.434 533.71 645.659 534.442 645.659 cv
534.622 645.659 li
535.06 645.659 535.474 645.569 535.864 645.389 cv
536.26 645.209 536.596 644.96 536.872 644.642 cv
537.979 645.794 li
537.559 646.232 537.052 646.58 536.458 646.838 cv
535.864 647.09 535.219 647.216 534.523 647.216 cv
534.316 647.216 li
cp
517.451 647 mo
516.377 644.096 515.429 641.087 514.607 637.973 cv
516.668 637.973 li
516.962 639.233 517.28 640.49 517.622 641.744 cv
517.97 642.998 518.336 644.24 518.72 645.47 cv
520.709 638.486 li
522.653 638.486 li
524.651 645.515 li
525.035 644.279 525.401 643.031 525.749 641.771 cv
526.097 640.505 526.415 639.239 526.703 637.973 cv
528.719 637.973 li
528.317 639.509 527.876 641.036 527.396 642.554 cv
526.916 644.072 526.409 645.554 525.875 647 cv
523.472 647 li
521.663 640.691 li
519.854 647 li
517.451 647 li
cp
505.013 648.908 mo
505.013 647.648 li
514.013 647.648 li
514.013 648.908 li
505.013 648.908 li
cp
499.288 647 mo
499.288 637.973 li
501.169 637.973 li
501.169 639.458 li
501.451 638.906 501.802 638.483 502.222 638.189 cv
502.642 637.895 503.125 637.748 503.671 637.748 cv
503.947 637.748 504.214 637.775 504.472 637.829 cv
504.472 639.665 li
504.166 639.593 503.836 639.557 503.482 639.557 cv
502.888 639.557 502.405 639.728 502.033 640.07 cv
501.661 640.406 501.382 640.88 501.196 641.492 cv
501.196 647 li
499.288 647 li
cp
492.316 645.614 mo
492.505 645.614 li
493.291 645.614 493.909 645.329 494.359 644.759 cv
494.815 644.189 495.043 643.43 495.043 642.482 cv
495.043 641.534 494.815 640.778 494.359 640.214 cv
493.909 639.644 493.291 639.359 492.505 639.359 cv
492.316 639.359 li
491.53 639.359 490.909 639.644 490.453 640.214 cv
489.997 640.778 489.769 641.534 489.769 642.482 cv
489.769 643.43 489.997 644.189 490.453 644.759 cv
490.909 645.329 491.53 645.614 492.316 645.614 cv
cp
492.514 647.216 mo
492.307 647.216 li
491.395 647.216 490.6 647.015 489.922 646.613 cv
489.244 646.205 488.719 645.644 488.347 644.93 cv
487.981 644.216 487.798 643.4 487.798 642.482 cv
487.798 641.564 487.981 640.748 488.347 640.034 cv
488.719 639.32 489.244 638.762 489.922 638.36 cv
490.6 637.952 491.395 637.748 492.307 637.748 cv
492.514 637.748 li
493.432 637.748 494.227 637.952 494.899 638.36 cv
495.577 638.762 496.099 639.32 496.465 640.034 cv
496.837 640.748 497.023 641.564 497.023 642.482 cv
497.023 643.4 496.837 644.216 496.465 644.93 cv
496.099 645.644 495.577 646.205 494.899 646.613 cv
494.227 647.015 493.432 647.216 492.514 647.216 cv
cp
484.572 647.117 mo
483.486 647.117 482.679 646.856 482.151 646.334 cv
481.629 645.812 481.368 644.993 481.368 643.877 cv
481.368 639.458 li
479.586 639.458 li
479.586 637.973 li
481.368 637.973 li
481.368 635.318 li
483.276 635.318 li
483.276 637.973 li
486.192 637.973 li
486.192 639.458 li
483.276 639.458 li
483.276 643.625 li
483.276 644.339 483.405 644.837 483.663 645.119 cv
483.921 645.401 484.338 645.542 484.914 645.542 cv
485.178 645.542 485.421 645.527 485.643 645.497 cv
485.865 645.467 486.09 645.431 486.318 645.389 cv
486.318 646.901 li
485.772 647.045 485.19 647.117 484.572 647.117 cv
cp
474.648 647.216 mo
473.784 647.216 473.019 647.027 472.353 646.649 cv
471.693 646.265 471.174 645.719 470.796 645.011 cv
470.424 644.303 470.238 643.463 470.238 642.491 cv
470.238 641.513 470.424 640.67 470.796 639.962 cv
471.168 639.254 471.684 638.708 472.344 638.324 cv
473.01 637.94 473.778 637.748 474.648 637.748 cv
474.855 637.748 li
475.575 637.748 476.247 637.928 476.871 638.288 cv
477.501 638.648 478.002 639.14 478.374 639.764 cv
476.916 640.682 li
476.664 640.274 476.364 639.953 476.016 639.719 cv
475.668 639.485 475.275 639.368 474.837 639.368 cv
474.639 639.368 li
473.895 639.368 473.304 639.65 472.866 640.214 cv
472.434 640.778 472.218 641.534 472.218 642.482 cv
472.218 643.436 472.434 644.195 472.866 644.759 cv
473.304 645.323 473.895 645.605 474.639 645.605 cv
474.837 645.605 li
475.281 645.605 475.686 645.503 476.052 645.299 cv
476.418 645.089 476.733 644.81 476.997 644.462 cv
478.374 645.47 li
477.978 646.016 477.474 646.445 476.862 646.757 cv
476.25 647.063 475.581 647.216 474.855 647.216 cv
474.648 647.216 li
cp
463.585 645.677 mo
464.239 645.677 464.785 645.521 465.223 645.209 cv
465.667 644.897 466.003 644.465 466.231 643.913 cv
466.231 643.067 li
463.999 643.067 li
462.685 643.067 462.028 643.508 462.028 644.39 cv
462.028 644.792 462.157 645.107 462.415 645.335 cv
462.679 645.563 463.069 645.677 463.585 645.677 cv
cp
463.081 647.18 mo
462.157 647.18 461.431 646.94 460.903 646.46 cv
460.381 645.974 460.12 645.332 460.12 644.534 cv
460.12 643.652 460.441 642.974 461.083 642.5 cv
461.731 642.02 462.649 641.78 463.837 641.78 cv
466.231 641.78 li
466.231 641.636 li
466.231 640.1 465.55 639.332 464.188 639.332 cv
463.624 639.332 463.147 639.437 462.757 639.647 cv
462.367 639.857 462.046 640.16 461.794 640.556 cv
460.516 639.629 li
460.9 639.023 461.407 638.558 462.037 638.234 cv
462.673 637.91 463.396 637.748 464.206 637.748 cv
464.413 637.748 li
465.541 637.748 466.441 638.072 467.113 638.72 cv
467.785 639.362 468.121 640.31 468.121 641.564 cv
468.121 647 li
466.285 647 li
466.285 645.515 li
465.943 646.049 465.499 646.46 464.953 646.748 cv
464.413 647.036 463.789 647.18 463.081 647.18 cv
cp
454.295 647 mo
454.295 639.458 li
452.603 639.458 li
452.603 637.973 li
454.295 637.973 li
454.295 637.046 li
454.295 635.936 454.583 635.093 455.159 634.517 cv
455.735 633.935 456.545 633.644 457.589 633.644 cv
457.883 633.644 458.168 633.662 458.444 633.698 cv
458.726 633.734 458.972 633.782 459.182 633.842 cv
459.182 635.354 li
458.714 635.246 458.294 635.192 457.922 635.192 cv
457.376 635.192 456.953 635.342 456.653 635.642 cv
456.353 635.936 456.203 636.383 456.203 636.983 cv
456.203 637.973 li
459.092 637.973 li
459.092 639.458 li
456.203 639.458 li
456.203 647 li
454.295 647 li
cp
443.261 648.908 mo
443.261 647.648 li
452.261 647.648 li
452.261 648.908 li
443.261 648.908 li
cp
437.47 645.425 mo
437.641 645.425 li
438.163 645.425 438.628 645.275 439.036 644.975 cv
439.45 644.669 439.771 644.252 439.999 643.724 cv
439.999 641.06 li
439.771 640.538 439.45 640.124 439.036 639.818 cv
438.628 639.512 438.163 639.359 437.641 639.359 cv
437.47 639.359 li
436.72 639.359 436.123 639.623 435.679 640.151 cv
435.241 640.679 435.022 641.426 435.022 642.392 cv
435.022 643.358 435.241 644.105 435.679 644.633 cv
436.123 645.161 436.72 645.425 437.47 645.425 cv
cp
437.173 647.036 mo
436.966 647.036 li
436.186 647.036 435.502 646.841 434.914 646.451 cv
434.326 646.061 433.867 645.518 433.537 644.822 cv
433.207 644.12 433.042 643.31 433.042 642.392 cv
433.042 641.468 433.207 640.658 433.537 639.962 cv
433.867 639.266 434.326 638.723 434.914 638.333 cv
435.502 637.943 436.186 637.748 436.966 637.748 cv
437.173 637.748 li
437.761 637.748 438.301 637.874 438.793 638.126 cv
439.291 638.378 439.705 638.747 440.035 639.233 cv
440.035 638.009 li
441.871 638.009 li
441.871 646.244 li
441.871 647.312 441.685 648.197 441.313 648.899 cv
440.941 649.607 440.428 650.132 439.774 650.474 cv
439.12 650.822 438.367 650.996 437.515 650.996 cv
437.308 650.996 li
436.51 650.996 435.781 650.837 435.121 650.519 cv
434.467 650.207 433.933 649.754 433.519 649.16 cv
434.806 648.107 li
435.094 648.527 435.442 648.848 435.85 649.07 cv
436.264 649.292 436.753 649.403 437.317 649.403 cv
438.175 649.403 438.835 649.157 439.297 648.665 cv
439.765 648.173 439.999 647.426 439.999 646.424 cv
439.999 645.524 li
439.675 646.022 439.27 646.4 438.784 646.658 cv
438.298 646.91 437.761 647.036 437.173 647.036 cv
cp
422.7 647 mo
422.7 637.973 li
424.581 637.973 li
424.581 639.494 li
424.911 638.948 425.325 638.522 425.823 638.216 cv
426.321 637.904 426.894 637.748 427.542 637.748 cv
427.749 637.748 li
428.751 637.748 429.531 638.096 430.089 638.792 cv
430.647 639.488 430.926 640.466 430.926 641.726 cv
430.926 647 li
429.018 647 li
429.018 641.96 li
429.018 640.226 428.415 639.359 427.209 639.359 cv
427.02 639.359 li
426.456 639.359 425.964 639.542 425.544 639.908 cv
425.13 640.274 424.818 640.745 424.608 641.321 cv
424.608 647 li
422.7 647 li
cp
418.042 647 mo
418.042 637.973 li
419.95 637.973 li
419.95 647 li
418.042 647 li
cp
418.996 636.209 mo
418.612 636.209 418.309 636.101 418.087 635.885 cv
417.865 635.669 417.754 635.387 417.754 635.039 cv
417.754 634.691 417.865 634.409 418.087 634.193 cv
418.309 633.977 418.612 633.869 418.996 633.869 cv
419.386 633.869 419.689 633.977 419.905 634.193 cv
420.127 634.409 420.238 634.691 420.238 635.039 cv
420.238 635.387 420.127 635.669 419.905 635.885 cv
419.689 636.101 419.386 636.209 418.996 636.209 cv
cp
413.384 647 mo
413.384 633.86 li
415.292 633.86 li
415.292 647 li
413.384 647 li
cp
406.245 645.677 mo
406.899 645.677 407.445 645.521 407.883 645.209 cv
408.327 644.897 408.663 644.465 408.891 643.913 cv
408.891 643.067 li
406.659 643.067 li
405.345 643.067 404.688 643.508 404.688 644.39 cv
404.688 644.792 404.817 645.107 405.075 645.335 cv
405.339 645.563 405.729 645.677 406.245 645.677 cv
cp
405.741 647.18 mo
404.817 647.18 404.091 646.94 403.563 646.46 cv
403.041 645.974 402.78 645.332 402.78 644.534 cv
402.78 643.652 403.101 642.974 403.743 642.5 cv
404.391 642.02 405.309 641.78 406.497 641.78 cv
408.891 641.78 li
408.891 641.636 li
408.891 640.1 408.21 639.332 406.848 639.332 cv
406.284 639.332 405.807 639.437 405.417 639.647 cv
405.027 639.857 404.706 640.16 404.454 640.556 cv
403.176 639.629 li
403.56 639.023 404.067 638.558 404.697 638.234 cv
405.333 637.91 406.056 637.748 406.866 637.748 cv
407.073 637.748 li
408.201 637.748 409.101 638.072 409.773 638.72 cv
410.445 639.362 410.781 640.31 410.781 641.564 cv
410.781 647 li
408.945 647 li
408.945 645.515 li
408.603 646.049 408.159 646.46 407.613 646.748 cv
407.073 647.036 406.449 647.18 405.741 647.18 cv
cp
397.515 647.216 mo
396.651 647.216 395.886 647.027 395.22 646.649 cv
394.56 646.265 394.041 645.719 393.663 645.011 cv
393.291 644.303 393.105 643.463 393.105 642.491 cv
393.105 641.513 393.291 640.67 393.663 639.962 cv
394.035 639.254 394.551 638.708 395.211 638.324 cv
395.877 637.94 396.645 637.748 397.515 637.748 cv
397.722 637.748 li
398.442 637.748 399.114 637.928 399.738 638.288 cv
400.368 638.648 400.869 639.14 401.241 639.764 cv
399.783 640.682 li
399.531 640.274 399.231 639.953 398.883 639.719 cv
398.535 639.485 398.142 639.368 397.704 639.368 cv
397.506 639.368 li
396.762 639.368 396.171 639.65 395.733 640.214 cv
395.301 640.778 395.085 641.534 395.085 642.482 cv
395.085 643.436 395.301 644.195 395.733 644.759 cv
396.171 645.323 396.762 645.605 397.506 645.605 cv
397.704 645.605 li
398.148 645.605 398.553 645.503 398.919 645.299 cv
399.285 645.089 399.6 644.81 399.864 644.462 cv
401.241 645.47 li
400.845 646.016 400.341 646.445 399.729 646.757 cv
399.117 647.063 398.448 647.216 397.722 647.216 cv
397.515 647.216 li
cp
387.673 647.216 mo
385.867 647.216 384.544 646.622 383.704 645.434 cv
384.928 644.399 li
385.252 644.849 385.648 645.182 386.116 645.398 cv
386.584 645.614 387.094 645.722 387.646 645.722 cv
387.817 645.722 li
388.387 645.722 388.828 645.623 389.14 645.425 cv
389.458 645.221 389.617 644.936 389.617 644.57 cv
389.617 644.252 389.509 643.997 389.293 643.805 cv
389.083 643.613 388.702 643.457 388.15 643.337 cv
386.665 643.013 li
384.895 642.629 384.01 641.798 384.01 640.52 cv
384.01 639.68 384.343 639.008 385.009 638.504 cv
385.675 638 386.545 637.748 387.619 637.748 cv
387.826 637.748 li
388.57 637.748 389.242 637.892 389.842 638.18 cv
390.448 638.462 390.946 638.873 391.336 639.413 cv
390.139 640.403 li
389.845 640.007 389.5 639.716 389.104 639.53 cv
388.708 639.338 388.276 639.242 387.808 639.242 cv
387.637 639.242 li
387.109 639.242 386.683 639.344 386.359 639.548 cv
386.041 639.746 385.882 640.025 385.882 640.385 cv
385.882 640.667 385.984 640.892 386.188 641.06 cv
386.392 641.228 386.749 641.366 387.259 641.474 cv
388.897 641.825 li
389.719 642.005 390.355 642.311 390.805 642.743 cv
391.261 643.169 391.489 643.745 391.489 644.471 cv
391.489 645.287 391.174 645.95 390.544 646.46 cv
389.914 646.964 389.026 647.216 387.88 647.216 cv
387.673 647.216 li
cp
371.82 647 mo
369.714 647 li
370.176 646.268 370.683 645.518 371.235 644.75 cv
371.787 643.982 372.369 643.217 372.981 642.455 cv
372.387 641.687 371.82 640.925 371.28 640.169 cv
370.746 639.413 370.26 638.681 369.822 637.973 cv
372.045 637.973 li
372.345 638.483 372.684 639.023 373.062 639.593 cv
373.446 640.157 373.845 640.721 374.259 641.285 cv
374.673 640.727 375.069 640.163 375.447 639.593 cv
375.831 639.023 376.17 638.483 376.464 637.973 cv
378.579 637.973 li
378.129 638.681 377.637 639.404 377.103 640.142 cv
376.575 640.88 376.014 641.627 375.42 642.383 cv
376.032 643.175 376.614 643.961 377.166 644.741 cv
377.724 645.515 378.231 646.268 378.687 647 cv
376.473 647 li
376.155 646.466 375.792 645.902 375.384 645.308 cv
374.976 644.708 374.562 644.12 374.142 643.544 cv
373.71 644.126 373.293 644.714 372.891 645.308 cv
372.489 645.902 372.132 646.466 371.82 647 cv
cp
.4 .466667 .533333 rgb
f
1432.32 645.117 mo
1431.23 645.117 1430.43 644.856 1429.9 644.334 cv
1429.38 643.812 1429.12 642.993 1429.12 641.877 cv
1429.12 637.458 li
1427.33 637.458 li
1427.33 635.973 li
1429.12 635.973 li
1429.12 633.318 li
1431.02 633.318 li
1431.02 635.973 li
1433.94 635.973 li
1433.94 637.458 li
1431.02 637.458 li
1431.02 641.625 li
1431.02 642.339 1431.15 642.837 1431.41 643.119 cv
1431.67 643.401 1432.09 643.542 1432.66 643.542 cv
1432.93 643.542 1433.17 643.527 1433.39 643.497 cv
1433.61 643.467 1433.84 643.431 1434.07 643.389 cv
1434.07 644.901 li
1433.52 645.045 1432.94 645.117 1432.32 645.117 cv
cp
1417.49 645 mo
1417.49 631.86 li
1419.4 631.86 li
1419.4 637.449 li
1419.73 636.915 1420.14 636.498 1420.63 636.198 cv
1421.12 635.898 1421.69 635.748 1422.33 635.748 cv
1422.54 635.748 li
1423.54 635.748 1424.32 636.096 1424.88 636.792 cv
1425.43 637.488 1425.71 638.466 1425.71 639.726 cv
1425.71 645 li
1423.81 645 li
1423.81 639.96 li
1423.81 638.226 1423.2 637.359 1422 637.359 cv
1421.81 637.359 li
1421.24 637.359 1420.75 637.542 1420.33 637.908 cv
1419.92 638.274 1419.61 638.745 1419.4 639.321 cv
1419.4 645 li
1417.49 645 li
cp
1410.32 643.425 mo
1410.49 643.425 li
1411.01 643.425 1411.48 643.275 1411.89 642.975 cv
1412.3 642.669 1412.62 642.252 1412.85 641.724 cv
1412.85 639.06 li
1412.62 638.538 1412.3 638.124 1411.89 637.818 cv
1411.48 637.512 1411.01 637.359 1410.49 637.359 cv
1410.32 637.359 li
1409.57 637.359 1408.97 637.623 1408.53 638.151 cv
1408.09 638.679 1407.87 639.426 1407.87 640.392 cv
1407.87 641.358 1408.09 642.105 1408.53 642.633 cv
1408.97 643.161 1409.57 643.425 1410.32 643.425 cv
cp
1410.02 645.036 mo
1409.82 645.036 li
1409.04 645.036 1408.35 644.841 1407.76 644.451 cv
1407.18 644.061 1406.72 643.518 1406.39 642.822 cv
1406.06 642.12 1405.89 641.31 1405.89 640.392 cv
1405.89 639.468 1406.06 638.658 1406.39 637.962 cv
1406.72 637.266 1407.18 636.723 1407.76 636.333 cv
1408.35 635.943 1409.04 635.748 1409.82 635.748 cv
1410.02 635.748 li
1410.61 635.748 1411.15 635.874 1411.64 636.126 cv
1412.14 636.378 1412.55 636.747 1412.88 637.233 cv
1412.88 636.009 li
1414.72 636.009 li
1414.72 644.244 li
1414.72 645.312 1414.53 646.197 1414.16 646.899 cv
1413.79 647.607 1413.28 648.132 1412.62 648.474 cv
1411.97 648.822 1411.22 648.996 1410.36 648.996 cv
1410.16 648.996 li
1409.36 648.996 1408.63 648.837 1407.97 648.519 cv
1407.32 648.207 1406.78 647.754 1406.37 647.16 cv
1407.66 646.107 li
1407.94 646.527 1408.29 646.848 1408.7 647.07 cv
1409.11 647.292 1409.6 647.403 1410.17 647.403 cv
1411.02 647.403 1411.68 647.157 1412.15 646.665 cv
1412.61 646.173 1412.85 645.426 1412.85 644.424 cv
1412.85 643.524 li
1412.52 644.022 1412.12 644.4 1411.63 644.658 cv
1411.15 644.91 1410.61 645.036 1410.02 645.036 cv
cp
1401.72 645 mo
1401.72 635.973 li
1403.63 635.973 li
1403.63 645 li
1401.72 645 li
cp
1402.67 634.209 mo
1402.29 634.209 1401.99 634.101 1401.76 633.885 cv
1401.54 633.669 1401.43 633.387 1401.43 633.039 cv
1401.43 632.691 1401.54 632.409 1401.76 632.193 cv
1401.99 631.977 1402.29 631.869 1402.67 631.869 cv
1403.06 631.869 1403.37 631.977 1403.58 632.193 cv
1403.8 632.409 1403.92 632.691 1403.92 633.039 cv
1403.92 633.387 1403.8 633.669 1403.58 633.885 cv
1403.37 634.101 1403.06 634.209 1402.67 634.209 cv
cp
1395.24 637.287 mo
1394.59 637.287 1394.06 637.512 1393.64 637.962 cv
1393.22 638.412 1392.96 639.024 1392.87 639.798 cv
1397.61 639.798 li
1397.56 639.078 1397.34 638.481 1396.96 638.007 cv
1396.59 637.527 1396.07 637.287 1395.4 637.287 cv
1395.24 637.287 li
cp
1395.32 645.216 mo
1394.44 645.216 1393.67 645.021 1393.01 644.631 cv
1392.35 644.235 1391.84 643.683 1391.46 642.975 cv
1391.1 642.267 1390.92 641.442 1390.92 640.5 cv
1390.92 639.564 1391.1 638.739 1391.46 638.025 cv
1391.83 637.311 1392.34 636.753 1392.99 636.351 cv
1393.65 635.949 1394.41 635.748 1395.27 635.748 cv
1395.47 635.748 li
1396.28 635.748 1396.98 635.949 1397.58 636.351 cv
1398.19 636.747 1398.66 637.308 1399 638.034 cv
1399.33 638.76 1399.5 639.618 1399.5 640.608 cv
1399.5 641.139 li
1392.86 641.139 li
1392.96 641.919 1393.23 642.534 1393.68 642.984 cv
1394.12 643.434 1394.71 643.659 1395.44 643.659 cv
1395.62 643.659 li
1396.06 643.659 1396.47 643.569 1396.86 643.389 cv
1397.26 643.209 1397.6 642.96 1397.87 642.642 cv
1398.98 643.794 li
1398.56 644.232 1398.05 644.58 1397.46 644.838 cv
1396.86 645.09 1396.22 645.216 1395.52 645.216 cv
1395.32 645.216 li
cp
1378.45 645 mo
1377.38 642.096 1376.43 639.087 1375.61 635.973 cv
1377.67 635.973 li
1377.96 637.233 1378.28 638.49 1378.62 639.744 cv
1378.97 640.998 1379.34 642.24 1379.72 643.47 cv
1381.71 636.486 li
1383.65 636.486 li
1385.65 643.515 li
1386.03 642.279 1386.4 641.031 1386.75 639.771 cv
1387.1 638.505 1387.41 637.239 1387.7 635.973 cv
1389.72 635.973 li
1389.32 637.509 1388.88 639.036 1388.4 640.554 cv
1387.92 642.072 1387.41 643.554 1386.87 645 cv
1384.47 645 li
1382.66 638.691 li
1380.85 645 li
1378.45 645 li
cp
1366.01 646.908 mo
1366.01 645.648 li
1375.01 645.648 li
1375.01 646.908 li
1366.01 646.908 li
cp
1360.29 645 mo
1360.29 635.973 li
1362.17 635.973 li
1362.17 637.458 li
1362.45 636.906 1362.8 636.483 1363.22 636.189 cv
1363.64 635.895 1364.13 635.748 1364.67 635.748 cv
1364.95 635.748 1365.21 635.775 1365.47 635.829 cv
1365.47 637.665 li
1365.17 637.593 1364.84 637.557 1364.48 637.557 cv
1363.89 637.557 1363.41 637.728 1363.03 638.07 cv
1362.66 638.406 1362.38 638.88 1362.2 639.492 cv
1362.2 645 li
1360.29 645 li
cp
1353.32 643.614 mo
1353.51 643.614 li
1354.29 643.614 1354.91 643.329 1355.36 642.759 cv
1355.82 642.189 1356.04 641.43 1356.04 640.482 cv
1356.04 639.534 1355.82 638.778 1355.36 638.214 cv
1354.91 637.644 1354.29 637.359 1353.51 637.359 cv
1353.32 637.359 li
1352.53 637.359 1351.91 637.644 1351.45 638.214 cv
1351 638.778 1350.77 639.534 1350.77 640.482 cv
1350.77 641.43 1351 642.189 1351.45 642.759 cv
1351.91 643.329 1352.53 643.614 1353.32 643.614 cv
cp
1353.51 645.216 mo
1353.31 645.216 li
1352.4 645.216 1351.6 645.015 1350.92 644.613 cv
1350.24 644.205 1349.72 643.644 1349.35 642.93 cv
1348.98 642.216 1348.8 641.4 1348.8 640.482 cv
1348.8 639.564 1348.98 638.748 1349.35 638.034 cv
1349.72 637.32 1350.24 636.762 1350.92 636.36 cv
1351.6 635.952 1352.4 635.748 1353.31 635.748 cv
1353.51 635.748 li
1354.43 635.748 1355.23 635.952 1355.9 636.36 cv
1356.58 636.762 1357.1 637.32 1357.47 638.034 cv
1357.84 638.748 1358.02 639.564 1358.02 640.482 cv
1358.02 641.4 1357.84 642.216 1357.47 642.93 cv
1357.1 643.644 1356.58 644.205 1355.9 644.613 cv
1355.23 645.015 1354.43 645.216 1353.51 645.216 cv
cp
1345.57 645.117 mo
1344.49 645.117 1343.68 644.856 1343.15 644.334 cv
1342.63 643.812 1342.37 642.993 1342.37 641.877 cv
1342.37 637.458 li
1340.59 637.458 li
1340.59 635.973 li
1342.37 635.973 li
1342.37 633.318 li
1344.28 633.318 li
1344.28 635.973 li
1347.19 635.973 li
1347.19 637.458 li
1344.28 637.458 li
1344.28 641.625 li
1344.28 642.339 1344.41 642.837 1344.66 643.119 cv
1344.92 643.401 1345.34 643.542 1345.91 643.542 cv
1346.18 643.542 1346.42 643.527 1346.64 643.497 cv
1346.87 643.467 1347.09 643.431 1347.32 643.389 cv
1347.32 644.901 li
1346.77 645.045 1346.19 645.117 1345.57 645.117 cv
cp
1335.65 645.216 mo
1334.78 645.216 1334.02 645.027 1333.35 644.649 cv
1332.69 644.265 1332.17 643.719 1331.8 643.011 cv
1331.42 642.303 1331.24 641.463 1331.24 640.491 cv
1331.24 639.513 1331.42 638.67 1331.8 637.962 cv
1332.17 637.254 1332.68 636.708 1333.34 636.324 cv
1334.01 635.94 1334.78 635.748 1335.65 635.748 cv
1335.85 635.748 li
1336.57 635.748 1337.25 635.928 1337.87 636.288 cv
1338.5 636.648 1339 637.14 1339.37 637.764 cv
1337.92 638.682 li
1337.66 638.274 1337.36 637.953 1337.02 637.719 cv
1336.67 637.485 1336.27 637.368 1335.84 637.368 cv
1335.64 637.368 li
1334.89 637.368 1334.3 637.65 1333.87 638.214 cv
1333.43 638.778 1333.22 639.534 1333.22 640.482 cv
1333.22 641.436 1333.43 642.195 1333.87 642.759 cv
1334.3 643.323 1334.89 643.605 1335.64 643.605 cv
1335.84 643.605 li
1336.28 643.605 1336.69 643.503 1337.05 643.299 cv
1337.42 643.089 1337.73 642.81 1338 642.462 cv
1339.37 643.47 li
1338.98 644.016 1338.47 644.445 1337.86 644.757 cv
1337.25 645.063 1336.58 645.216 1335.85 645.216 cv
1335.65 645.216 li
cp
1324.58 643.677 mo
1325.24 643.677 1325.78 643.521 1326.22 643.209 cv
1326.67 642.897 1327 642.465 1327.23 641.913 cv
1327.23 641.067 li
1325 641.067 li
1323.68 641.067 1323.03 641.508 1323.03 642.39 cv
1323.03 642.792 1323.16 643.107 1323.41 643.335 cv
1323.68 643.563 1324.07 643.677 1324.58 643.677 cv
cp
1324.08 645.18 mo
1323.16 645.18 1322.43 644.94 1321.9 644.46 cv
1321.38 643.974 1321.12 643.332 1321.12 642.534 cv
1321.12 641.652 1321.44 640.974 1322.08 640.5 cv
1322.73 640.02 1323.65 639.78 1324.84 639.78 cv
1327.23 639.78 li
1327.23 639.636 li
1327.23 638.1 1326.55 637.332 1325.19 637.332 cv
1324.62 637.332 1324.15 637.437 1323.76 637.647 cv
1323.37 637.857 1323.05 638.16 1322.79 638.556 cv
1321.52 637.629 li
1321.9 637.023 1322.41 636.558 1323.04 636.234 cv
1323.67 635.91 1324.4 635.748 1325.21 635.748 cv
1325.41 635.748 li
1326.54 635.748 1327.44 636.072 1328.11 636.72 cv
1328.78 637.362 1329.12 638.31 1329.12 639.564 cv
1329.12 645 li
1327.28 645 li
1327.28 643.515 li
1326.94 644.049 1326.5 644.46 1325.95 644.748 cv
1325.41 645.036 1324.79 645.18 1324.08 645.18 cv
cp
1315.29 645 mo
1315.29 637.458 li
1313.6 637.458 li
1313.6 635.973 li
1315.29 635.973 li
1315.29 635.046 li
1315.29 633.936 1315.58 633.093 1316.16 632.517 cv
1316.73 631.935 1317.54 631.644 1318.59 631.644 cv
1318.88 631.644 1319.17 631.662 1319.44 631.698 cv
1319.73 631.734 1319.97 631.782 1320.18 631.842 cv
1320.18 633.354 li
1319.71 633.246 1319.29 633.192 1318.92 633.192 cv
1318.38 633.192 1317.95 633.342 1317.65 633.642 cv
1317.35 633.936 1317.2 634.383 1317.2 634.983 cv
1317.2 635.973 li
1320.09 635.973 li
1320.09 637.458 li
1317.2 637.458 li
1317.2 645 li
1315.29 645 li
cp
1304.26 646.908 mo
1304.26 645.648 li
1313.26 645.648 li
1313.26 646.908 li
1304.26 646.908 li
cp
1298.47 643.425 mo
1298.64 643.425 li
1299.16 643.425 1299.63 643.275 1300.04 642.975 cv
1300.45 642.669 1300.77 642.252 1301 641.724 cv
1301 639.06 li
1300.77 638.538 1300.45 638.124 1300.04 637.818 cv
1299.63 637.512 1299.16 637.359 1298.64 637.359 cv
1298.47 637.359 li
1297.72 637.359 1297.12 637.623 1296.68 638.151 cv
1296.24 638.679 1296.02 639.426 1296.02 640.392 cv
1296.02 641.358 1296.24 642.105 1296.68 642.633 cv
1297.12 643.161 1297.72 643.425 1298.47 643.425 cv
cp
1298.17 645.036 mo
1297.97 645.036 li
1297.19 645.036 1296.5 644.841 1295.91 644.451 cv
1295.33 644.061 1294.87 643.518 1294.54 642.822 cv
1294.21 642.12 1294.04 641.31 1294.04 640.392 cv
1294.04 639.468 1294.21 638.658 1294.54 637.962 cv
1294.87 637.266 1295.33 636.723 1295.91 636.333 cv
1296.5 635.943 1297.19 635.748 1297.97 635.748 cv
1298.17 635.748 li
1298.76 635.748 1299.3 635.874 1299.79 636.126 cv
1300.29 636.378 1300.71 636.747 1301.04 637.233 cv
1301.04 636.009 li
1302.87 636.009 li
1302.87 644.244 li
1302.87 645.312 1302.69 646.197 1302.31 646.899 cv
1301.94 647.607 1301.43 648.132 1300.77 648.474 cv
1300.12 648.822 1299.37 648.996 1298.52 648.996 cv
1298.31 648.996 li
1297.51 648.996 1296.78 648.837 1296.12 648.519 cv
1295.47 648.207 1294.93 647.754 1294.52 647.16 cv
1295.81 646.107 li
1296.09 646.527 1296.44 646.848 1296.85 647.07 cv
1297.26 647.292 1297.75 647.403 1298.32 647.403 cv
1299.18 647.403 1299.84 647.157 1300.3 646.665 cv
1300.77 646.173 1301 645.426 1301 644.424 cv
1301 643.524 li
1300.68 644.022 1300.27 644.4 1299.78 644.658 cv
1299.3 644.91 1298.76 645.036 1298.17 645.036 cv
cp
1283.7 645 mo
1283.7 635.973 li
1285.58 635.973 li
1285.58 637.494 li
1285.91 636.948 1286.33 636.522 1286.82 636.216 cv
1287.32 635.904 1287.89 635.748 1288.54 635.748 cv
1288.75 635.748 li
1289.75 635.748 1290.53 636.096 1291.09 636.792 cv
1291.65 637.488 1291.93 638.466 1291.93 639.726 cv
1291.93 645 li
1290.02 645 li
1290.02 639.96 li
1290.02 638.226 1289.42 637.359 1288.21 637.359 cv
1288.02 637.359 li
1287.46 637.359 1286.96 637.542 1286.54 637.908 cv
1286.13 638.274 1285.82 638.745 1285.61 639.321 cv
1285.61 645 li
1283.7 645 li
cp
1279.04 645 mo
1279.04 635.973 li
1280.95 635.973 li
1280.95 645 li
1279.04 645 li
cp
1280 634.209 mo
1279.61 634.209 1279.31 634.101 1279.09 633.885 cv
1278.87 633.669 1278.75 633.387 1278.75 633.039 cv
1278.75 632.691 1278.87 632.409 1279.09 632.193 cv
1279.31 631.977 1279.61 631.869 1280 631.869 cv
1280.39 631.869 1280.69 631.977 1280.91 632.193 cv
1281.13 632.409 1281.24 632.691 1281.24 633.039 cv
1281.24 633.387 1281.13 633.669 1280.91 633.885 cv
1280.69 634.101 1280.39 634.209 1280 634.209 cv
cp
1274.38 645 mo
1274.38 631.86 li
1276.29 631.86 li
1276.29 645 li
1274.38 645 li
cp
1267.25 643.677 mo
1267.9 643.677 1268.45 643.521 1268.88 643.209 cv
1269.33 642.897 1269.66 642.465 1269.89 641.913 cv
1269.89 641.067 li
1267.66 641.067 li
1266.35 641.067 1265.69 641.508 1265.69 642.39 cv
1265.69 642.792 1265.82 643.107 1266.08 643.335 cv
1266.34 643.563 1266.73 643.677 1267.25 643.677 cv
cp
1266.74 645.18 mo
1265.82 645.18 1265.09 644.94 1264.56 644.46 cv
1264.04 643.974 1263.78 643.332 1263.78 642.534 cv
1263.78 641.652 1264.1 640.974 1264.74 640.5 cv
1265.39 640.02 1266.31 639.78 1267.5 639.78 cv
1269.89 639.78 li
1269.89 639.636 li
1269.89 638.1 1269.21 637.332 1267.85 637.332 cv
1267.28 637.332 1266.81 637.437 1266.42 637.647 cv
1266.03 637.857 1265.71 638.16 1265.45 638.556 cv
1264.18 637.629 li
1264.56 637.023 1265.07 636.558 1265.7 636.234 cv
1266.33 635.91 1267.06 635.748 1267.87 635.748 cv
1268.07 635.748 li
1269.2 635.748 1270.1 636.072 1270.77 636.72 cv
1271.45 637.362 1271.78 638.31 1271.78 639.564 cv
1271.78 645 li
1269.95 645 li
1269.95 643.515 li
1269.6 644.049 1269.16 644.46 1268.61 644.748 cv
1268.07 645.036 1267.45 645.18 1266.74 645.18 cv
cp
1258.51 645.216 mo
1257.65 645.216 1256.89 645.027 1256.22 644.649 cv
1255.56 644.265 1255.04 643.719 1254.66 643.011 cv
1254.29 642.303 1254.1 641.463 1254.1 640.491 cv
1254.1 639.513 1254.29 638.67 1254.66 637.962 cv
1255.03 637.254 1255.55 636.708 1256.21 636.324 cv
1256.88 635.94 1257.64 635.748 1258.51 635.748 cv
1258.72 635.748 li
1259.44 635.748 1260.11 635.928 1260.74 636.288 cv
1261.37 636.648 1261.87 637.14 1262.24 637.764 cv
1260.78 638.682 li
1260.53 638.274 1260.23 637.953 1259.88 637.719 cv
1259.53 637.485 1259.14 637.368 1258.7 637.368 cv
1258.51 637.368 li
1257.76 637.368 1257.17 637.65 1256.73 638.214 cv
1256.3 638.778 1256.08 639.534 1256.08 640.482 cv
1256.08 641.436 1256.3 642.195 1256.73 642.759 cv
1257.17 643.323 1257.76 643.605 1258.51 643.605 cv
1258.7 643.605 li
1259.15 643.605 1259.55 643.503 1259.92 643.299 cv
1260.28 643.089 1260.6 642.81 1260.86 642.462 cv
1262.24 643.47 li
1261.84 644.016 1261.34 644.445 1260.73 644.757 cv
1260.12 645.063 1259.45 645.216 1258.72 645.216 cv
1258.51 645.216 li
cp
1248.67 645.216 mo
1246.87 645.216 1245.54 644.622 1244.7 643.434 cv
1245.93 642.399 li
1246.25 642.849 1246.65 643.182 1247.12 643.398 cv
1247.58 643.614 1248.09 643.722 1248.65 643.722 cv
1248.82 643.722 li
1249.39 643.722 1249.83 643.623 1250.14 643.425 cv
1250.46 643.221 1250.62 642.936 1250.62 642.57 cv
1250.62 642.252 1250.51 641.997 1250.29 641.805 cv
1250.08 641.613 1249.7 641.457 1249.15 641.337 cv
1247.66 641.013 li
1245.89 640.629 1245.01 639.798 1245.01 638.52 cv
1245.01 637.68 1245.34 637.008 1246.01 636.504 cv
1246.67 636 1247.54 635.748 1248.62 635.748 cv
1248.83 635.748 li
1249.57 635.748 1250.24 635.892 1250.84 636.18 cv
1251.45 636.462 1251.95 636.873 1252.34 637.413 cv
1251.14 638.403 li
1250.84 638.007 1250.5 637.716 1250.1 637.53 cv
1249.71 637.338 1249.28 637.242 1248.81 637.242 cv
1248.64 637.242 li
1248.11 637.242 1247.68 637.344 1247.36 637.548 cv
1247.04 637.746 1246.88 638.025 1246.88 638.385 cv
1246.88 638.667 1246.98 638.892 1247.19 639.06 cv
1247.39 639.228 1247.75 639.366 1248.26 639.474 cv
1249.9 639.825 li
1250.72 640.005 1251.35 640.311 1251.8 640.743 cv
1252.26 641.169 1252.49 641.745 1252.49 642.471 cv
1252.49 643.287 1252.17 643.95 1251.54 644.46 cv
1250.91 644.964 1250.03 645.216 1248.88 645.216 cv
1248.67 645.216 li
cp
1232.82 645 mo
1230.71 645 li
1231.18 644.268 1231.68 643.518 1232.23 642.75 cv
1232.79 641.982 1233.37 641.217 1233.98 640.455 cv
1233.39 639.687 1232.82 638.925 1232.28 638.169 cv
1231.75 637.413 1231.26 636.681 1230.82 635.973 cv
1233.04 635.973 li
1233.34 636.483 1233.68 637.023 1234.06 637.593 cv
1234.45 638.157 1234.84 638.721 1235.26 639.285 cv
1235.67 638.727 1236.07 638.163 1236.45 637.593 cv
1236.83 637.023 1237.17 636.483 1237.46 635.973 cv
1239.58 635.973 li
1239.13 636.681 1238.64 637.404 1238.1 638.142 cv
1237.57 638.88 1237.01 639.627 1236.42 640.383 cv
1237.03 641.175 1237.61 641.961 1238.17 642.741 cv
1238.72 643.515 1239.23 644.268 1239.69 645 cv
1237.47 645 li
1237.15 644.466 1236.79 643.902 1236.38 643.308 cv
1235.98 642.708 1235.56 642.12 1235.14 641.544 cv
1234.71 642.126 1234.29 642.714 1233.89 643.308 cv
1233.49 643.902 1233.13 644.466 1232.82 645 cv
cp
f
gsave
997 53 mo
1156 53 li
1164.28 53 1171 59.7157 1171 67.9998 cv
1171 263 li
1171 271.284 1164.28 278 1156 278 cv
997 278 li
988.716 278 982 271.284 982 263 cv
982 67.9998 li
982 59.7157 988.716 53 997 53 cv
clp
997 53 mo
1156 53 li
1164.28 53 1171 59.7157 1171 67.9998 cv
1171 263 li
1171 271.284 1164.28 278 1156 278 cv
997 278 li
988.716 278 982 271.284 982 263 cv
982 67.9998 li
982 59.7157 988.716 53 997 53 cv
.8 .901961 1 rgb
f
gsave
982 74.4998 mo
1171 74.4998 li
1171 76.5001 li
982 76.5001 li
982 74.4998 li
clp
1171 76.5001 mo
982 76.5001 li
982 74.4998 li
982 75.4999 li
1171 75.4999 li
1171 76.5001 li
f
1171 75.4999 mo
982 75.4999 li
982 74.4998 li
1171 74.4998 li
1171 75.4999 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 97.0002 mo
1171 97.0002 li
1171 99 li
982 99 li
982 97.0002 li
clp
1171 99 mo
982 99 li
982 97.0002 li
982 97.9999 li
1171 97.9999 li
1171 99 li
f
1171 97.9999 mo
982 97.9999 li
982 97.0002 li
1171 97.0002 li
1171 97.9999 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 119.5 mo
1171 119.5 li
1171 121.5 li
982 121.5 li
982 119.5 li
clp
1171 121.5 mo
982 121.5 li
982 119.5 li
982 120.5 li
1171 120.5 li
1171 121.5 li
f
1171 120.5 mo
982 120.5 li
982 119.5 li
1171 119.5 li
1171 120.5 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 142 mo
1171 142 li
1171 144 li
982 144 li
982 142 li
clp
1171 144 mo
982 144 li
982 142 li
982 143 li
1171 143 li
1171 144 li
f
1171 143 mo
982 143 li
982 142 li
1171 142 li
1171 143 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 164.5 mo
1171 164.5 li
1171 166.5 li
982 166.5 li
982 164.5 li
clp
1171 166.5 mo
982 166.5 li
982 164.5 li
982 165.5 li
1171 165.5 li
1171 166.5 li
f
1171 165.5 mo
982 165.5 li
982 164.5 li
1171 164.5 li
1171 165.5 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 187 mo
1171 187 li
1171 189 li
982 189 li
982 187 li
clp
1171 189 mo
982 189 li
982 187 li
982 188 li
1171 188 li
1171 189 li
f
1171 188 mo
982 188 li
982 187 li
1171 187 li
1171 188 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 209.5 mo
1171 209.5 li
1171 211.5 li
982 211.5 li
982 209.5 li
clp
1171 211.5 mo
982 211.5 li
982 209.5 li
982 210.5 li
1171 210.5 li
1171 211.5 li
f
1171 210.5 mo
982 210.5 li
982 209.5 li
1171 209.5 li
1171 210.5 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 232 mo
1171 232 li
1171 234 li
982 234 li
982 232 li
clp
1171 234 mo
982 234 li
982 232 li
982 233 li
1171 233 li
1171 234 li
f
1171 233 mo
982 233 li
982 232 li
1171 232 li
1171 233 li
.556863 .74902 .964706 rgb
f
grestore
gsave
982 254.5 mo
1171 254.5 li
1171 256.5 li
982 256.5 li
982 254.5 li
clp
1171 256.5 mo
982 256.5 li
982 254.5 li
982 255.5 li
1171 255.5 li
1171 256.5 li
f
1171 255.5 mo
982 255.5 li
982 254.5 li
1171 254.5 li
1171 255.5 li
.556863 .74902 .964706 rgb
f
grestore
grestore
1099.38 185.63 mo
1098.23 185.63 1097.38 185.35 1096.83 184.79 cv
1096.29 184.223 1096.02 183.333 1096.02 182.12 cv
1096.02 176.94 li
1094.06 176.94 li
1094.06 175.5 li
1096.02 175.5 li
1096.02 172.52 li
1097.82 172.52 li
1097.82 175.5 li
1101.06 175.5 li
1101.06 176.94 li
1097.82 176.94 li
1097.82 181.9 li
1097.82 182.727 1097.96 183.303 1098.23 183.63 cv
1098.51 183.95 1098.98 184.11 1099.64 184.11 cv
1099.94 184.11 1100.21 184.093 1100.45 184.06 cv
1100.69 184.027 1100.94 183.987 1101.2 183.94 cv
1101.2 185.4 li
1100.93 185.467 1100.64 185.52 1100.32 185.56 cv
1100 185.607 1099.69 185.63 1099.38 185.63 cv
cp
1086.78 185.74 mo
1086.57 185.74 li
1085.42 185.74 1084.54 185.36 1083.93 184.6 cv
1083.32 183.84 1083.02 182.757 1083.02 181.35 cv
1083.02 175.5 li
1084.82 175.5 li
1084.82 181.12 li
1084.82 183.173 1085.55 184.2 1087.02 184.2 cv
1087.22 184.2 li
1087.93 184.2 1088.53 183.973 1089.02 183.52 cv
1089.52 183.067 1089.89 182.493 1090.13 181.8 cv
1090.13 175.5 li
1091.93 175.5 li
1091.93 185.5 li
1090.13 185.5 li
1090.13 183.77 li
1089.76 184.383 1089.3 184.867 1088.73 185.22 cv
1088.17 185.567 1087.52 185.74 1086.78 185.74 cv
cp
1075.48 184.2 mo
1075.67 184.2 li
1076.58 184.2 1077.3 183.877 1077.84 183.23 cv
1078.38 182.583 1078.65 181.673 1078.65 180.5 cv
1078.65 179.32 1078.38 178.41 1077.84 177.77 cv
1077.3 177.123 1076.58 176.8 1075.67 176.8 cv
1075.48 176.8 li
1074.82 176.8 1074.23 177.01 1073.73 177.43 cv
1073.23 177.843 1072.84 178.387 1072.57 179.06 cv
1072.57 181.94 li
1072.84 182.613 1073.23 183.16 1073.73 183.58 cv
1074.23 183.993 1074.82 184.2 1075.48 184.2 cv
cp
1072.57 189.7 mo
1070.77 189.7 li
1070.77 175.5 li
1072.57 175.5 li
1072.57 177.05 li
1072.93 176.457 1073.41 176.01 1073.99 175.71 cv
1074.57 175.41 1075.21 175.26 1075.9 175.26 cv
1076.11 175.26 li
1076.99 175.26 1077.76 175.483 1078.42 175.93 cv
1079.08 176.37 1079.59 176.983 1079.96 177.77 cv
1080.32 178.557 1080.51 179.467 1080.51 180.5 cv
1080.51 181.527 1080.32 182.437 1079.96 183.23 cv
1079.59 184.017 1079.08 184.633 1078.42 185.08 cv
1077.76 185.52 1076.99 185.74 1076.11 185.74 cv
1075.9 185.74 li
1075.19 185.74 1074.55 185.58 1073.97 185.26 cv
1073.39 184.94 1072.92 184.467 1072.57 183.84 cv
1072.57 189.7 li
cp
1058.77 185.5 mo
1058.77 175.5 li
1060.57 175.5 li
1060.57 177.23 li
1060.95 176.617 1061.41 176.137 1061.97 175.79 cv
1062.54 175.437 1063.19 175.26 1063.93 175.26 cv
1064.14 175.26 li
1065.26 175.26 1066.13 175.64 1066.75 176.4 cv
1067.38 177.16 1067.69 178.243 1067.69 179.65 cv
1067.69 185.5 li
1065.89 185.5 li
1065.89 179.88 li
1065.89 177.827 1065.16 176.8 1063.69 176.8 cv
1063.49 176.8 li
1062.78 176.8 1062.17 177.027 1061.67 177.48 cv
1061.18 177.933 1060.81 178.51 1060.57 179.21 cv
1060.57 185.5 li
1058.77 185.5 li
cp
1053.15 185.5 mo
1053.15 171.5 li
1055.06 171.5 li
1055.06 185.5 li
1053.15 185.5 li
cp
1089.98 160.14 mo
1090.24 160.14 li
1091.21 160.14 1091.97 159.917 1092.53 159.47 cv
1093.1 159.023 1093.38 158.4 1093.38 157.6 cv
1093.38 156.8 1093.1 156.18 1092.52 155.74 cv
1091.95 155.293 1091.19 155.07 1090.24 155.07 cv
1089.98 155.07 li
1089.04 155.07 1088.28 155.293 1087.7 155.74 cv
1087.13 156.18 1086.84 156.8 1086.84 157.6 cv
1086.84 158.4 1087.12 159.023 1087.68 159.47 cv
1088.25 159.917 1089.02 160.14 1089.98 160.14 cv
cp
1089.98 153.51 mo
1090.24 153.51 li
1091.08 153.51 1091.76 153.31 1092.27 152.91 cv
1092.79 152.503 1093.04 151.917 1093.04 151.15 cv
1093.04 150.403 1092.79 149.833 1092.27 149.44 cv
1091.76 149.04 1091.08 148.84 1090.24 148.84 cv
1089.98 148.84 li
1089.14 148.84 1088.47 149.04 1087.95 149.44 cv
1087.44 149.833 1087.18 150.403 1087.18 151.15 cv
1087.18 151.917 1087.44 152.503 1087.95 152.91 cv
1088.47 153.31 1089.14 153.51 1089.98 153.51 cv
cp
1089.97 161.74 mo
1088.37 161.74 1087.12 161.367 1086.23 160.62 cv
1085.35 159.867 1084.91 158.893 1084.91 157.7 cv
1084.91 156.873 1085.12 156.16 1085.52 155.56 cv
1085.94 154.953 1086.54 154.5 1087.34 154.2 cv
1086.64 153.907 1086.12 153.49 1085.78 152.95 cv
1085.44 152.403 1085.27 151.773 1085.27 151.06 cv
1085.27 149.947 1085.69 149.037 1086.52 148.33 cv
1087.36 147.617 1088.51 147.26 1089.97 147.26 cv
1090.25 147.26 li
1091.73 147.26 1092.88 147.617 1093.7 148.33 cv
1094.54 149.037 1094.95 149.947 1094.95 151.06 cv
1094.95 151.773 1094.78 152.403 1094.44 152.95 cv
1094.1 153.49 1093.58 153.907 1092.88 154.2 cv
1093.68 154.5 1094.29 154.953 1094.69 155.56 cv
1095.11 156.16 1095.31 156.873 1095.31 157.7 cv
1095.31 158.893 1094.87 159.867 1093.98 160.62 cv
1093.1 161.367 1091.86 161.74 1090.25 161.74 cv
1089.97 161.74 li
cp
1077.06 149.13 mo
1073.33 149.13 li
1073.33 155 li
1077.06 155 li
1079.34 155 1080.48 154.023 1080.48 152.07 cv
1080.48 150.11 1079.34 149.13 1077.06 149.13 cv
cp
1071.44 161.5 mo
1071.44 147.5 li
1077.24 147.5 li
1078.91 147.5 1080.19 147.893 1081.08 148.68 cv
1081.97 149.467 1082.42 150.597 1082.42 152.07 cv
1082.42 153.537 1081.97 154.663 1081.08 155.45 cv
1080.19 156.237 1078.91 156.63 1077.24 156.63 cv
1073.33 156.63 li
1073.33 161.5 li
1071.44 161.5 li
cp
1058.38 161.5 mo
1058.38 147.5 li
1068.2 147.5 li
1068.2 149.16 li
1060.29 149.16 li
1060.29 153.77 li
1066.88 153.77 li
1066.88 155.44 li
1060.29 155.44 li
1060.29 161.5 li
1058.38 161.5 li
cp
0 .392157 .878431 rgb
f
gsave
1060 382 mo
1073 382 li
1075.76 382 1078 384.238 1078 387 cv
1078 602 li
1078 604.761 1075.76 607 1073 607 cv
1060 607 li
1057.24 607 1055 604.761 1055 602 cv
1055 387 li
1055 384.238 1057.24 382 1060 382 cv
clp
1060 382 mo
1073 382 li
1075.76 382 1078 384.238 1078 387 cv
1078 602 li
1078 604.761 1075.76 607 1073 607 cv
1060 607 li
1057.24 607 1055 604.761 1055 602 cv
1055 387 li
1055 384.238 1057.24 382 1060 382 cv
.8 .901961 1 rgb
f
1055 382 mo
1078 382 li
1078 404.5 li
1055 404.5 li
1055 382 li
0 .392157 .878431 rgb
f
gsave
1055 403.5 mo
1078 403.5 li
1078 405.5 li
1055 405.5 li
1055 403.5 li
clp
1078 405.5 mo
1055 405.5 li
1055 404.5 li
1078 404.5 li
1078 405.5 li
.8 .901961 1 rgb
f
1078 404.5 mo
1055 404.5 li
1055 403.5 li
1078 403.5 li
1078 404.5 li
0 .392157 .878431 rgb
f
grestore
gsave
1055 426 mo
1078 426 li
1078 428 li
1055 428 li
1055 426 li
clp
1078 428 mo
1055 428 li
1055 426 li
1055 427 li
1078 427 li
1078 428 li
.8 .901961 1 rgb
f
1078 427 mo
1055 427 li
1055 426 li
1078 426 li
1078 427 li
.556863 .74902 .964706 rgb
f
grestore
gsave
1055 448.5 mo
1078 448.5 li
1078 450.5 li
1055 450.5 li
1055 448.5 li
clp
1078 450.5 mo
1055 450.5 li
1055 448.5 li
1055 449.5 li
1078 449.5 li
1078 450.5 li
.8 .901961 1 rgb
f
1078 449.5 mo
1055 449.5 li
1055 448.5 li
1078 448.5 li
1078 449.5 li
.556863 .74902 .964706 rgb
f
grestore
gsave
1055 471 mo
1078 471 li
1078 473 li
1055 473 li
1055 471 li
clp
1078 473 mo
1055 473 li
1055 471 li
1055 472 li
1078 472 li
1078 473 li
.8 .901961 1 rgb
f
1078 472 mo
1055 472 li
1055 471 li
1078 471 li
1078 472 li
.556863 .74902 .964706 rgb
f
grestore
gsave
1055 493.5 mo
1078 493.5 li
1078 495.5 li
1055 495.5 li
1055 493.5 li
clp
1078 495.5 mo
1055 495.5 li
1055 493.5 li
1055 494.5 li
1078 494.5 li
1078 495.5 li
.8 .901961 1 rgb
f
1078 494.5 mo
1055 494.5 li
1055 493.5 li
1078 493.5 li
1078 494.5 li
.556863 .74902 .964706 rgb
f
grestore
gsave
1055 516 mo
1078 516 li
1078 518 li
1055 518 li
1055 516 li
clp
1078 518 mo
1055 518 li
1055 516 li
1055 517 li
1078 517 li
1078 518 li
.8 .901961 1 rgb
f
1078 517 mo
1055 517 li
1055 516 li
1078 516 li
1078 517 li
.556863 .74902 .964706 rgb
f
grestore
gsave
1055 538.5 mo
1078 538.5 li
1078 540.5 li
1055 540.5 li
1055 538.5 li
clp
1078 540.5 mo
1055 540.5 li
1055 538.5 li
1055 539.5 li
1078 539.5 li
1078 540.5 li
.8 .901961 1 rgb
f
1078 539.5 mo
1055 539.5 li
1055 538.5 li
1078 538.5 li
1078 539.5 li
.556863 .74902 .964706 rgb
f
grestore
gsave
1055 561 mo
1078 561 li
1078 563 li
1055 563 li
1055 561 li
clp
1078 563 mo
1055 563 li
1055 561 li
1055 562 li
1078 562 li
1078 563 li
.8 .901961 1 rgb
f
1078 562 mo
1055 562 li
1055 561 li
1078 561 li
1078 562 li
.556863 .74902 .964706 rgb
f
grestore
gsave
1055 583.5 mo
1078 583.5 li
1078 585.5 li
1055 585.5 li
1055 583.5 li
clp
1078 585.5 mo
1055 585.5 li
1055 583.5 li
1055 584.5 li
1078 584.5 li
1078 585.5 li
.8 .901961 1 rgb
f
1078 584.5 mo
1055 584.5 li
1055 583.5 li
1078 583.5 li
1078 584.5 li
.556863 .74902 .964706 rgb
f
grestore
grestore
gsave
1280 53 mo
1385 53 li
1393.28 53 1400 59.7157 1400 67.9998 cv
1400 263 li
1400 271.284 1393.28 278 1385 278 cv
1280 278 li
1271.72 278 1265 271.284 1265 263 cv
1265 67.9998 li
1265 59.7157 1271.72 53 1280 53 cv
clp
1280 53 mo
1385 53 li
1393.28 53 1400 59.7157 1400 67.9998 cv
1400 263 li
1400 271.284 1393.28 278 1385 278 cv
1280 278 li
1271.72 278 1265 271.284 1265 263 cv
1265 67.9998 li
1265 59.7157 1271.72 53 1280 53 cv
.882353 .882353 1 rgb
f
gsave
1286.5 53 mo
1288.5 53 li
1288.5 278 li
1286.5 278 li
1286.5 53 li
clp
1288.5 278 mo
1287.5 278 li
1287.5 53 li
1286.5 53 li
1288.5 53 li
1288.5 278 li
f
1287.5 278 mo
1286.5 278 li
1286.5 53 li
1287.5 53 li
1287.5 278 li
.745098 .717647 .964706 rgb
f
grestore
gsave
1309 53 mo
1311 53 li
1311 278 li
1309 278 li
1309 53 li
clp
1311 278 mo
1310 278 li
1310 53 li
1309 53 li
1311 53 li
1311 278 li
f
1310 278 mo
1309 278 li
1309 53 li
1310 53 li
1310 278 li
.745098 .717647 .964706 rgb
f
grestore
gsave
1331.5 53 mo
1333.5 53 li
1333.5 278 li
1331.5 278 li
1331.5 53 li
clp
1333.5 278 mo
1332.5 278 li
1332.5 53 li
1331.5 53 li
1333.5 53 li
1333.5 278 li
f
1332.5 278 mo
1331.5 278 li
1331.5 53 li
1332.5 53 li
1332.5 278 li
.745098 .717647 .964706 rgb
f
grestore
gsave
1354 53 mo
1356 53 li
1356 278 li
1354 278 li
1354 53 li
clp
1356 278 mo
1355 278 li
1355 53 li
1354 53 li
1356 53 li
1356 278 li
f
1355 278 mo
1354 278 li
1354 53 li
1355 53 li
1355 278 li
.745098 .717647 .964706 rgb
f
grestore
gsave
1376.5 53 mo
1378.5 53 li
1378.5 278 li
1376.5 278 li
1376.5 53 li
clp
1378.5 278 mo
1377.5 278 li
1377.5 53 li
1376.5 53 li
1378.5 53 li
1378.5 278 li
f
1377.5 278 mo
1376.5 278 li
1376.5 53 li
1377.5 53 li
1377.5 278 li
.745098 .717647 .964706 rgb
f
grestore
grestore
1365.11 185.63 mo
1363.96 185.63 1363.11 185.35 1362.56 184.79 cv
1362.02 184.223 1361.75 183.333 1361.75 182.12 cv
1361.75 176.94 li
1359.79 176.94 li
1359.79 175.5 li
1361.75 175.5 li
1361.75 172.52 li
1363.55 172.52 li
1363.55 175.5 li
1366.79 175.5 li
1366.79 176.94 li
1363.55 176.94 li
1363.55 181.9 li
1363.55 182.727 1363.69 183.303 1363.96 183.63 cv
1364.24 183.95 1364.71 184.11 1365.37 184.11 cv
1365.67 184.11 1365.94 184.093 1366.18 184.06 cv
1366.42 184.027 1366.67 183.987 1366.93 183.94 cv
1366.93 185.4 li
1366.66 185.467 1366.37 185.52 1366.05 185.56 cv
1365.73 185.607 1365.42 185.63 1365.11 185.63 cv
cp
1348.9 185.5 mo
1348.9 170.9 li
1350.7 170.9 li
1350.7 177.23 li
1351.07 176.617 1351.54 176.137 1352.1 175.79 cv
1352.67 175.437 1353.32 175.26 1354.06 175.26 cv
1354.27 175.26 li
1355.38 175.26 1356.25 175.64 1356.88 176.4 cv
1357.51 177.16 1357.82 178.243 1357.82 179.65 cv
1357.82 185.5 li
1356.02 185.5 li
1356.02 179.88 li
1356.02 177.827 1355.29 176.8 1353.82 176.8 cv
1353.62 176.8 li
1352.91 176.8 1352.3 177.027 1351.8 177.48 cv
1351.31 177.933 1350.94 178.51 1350.7 179.21 cv
1350.7 185.5 li
1348.9 185.5 li
cp
1340.84 184.06 mo
1341.03 184.06 li
1341.67 184.06 1342.23 183.877 1342.72 183.51 cv
1343.22 183.143 1343.61 182.643 1343.88 182.01 cv
1343.88 178.85 li
1343.62 178.223 1343.23 177.727 1342.73 177.36 cv
1342.23 176.987 1341.67 176.8 1341.03 176.8 cv
1340.84 176.8 li
1339.94 176.8 1339.23 177.117 1338.7 177.75 cv
1338.18 178.377 1337.91 179.27 1337.91 180.43 cv
1337.91 181.59 1338.18 182.487 1338.7 183.12 cv
1339.23 183.747 1339.94 184.06 1340.84 184.06 cv
cp
1340.63 185.6 mo
1340.42 185.6 li
1339.54 185.6 1338.77 185.383 1338.11 184.95 cv
1337.46 184.51 1336.95 183.9 1336.58 183.12 cv
1336.22 182.34 1336.04 181.443 1336.04 180.43 cv
1336.04 179.41 1336.22 178.513 1336.58 177.74 cv
1336.95 176.96 1337.46 176.353 1338.11 175.92 cv
1338.77 175.48 1339.54 175.26 1340.42 175.26 cv
1340.63 175.26 li
1341.3 175.26 1341.91 175.403 1342.47 175.69 cv
1343.04 175.97 1343.51 176.39 1343.88 176.95 cv
1343.88 175.55 li
1345.66 175.55 li
1345.66 184.77 li
1345.66 185.937 1345.46 186.9 1345.05 187.66 cv
1344.65 188.427 1344.1 188.997 1343.38 189.37 cv
1342.67 189.743 1341.85 189.93 1340.93 189.93 cv
1340.73 189.93 li
1339.83 189.93 1339.03 189.75 1338.32 189.39 cv
1337.62 189.037 1337.04 188.527 1336.58 187.86 cv
1337.89 186.87 li
1338.21 187.37 1338.6 187.747 1339.06 188 cv
1339.53 188.26 1340.09 188.39 1340.75 188.39 cv
1341.76 188.39 1342.53 188.103 1343.07 187.53 cv
1343.61 186.963 1343.88 186.097 1343.88 184.93 cv
1343.88 183.84 li
1343.52 184.427 1343.06 184.867 1342.49 185.16 cv
1341.93 185.453 1341.31 185.6 1340.63 185.6 cv
cp
1331.56 185.5 mo
1331.56 175.5 li
1333.36 175.5 li
1333.36 185.5 li
1331.56 185.5 li
cp
1332.46 173.44 mo
1332.08 173.44 1331.78 173.33 1331.56 173.11 cv
1331.34 172.883 1331.24 172.597 1331.24 172.25 cv
1331.24 171.897 1331.34 171.61 1331.56 171.39 cv
1331.78 171.17 1332.08 171.06 1332.46 171.06 cv
1332.84 171.06 1333.13 171.17 1333.35 171.39 cv
1333.57 171.61 1333.68 171.897 1333.68 172.25 cv
1333.68 172.597 1333.57 172.883 1333.35 173.11 cv
1333.13 173.33 1332.84 173.44 1332.46 173.44 cv
cp
1324.27 176.76 mo
1323.49 176.76 1322.85 177.037 1322.34 177.59 cv
1321.83 178.137 1321.53 178.877 1321.42 179.81 cv
1327.11 179.81 li
1327.06 178.943 1326.81 178.22 1326.36 177.64 cv
1325.91 177.053 1325.27 176.76 1324.46 176.76 cv
1324.27 176.76 li
cp
1324.35 185.74 mo
1323.4 185.74 1322.56 185.52 1321.84 185.08 cv
1321.12 184.64 1320.56 184.03 1320.16 183.25 cv
1319.76 182.463 1319.56 181.55 1319.56 180.51 cv
1319.56 179.483 1319.76 178.577 1320.15 177.79 cv
1320.55 176.997 1321.11 176.377 1321.82 175.93 cv
1322.54 175.483 1323.37 175.26 1324.32 175.26 cv
1324.52 175.26 li
1325.4 175.26 1326.17 175.48 1326.82 175.92 cv
1327.48 176.36 1327.99 176.98 1328.36 177.78 cv
1328.73 178.58 1328.91 179.527 1328.91 180.62 cv
1328.91 181.17 li
1321.41 181.17 li
1321.52 182.11 1321.83 182.857 1322.36 183.41 cv
1322.89 183.957 1323.58 184.23 1324.44 184.23 cv
1324.64 184.23 li
1325.15 184.23 1325.62 184.123 1326.07 183.91 cv
1326.52 183.697 1326.89 183.407 1327.2 183.04 cv
1328.33 184.12 li
1327.88 184.62 1327.33 185.017 1326.68 185.31 cv
1326.03 185.597 1325.32 185.74 1324.56 185.74 cv
1324.35 185.74 li
cp
1304.1 185.5 mo
1303.59 184.047 1303.1 182.533 1302.61 180.96 cv
1302.12 179.38 1301.67 177.79 1301.24 176.19 cv
1300.82 174.59 1300.45 173.027 1300.13 171.5 cv
1302.22 171.5 li
1302.47 172.807 1302.76 174.177 1303.09 175.61 cv
1303.42 177.037 1303.78 178.457 1304.17 179.87 cv
1304.56 181.277 1304.95 182.61 1305.35 183.87 cv
1308.36 173.05 li
1310.42 173.05 li
1313.43 183.91 li
1313.83 182.643 1314.23 181.303 1314.62 179.89 cv
1315.02 178.47 1315.39 177.047 1315.73 175.62 cv
1316.08 174.187 1316.37 172.813 1316.62 171.5 cv
1318.64 171.5 li
1318.32 173.027 1317.95 174.59 1317.52 176.19 cv
1317.1 177.79 1316.65 179.38 1316.16 180.96 cv
1315.67 182.533 1315.18 184.047 1314.67 185.5 cv
1312.16 185.5 li
1309.36 175.38 li
1306.57 185.5 li
1304.1 185.5 li
cp
1344.71 160.14 mo
1344.97 160.14 li
1345.93 160.14 1346.7 159.917 1347.26 159.47 cv
1347.82 159.023 1348.11 158.4 1348.11 157.6 cv
1348.11 156.8 1347.82 156.18 1347.25 155.74 cv
1346.67 155.293 1345.91 155.07 1344.97 155.07 cv
1344.71 155.07 li
1343.76 155.07 1343 155.293 1342.43 155.74 cv
1341.85 156.18 1341.57 156.8 1341.57 157.6 cv
1341.57 158.4 1341.85 159.023 1342.41 159.47 cv
1342.97 159.917 1343.74 160.14 1344.71 160.14 cv
cp
1344.71 153.51 mo
1344.97 153.51 li
1345.81 153.51 1346.48 153.31 1347 152.91 cv
1347.51 152.503 1347.77 151.917 1347.77 151.15 cv
1347.77 150.403 1347.51 149.833 1347 149.44 cv
1346.48 149.04 1345.81 148.84 1344.97 148.84 cv
1344.71 148.84 li
1343.87 148.84 1343.19 149.04 1342.68 149.44 cv
1342.16 149.833 1341.91 150.403 1341.91 151.15 cv
1341.91 151.917 1342.16 152.503 1342.68 152.91 cv
1343.19 153.31 1343.87 153.51 1344.71 153.51 cv
cp
1344.7 161.74 mo
1343.09 161.74 1341.84 161.367 1340.96 160.62 cv
1340.08 159.867 1339.64 158.893 1339.64 157.7 cv
1339.64 156.873 1339.84 156.16 1340.25 155.56 cv
1340.66 154.953 1341.27 154.5 1342.07 154.2 cv
1341.37 153.907 1340.85 153.49 1340.51 152.95 cv
1340.17 152.403 1340 151.773 1340 151.06 cv
1340 149.947 1340.41 149.037 1341.25 148.33 cv
1342.08 147.617 1343.23 147.26 1344.7 147.26 cv
1344.98 147.26 li
1346.45 147.26 1347.6 147.617 1348.43 148.33 cv
1349.26 149.037 1349.68 149.947 1349.68 151.06 cv
1349.68 151.773 1349.51 152.403 1349.17 152.95 cv
1348.83 153.49 1348.31 153.907 1347.61 154.2 cv
1348.41 154.5 1349.01 154.953 1349.42 155.56 cv
1349.83 156.16 1350.04 156.873 1350.04 157.7 cv
1350.04 158.893 1349.59 159.867 1348.71 160.62 cv
1347.83 161.367 1346.58 161.74 1344.98 161.74 cv
1344.7 161.74 li
cp
1331.79 149.13 mo
1328.06 149.13 li
1328.06 155 li
1331.79 155 li
1334.07 155 1335.21 154.023 1335.21 152.07 cv
1335.21 150.11 1334.07 149.13 1331.79 149.13 cv
cp
1326.17 161.5 mo
1326.17 147.5 li
1331.97 147.5 li
1333.64 147.5 1334.92 147.893 1335.81 148.68 cv
1336.7 149.467 1337.15 150.597 1337.15 152.07 cv
1337.15 153.537 1336.7 154.663 1335.81 155.45 cv
1334.92 156.237 1333.64 156.63 1331.97 156.63 cv
1328.06 156.63 li
1328.06 161.5 li
1326.17 161.5 li
cp
1313.1 161.5 mo
1313.1 147.5 li
1322.92 147.5 li
1322.92 149.16 li
1315.01 149.16 li
1315.01 153.77 li
1321.6 153.77 li
1321.6 155.44 li
1315.01 155.44 li
1315.01 161.5 li
1313.1 161.5 li
cp
.431373 .333333 .882353 rgb
f
gsave
1270 477 mo
1395 477 li
1397.76 477 1400 479.239 1400 482 cv
1400 494 li
1400 496.761 1397.76 499 1395 499 cv
1270 499 li
1267.24 499 1265 496.761 1265 494 cv
1265 482 li
1265 479.239 1267.24 477 1270 477 cv
clp
1270 477 mo
1395 477 li
1397.76 477 1400 479.239 1400 482 cv
1400 494 li
1400 496.761 1397.76 499 1395 499 cv
1270 499 li
1267.24 499 1265 496.761 1265 494 cv
1265 482 li
1265 479.239 1267.24 477 1270 477 cv
.882353 .882353 1 rgb
f
1265 477 mo
1287.5 477 li
1287.5 702 li
1265 702 li
1265 477 li
.431373 .333333 .882353 rgb
f
gsave
1286.5 477 mo
1288.5 477 li
1288.5 702 li
1286.5 702 li
1286.5 477 li
clp
1288.5 499 mo
1287.5 499 li
1287.5 477 li
1288.5 477 li
1288.5 499 li
.882353 .882353 1 rgb
f
1287.5 499 mo
1286.5 499 li
1286.5 477 li
1287.5 477 li
1287.5 499 li
.431373 .333333 .882353 rgb
f
grestore
gsave
1309 477 mo
1311 477 li
1311 702 li
1309 702 li
1309 477 li
clp
1311 499 mo
1310 499 li
1310 477 li
1309 477 li
1311 477 li
1311 499 li
.882353 .882353 1 rgb
f
1310 499 mo
1309 499 li
1309 477 li
1310 477 li
1310 499 li
.745098 .717647 .964706 rgb
f
grestore
gsave
1331.5 477 mo
1333.5 477 li
1333.5 702 li
1331.5 702 li
1331.5 477 li
clp
1333.5 499 mo
1332.5 499 li
1332.5 477 li
1331.5 477 li
1333.5 477 li
1333.5 499 li
.882353 .882353 1 rgb
f
1332.5 499 mo
1331.5 499 li
1331.5 477 li
1332.5 477 li
1332.5 499 li
.745098 .717647 .964706 rgb
f
grestore
gsave
1354 477 mo
1356 477 li
1356 702 li
1354 702 li
1354 477 li
clp
1356 499 mo
1355 499 li
1355 477 li
1354 477 li
1356 477 li
1356 499 li
.882353 .882353 1 rgb
f
1355 499 mo
1354 499 li
1354 477 li
1355 477 li
1355 499 li
.745098 .717647 .964706 rgb
f
grestore
gsave
1376.5 477 mo
1378.5 477 li
1378.5 702 li
1376.5 702 li
1376.5 477 li
clp
1378.5 499 mo
1377.5 499 li
1377.5 477 li
1376.5 477 li
1378.5 477 li
1378.5 499 li
.882353 .882353 1 rgb
f
1377.5 499 mo
1376.5 499 li
1376.5 477 li
1377.5 477 li
1377.5 499 li
.745098 .717647 .964706 rgb
f
grestore
grestore
1509 53 mo
1668 53 li
1676.28 53 1683 59.7157 1683 68 cv
1683 263 li
1683 271.284 1676.28 278 1668 278 cv
1509 278 li
1500.72 278 1494 271.284 1494 263 cv
1494 68 li
1494 59.7157 1500.72 53 1509 53 cv
cp
.521569 .584314 .643137 rgb
f
1620.05 182.13 mo
1618.9 182.13 1618.05 181.85 1617.5 181.29 cv
1616.96 180.723 1616.69 179.833 1616.69 178.62 cv
1616.69 173.44 li
1614.73 173.44 li
1614.73 172 li
1616.69 172 li
1616.69 169.02 li
1618.49 169.02 li
1618.49 172 li
1621.73 172 li
1621.73 173.44 li
1618.49 173.44 li
1618.49 178.4 li
1618.49 179.227 1618.63 179.803 1618.9 180.13 cv
1619.18 180.45 1619.65 180.61 1620.31 180.61 cv
1620.61 180.61 1620.88 180.593 1621.12 180.56 cv
1621.36 180.527 1621.61 180.487 1621.87 180.44 cv
1621.87 181.9 li
1621.6 181.967 1621.31 182.02 1620.99 182.06 cv
1620.67 182.107 1620.36 182.13 1620.05 182.13 cv
cp
1607.45 182.24 mo
1607.24 182.24 li
1606.08 182.24 1605.2 181.86 1604.6 181.1 cv
1603.99 180.34 1603.69 179.257 1603.69 177.85 cv
1603.69 172 li
1605.49 172 li
1605.49 177.62 li
1605.49 179.673 1606.22 180.7 1607.69 180.7 cv
1607.89 180.7 li
1608.59 180.7 1609.19 180.473 1609.69 180.02 cv
1610.19 179.567 1610.56 178.993 1610.8 178.3 cv
1610.8 172 li
1612.6 172 li
1612.6 182 li
1610.8 182 li
1610.8 180.27 li
1610.43 180.883 1609.96 181.367 1609.4 181.72 cv
1608.84 182.067 1608.19 182.24 1607.45 182.24 cv
cp
1596.15 180.7 mo
1596.34 180.7 li
1597.25 180.7 1597.97 180.377 1598.51 179.73 cv
1599.05 179.083 1599.32 178.173 1599.32 177 cv
1599.32 175.82 1599.05 174.91 1598.51 174.27 cv
1597.97 173.623 1597.25 173.3 1596.34 173.3 cv
1596.15 173.3 li
1595.49 173.3 1594.9 173.51 1594.4 173.93 cv
1593.9 174.343 1593.51 174.887 1593.24 175.56 cv
1593.24 178.44 li
1593.51 179.113 1593.9 179.66 1594.4 180.08 cv
1594.9 180.493 1595.49 180.7 1596.15 180.7 cv
cp
1593.24 186.2 mo
1591.44 186.2 li
1591.44 172 li
1593.24 172 li
1593.24 173.55 li
1593.6 172.957 1594.08 172.51 1594.66 172.21 cv
1595.24 171.91 1595.88 171.76 1596.57 171.76 cv
1596.78 171.76 li
1597.66 171.76 1598.43 171.983 1599.09 172.43 cv
1599.75 172.87 1600.26 173.483 1600.63 174.27 cv
1600.99 175.057 1601.18 175.967 1601.18 177 cv
1601.18 178.027 1600.99 178.937 1600.63 179.73 cv
1600.26 180.517 1599.75 181.133 1599.09 181.58 cv
1598.43 182.02 1597.66 182.24 1596.78 182.24 cv
1596.57 182.24 li
1595.86 182.24 1595.22 182.08 1594.64 181.76 cv
1594.06 181.44 1593.59 180.967 1593.24 180.34 cv
1593.24 186.2 li
cp
1587.26 182.13 mo
1586.1 182.13 1585.25 181.85 1584.71 181.29 cv
1584.17 180.723 1583.9 179.833 1583.9 178.62 cv
1583.9 173.44 li
1581.94 173.44 li
1581.94 172 li
1583.9 172 li
1583.9 169.02 li
1585.7 169.02 li
1585.7 172 li
1588.94 172 li
1588.94 173.44 li
1585.7 173.44 li
1585.7 178.4 li
1585.7 179.227 1585.83 179.803 1586.11 180.13 cv
1586.39 180.45 1586.86 180.61 1587.52 180.61 cv
1587.82 180.61 1588.09 180.593 1588.33 180.56 cv
1588.57 180.527 1588.82 180.487 1589.08 180.44 cv
1589.08 181.9 li
1588.81 181.967 1588.52 182.02 1588.2 182.06 cv
1587.88 182.107 1587.56 182.13 1587.26 182.13 cv
cp
1574.66 182.24 mo
1574.45 182.24 li
1573.29 182.24 1572.41 181.86 1571.81 181.1 cv
1571.2 180.34 1570.9 179.257 1570.9 177.85 cv
1570.9 172 li
1572.7 172 li
1572.7 177.62 li
1572.7 179.673 1573.43 180.7 1574.9 180.7 cv
1575.1 180.7 li
1575.8 180.7 1576.4 180.473 1576.9 180.02 cv
1577.4 179.567 1577.77 178.993 1578.01 178.3 cv
1578.01 172 li
1579.81 172 li
1579.81 182 li
1578.01 182 li
1578.01 180.27 li
1577.64 180.883 1577.17 181.367 1576.61 181.72 cv
1576.05 182.067 1575.4 182.24 1574.66 182.24 cv
cp
1561.29 180.6 mo
1561.55 180.6 li
1562.5 180.6 1563.33 180.37 1564.04 179.91 cv
1564.75 179.443 1565.29 178.79 1565.68 177.95 cv
1566.07 177.11 1566.26 176.127 1566.26 175 cv
1566.26 173.873 1566.07 172.89 1565.68 172.05 cv
1565.29 171.21 1564.75 170.56 1564.04 170.1 cv
1563.33 169.633 1562.5 169.4 1561.55 169.4 cv
1561.29 169.4 li
1560.34 169.4 1559.51 169.633 1558.8 170.1 cv
1558.09 170.56 1557.55 171.21 1557.16 172.05 cv
1556.77 172.89 1556.58 173.873 1556.58 175 cv
1556.58 176.127 1556.77 177.11 1557.16 177.95 cv
1557.55 178.79 1558.09 179.443 1558.8 179.91 cv
1559.51 180.37 1560.34 180.6 1561.29 180.6 cv
cp
1561.28 182.24 mo
1559.91 182.24 1558.73 181.93 1557.73 181.31 cv
1556.73 180.683 1555.96 179.827 1555.41 178.74 cv
1554.87 177.647 1554.6 176.4 1554.6 175 cv
1554.6 173.6 1554.87 172.357 1555.41 171.27 cv
1555.96 170.177 1556.73 169.32 1557.73 168.7 cv
1558.73 168.073 1559.91 167.76 1561.28 167.76 cv
1561.56 167.76 li
1562.93 167.76 1564.11 168.073 1565.11 168.7 cv
1566.11 169.32 1566.88 170.177 1567.42 171.27 cv
1567.97 172.357 1568.24 173.6 1568.24 175 cv
1568.24 176.4 1567.97 177.647 1567.42 178.74 cv
1566.88 179.827 1566.11 180.683 1565.11 181.31 cv
1564.11 181.93 1562.93 182.24 1561.56 182.24 cv
1561.28 182.24 li
cp
1604.5 156.64 mo
1604.69 156.64 li
1605.61 156.64 1606.34 156.367 1606.88 155.82 cv
1607.44 155.273 1607.71 154.523 1607.71 153.57 cv
1607.71 152.663 1607.44 151.94 1606.89 151.4 cv
1606.35 150.853 1605.61 150.58 1604.69 150.58 cv
1604.5 150.58 li
1603.74 150.58 1603.09 150.763 1602.53 151.13 cv
1601.99 151.497 1601.52 152.037 1601.13 152.75 cv
1601.24 153.71 1601.46 154.473 1601.8 155.04 cv
1602.15 155.607 1602.56 156.017 1603.03 156.27 cv
1603.51 156.517 1604 156.64 1604.5 156.64 cv
cp
1604.5 158.24 mo
1603.56 158.24 1602.68 158.01 1601.86 157.55 cv
1601.05 157.083 1600.39 156.35 1599.88 155.35 cv
1599.38 154.343 1599.13 153.033 1599.13 151.42 cv
1599.13 149.747 1599.37 148.343 1599.85 147.21 cv
1600.34 146.07 1601 145.21 1601.83 144.63 cv
1602.67 144.05 1603.61 143.76 1604.66 143.76 cv
1604.87 143.76 li
1605.75 143.76 1606.55 143.93 1607.28 144.27 cv
1608.02 144.61 1608.66 145.147 1609.2 145.88 cv
1607.86 146.97 li
1607.38 146.357 1606.89 145.937 1606.39 145.71 cv
1605.9 145.477 1605.42 145.36 1604.94 145.36 cv
1604.75 145.36 li
1603.71 145.36 1602.84 145.823 1602.15 146.75 cv
1601.47 147.677 1601.11 149.097 1601.07 151.01 cv
1601.47 150.357 1602 149.853 1602.66 149.5 cv
1603.33 149.147 1604.05 148.97 1604.83 148.97 cv
1605.04 148.97 li
1605.91 148.97 1606.69 149.16 1607.38 149.54 cv
1608.08 149.92 1608.63 150.453 1609.03 151.14 cv
1609.44 151.82 1609.64 152.61 1609.64 153.51 cv
1609.64 154.443 1609.43 155.267 1609.01 155.98 cv
1608.6 156.693 1608.02 157.25 1607.28 157.65 cv
1606.54 158.043 1605.69 158.24 1604.71 158.24 cv
1604.5 158.24 li
cp
1593.51 158 mo
1593.51 145.63 li
1590.43 148.62 li
1589.27 147.45 li
1592.92 144 li
1595.37 144 li
1595.37 158 li
1593.51 158 li
cp
1577.63 158 mo
1577.63 144 li
1587.45 144 li
1587.45 145.66 li
1579.54 145.66 li
1579.54 150.27 li
1586.13 150.27 li
1586.13 151.94 li
1579.54 151.94 li
1579.54 158 li
1577.63 158 li
cp
1569.14 151.74 mo
1564.69 151.74 li
1564.69 156.39 li
1569.2 156.39 li
1571.17 156.39 1572.15 155.613 1572.15 154.06 cv
1572.15 153.287 1571.93 152.707 1571.48 152.32 cv
1571.04 151.933 1570.26 151.74 1569.14 151.74 cv
cp
1568.54 145.61 mo
1564.69 145.61 li
1564.69 150.14 li
1568.65 150.14 li
1570.49 150.14 1571.4 149.383 1571.4 147.87 cv
1571.4 147.103 1571.17 146.537 1570.7 146.17 cv
1570.24 145.797 1569.52 145.61 1568.54 145.61 cv
cp
1562.8 158 mo
1562.8 144 li
1568.65 144 li
1570.19 144 1571.35 144.317 1572.13 144.95 cv
1572.92 145.577 1573.31 146.453 1573.31 147.58 cv
1573.31 148.307 1573.14 148.937 1572.79 149.47 cv
1572.45 149.997 1571.86 150.387 1571.02 150.64 cv
1572.1 150.867 1572.88 151.293 1573.36 151.92 cv
1573.85 152.54 1574.09 153.297 1574.09 154.19 cv
1574.09 155.397 1573.67 156.333 1572.83 157 cv
1572 157.667 1570.8 158 1569.22 158 cv
1562.8 158 li
cp
1 1 1 rgb
f
1494 68 mo
1494 59.7157 1500.72 53 1509 53 cv
1517 53 li
1517 75 li
1494 75 li
1494 68 li
cp
.203922 .282353 .329412 rgb
f
903 640 mo
902 640 li
902 40 li
903 40 li
903 640 li
.498039 .498039 .498039 rgb
f
1027.58 499 mo
1024.69 499 li
1025.43 497.861 1026.24 496.695 1027.12 495.5 cv
1028 494.305 1028.93 493.115 1029.9 491.93 cv
1028.95 490.745 1028.04 489.569 1027.19 488.402 cv
1026.34 487.226 1025.56 486.092 1024.86 485 cv
1027.86 485 li
1028.9 486.708 1030.14 488.5 1031.58 490.376 cv
1032.26 489.471 1032.92 488.556 1033.56 487.632 cv
1034.19 486.699 1034.75 485.821 1035.25 485 cv
1038.13 485 li
1037.42 486.101 1036.64 487.231 1035.8 488.388 cv
1034.95 489.536 1034.05 490.693 1033.09 491.86 cv
1034.06 493.083 1034.99 494.301 1035.88 495.514 cv
1036.77 496.718 1037.57 497.88 1038.3 499 cv
1035.31 499 li
1034.77 498.141 1034.17 497.231 1033.49 496.27 cv
1032.81 495.299 1032.12 494.352 1031.41 493.428 cv
1029.93 495.351 1028.65 497.208 1027.58 499 cv
cp
0 0 0 rgb
f
1241.58 493 mo
1238.69 493 li
1239.43 491.861 1240.24 490.695 1241.12 489.5 cv
1242 488.305 1242.93 487.115 1243.9 485.93 cv
1242.95 484.745 1242.04 483.569 1241.19 482.402 cv
1240.34 481.226 1239.56 480.092 1238.86 479 cv
1241.86 479 li
1242.9 480.708 1244.14 482.5 1245.58 484.376 cv
1246.26 483.471 1246.92 482.556 1247.56 481.632 cv
1248.19 480.699 1248.75 479.821 1249.25 479 cv
1252.13 479 li
1251.42 480.101 1250.64 481.231 1249.8 482.388 cv
1248.95 483.536 1248.05 484.693 1247.09 485.86 cv
1248.06 487.083 1248.99 488.301 1249.88 489.514 cv
1250.77 490.718 1251.57 491.88 1252.3 493 cv
1249.31 493 li
1248.77 492.141 1248.17 491.231 1247.49 490.27 cv
1246.81 489.299 1246.12 488.352 1245.41 487.428 cv
1243.93 489.351 1242.65 491.208 1241.58 493 cv
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 28.5.0%%For: (Aran Mun) ()%%Title: (llama3-figure-25.eps)%%CreationDate: 7/17/24 13:05%%Canvassize: 16383%AI9_DataStream%Gb"-6pNl*c'/t5TJ:!+:*>^aCU%]=+65lPb&o)78Ha!+_\b789AfDO`f)+k'C_k?\"^"<jd:d,KR\++E`"qZaIlngm(B4O+E:>'!%PjcnQiu3On1To0-;Luc\\";"=<J=TJBU4W2V@/+fhSjtek'+ei&3T44[HQjsnb6=*g?D<gL1o/e:5u/nC;J+TX#koRip]TmCrb,e%Btq$HF_N0.^*hmk<1Bqo_1K6`[I??Wg=OWq^c+,s[/u#4"sGSKFGs#8L0"5tr)TYL@s5h5<o_0s_m6D1=Y+2+B#9G;"<Z4ZflGeL%d9Mb2?GFs18%A`[0CSkJ,j5P9arS:6'/+W$OJEi0U\pSo#7f.2NTn31GEqs#:\ANR[:)Ri=k1O,62q5")ojme2c$I>.Es^3itW]c%$bm$bITp(Lkp\$qs*\Y9)7$jq'8O>l!qd$ZUfUqP(Xk6P!pJ.:"i0Rnk8+R4NS$'a?IJHAU<1gJ+=PTN[i\R=ie6KT^cd61d^uJC%!$CTt,S#;_28a`J/\C:r@#-:?d)sRW31^?q!<Q4B+?%-*B#aeeB_oe3s5jjD#q)A]rZd4!M$M*%l8Jb3T?g/Tr.LP-q.@MF^s(>d%So6Uj,Vrcf8K."Jej*<"o6u'AK-SQk:GEu$F!,n[`GkEbs.4Q=I_K-+fYW&SQPQ7dGRj&hPdi+?G%J5hO4)6]^!+b,$]R1#?ZbPE%-J_lX(a'q!]5mWbI'DCo3U+;Z1S#Sc!.<XiEH]>pMdgh%Et!K+GmJl@IGFe)rp'\M!;#pRo?Fbdq-Wc9Z/eos.ApKZmFSGOR#]kQ%^+TCDPn(,=pSN'"(V?D=C?r]eA+!gMRN:57(Q7OO>/?ssS_L?YDdiHk7iRrV]M%sRoR:b?5,_O]iS'ihkMXTUMVr=P0u6,ICjpF,%aoBPmp:l`)#<_q!V2]_43ZSa!c>kc08Mqa_I,?"FfdXfA<:LTWd.jg#AA.$G*/7&!!:LN*49-6?6W'.e9<h1Xn'7pl.ZCtj;JT[5%VY%OImVC^-4E.A%kh^^]J"XMiBAR&bh(N_0mJnbVW"^#C="d0'6J;Y(GonH'g3UE+&)sm^/YT4g<uZ:J1oEN]-#<Ab4`+Sspu]WU%:p<U2?#7f5S7Xh\0sGo=4*+mqn'$;R)K*<qBTBh/[[XpfoegZVHO[\HcT$b[\/Y0mQP]DTIQRU:;*9TRnKa\MJGgfcJc[Sai?`l)%+*\&g,"BMe.m]t%n8ja8.FP=A4f"G:OT@3E?843$-HQsU;^=e/DTY=l.3IZL!`Y,9;[FpFV;/SME)UY`gZ/"=I;Ze]lAiF8mY![d%:'#*#NJI)74W][9is2cd-g"!FP$Zp:GY'RMFaLf.T@`N@Gba,_2ssCbPMVN7FMLEA8DlS@I3,$4kO\Lt!FO=mo>Q+aNA'Nhq/JXX%-c(]B?50KolN_#!IX`'E@fEl%iD9;KrY48lE*U2:$Fg0ZnF?d2!Ik*\-W0Aj"lb)d-BJKY\Q:8<7fch%c_D2!J\FMQa\b<.eAo71%rIO1p?]9?N_(3@8P2MU_VII%^#5B5a[P*ej;;B@>]fb$ck]+he^&6Y9Y^]+90CGGZ(?]"\r@>F.V;Ou[5)97SL5e/XJT,Z3YnMuX%<[8;C-oPPN(CZ?i1h%@u2NiFO+JF1!`P^".8;rMr"bbNcL`;/k:.V*G1"!MQ,>!H,ZBZ+H-p(;rJKYJA_@d),+>BB$-SdcWnSH-5%_o^.mEji9k8WQtsT_.U4#J>3]6uW47&KreA+cRTC$ZIl.OeRIJD'Xtt8^^A"2U:_[StJIPRG*Nt9#Jd#6)lh`-'g-sF@#^0lt%^d%N<rr1:>j'o`8Pj!..$R.aV+c-NmR+rJIi(g'SF2-:C%,4V^j"q!A"M,+F&nL+U&""hupkJ+UACG+@%[6$%f0*m"BpC%T.-'`Aq@g%'F2l`V>*F[OlQfO'T%HgfndU:`V9R&&`9RU]qXJBKp5t]6t7Sa#6?it!(@ft[.#AR0/Gpl\C/.l@>+jQ7;cJ^p>t-M4"/GWOk/l1%HDfQ:Wf>JC>Fbs%)="Pf2M33d&R[$$)aft=:s#i)K)uG"("tSpW_cO*S6:L(R0%t3!Km!T=c<A!9_i)k_ZOF%!$j-&A;gSQjmr^6%5a%9qH70mf4s20A5SDF=JmnD*EK#H_S-&PR![bbh1eJ2Aq`#WEj)-!o4s3Nr?ju&b6p-mQ'1@FE\2@Z3G_*.-!!Np,`"Rtq16DVf%Sk&q2PJH$qU6&!DP,Ui!%Lbf@8>&3/"*;B_-68?q;a^sgVNT&3+rLVt,mpHt%q^P4r7DH.+[K+Q+pFu@JEgX;R6\Wm!P6bg>'9u\%83dG%:W8NJX>h=U$HViA@_G$X]AjSJSquFB<$ahCih/qAcnRcKSelLs%D#/`%c\I85Ehc7EPR2Ti.N0X\ee$B2jb@+Qmaq]3(Yf\%ia>MM!T3g*HX=KT2rGqfAg.^sAeN>831-aD0PgV*^hka_\JoLZ"S3T,V8-nCJC01(8JD02gBVhP#A=>LBF2P2"0I[g,8UUF(BpSt%#@m!%,O,Kn8qPI024bN/5m]7#0ehel0_@OO!$36e'[U';#7!:@$%sN51g1Tl"@(7O?6D.D+?Un\+e2.*-("\T0F$ZcJF[K+Nq<B]%Es%OLJ`u''$4(&ALggdKA,ln4&*R.,&5roA.m`/_$>AE%&E+H;jT#j+*tW9"&9/&53^J;\"9oL_!5NG**<8aJjR@bX!h'>BLB-r5%-42\/\;A's'Z?a(^,*-+$s6Nh:7jW+,Cq6)_ZKom%YMK%+5eCeLEO51K(O-Ai9gU?6\=bu_@=3ci.TkF,<`j/qFQ`l)o<rjLcb'r%#JUAC^_UZ'6i.D&&7[RW06g53SfV(%HObKD9C,aO]2e[kbBkkqbrpV^&?B/:Ranq=o>TU.m_`=,@uehNo/k^1B3uhLR^:kmKB:BY%!mCL']>bTI@R7W#Y$LrK24hZ5./7e0e/?U$2?c"r>.>'Q[RKO$im-'oZfCJ<X73WRg8`VkS5;SS_iB*AT/2B3NW+9fHS@$-gE2"c%'B:.h1?gL-mXh+tMcH&1/XS`XLCZ>_[N*rg]\mue^VJdi^mf93e_acImtu=-+8B+`I/Qt)#6(G0lD=f1Tf^MiR9,FQe/Q!ZR_9)C%mT_FM0%%$#@btIQ="'X!f5g[(M<KKV3oS\Jgk9ejGZb7BgJ@XX"9nFa)^g"634$7_QNTjXG/4#"I9V0\:7so[&(#QscgAONE)m&%%klrUDbX-LR-gtA&RM3\r&<>).1,q=fGHo+rH=q-"FRh)2?LIP"#E9*-?Ai#mAI!AZ(2R%sq].ATXrdFaW)'9LdVo/PI3^cuHJLc!%>fhKZ*k*`D4lCc>W<I:nhi.S\M,.$eRhiYN_>g&AoE&ZeE-jS]cf:k;<;-DpM$0t!&I@<$0=fVa#B`N:?No^[9)&p376_*+]muRp%HsX:C\>dH:>.dZ`P&t143il&*0n8*1i_;#]SAUg3r%Dg$l0=W0f6hGYgm6#?/U2=HDeeg>(;\J`;gm%B:5eO\l_YG9C@UF+hR)3j%;%(*ukPpW3Xm!MOO`+FmjrE7-i_;"VVm19.)T@W8>lX&c(2msXjrE6bi."Q2-7\ONL<*>^q;S7TDd)Y-"`IT65H"bW`66IFs$\S6%rgO\9Bu-8S]P54^TGB*>Ha\ZqmCN`#9afgbi%7cM;i<TB357!<flV4q/@E'u5iGEhhOMKQ(Aoh#_.Gf8p3.FO7J)m=F45_"/U5`r%s$\O7m.PUcdm9gr\S[\g[,=XdhR)3j;@>Cr[-KBKQV$ph>4ABmDd)Y-"oj3YYj;1GZaEfVs,t'0_4)4QBu-8Sr"!PY?N4rDm.$+5%K_qVMDd)Y=Bm`j;2mkW[UO02Yj^54=>lU*_F&RuUkO>>Ps,1'":p5,c<O1@NhOMKQ(;)Y_2mmm/Mbl"N"s-Qf19EbgDeeg>(2qLW%9agq*[GZ#8Ya(U:e2t8'<St1AbrNG9`LC$6:M1DOgA5SSipkd3nkC^meDa1ShUE`KMrWAQc([:#orpB_GZ0O02=jNMrWfjh]^VC]%O)9TjY8dK%V?LmAn>6BhMcu5<*jYFV8,T[KP&"r=n>6A->4=bU"b1*]rMRU.0RGn5s/#s<J\mm[]W"?hPjQp'>N2jGYCCHEau?_Q%Et3+ln@tn*s!m`2s1!eJ2=d&YIFEd,kO>>aDe]kHrB2eB^]3i6PO%1%/`,":brNFN_>ff:Hir8Lf$i.S:]&\^ZfQ;4rA])YZCKiZ%SA5/.Er+Pl*tV2qLBi@S%R;32"c.\uU'SUT+@n`k%IO^V5:$#q,bUe4$h"9DmK)A4-U$>BBL^CGR+P#N"\eD#YA]//2UG4Eqb^tE%;:!*t4Reh`BeceFT_*ImF>u0ca6;K,?Kk/JeV`L8=Qs/&:Zf,9BS0SF*B4<H(64##^GY$>23jc1'&+)3UZk#iT6s@I\`kO:ACo?5%W/a*28%daeW3Sdb+TgO`Wr8B/(K4G\s0MYB<$_<<VXc=@M+)>GUZ\[GB@YBHg907E+CssTDn:JF?s[E\,;X"i\D*@OdAus2Y0`RI%f:=(5='7*+9/lq\D.9ET+DH%PBa8Tr%VB9j3aU\9(/Ub*\RPUWM`Ij9M^:`s2"MN3\+kknQEVUG+5f8UpqL2t/5Q>,^ZaNh_;'/p%e'>TrDgir!<p7iAB*3A[VW`':X?&UX6s5g^Z$H2tk(aXeX@d[rq>tm&okM$Dh,V"O`kOOM\Z=0F@`hF7/V+tZDi-A5;Yc%BX[r3,%lP]-le-(d,\@:Z('``PEPTGJ,^@rA`YLOZC*h,dl4,7H=I:WHS#JRf+=(m=od[Xg4B#admPm0*r&#nf&_)+7F0foGrETK.0pqT54%kmh\4JAq-8q2#*F<bm7-XJ@=u^NG,Xghro;.UWPHfOD6lb`41Sp):W-qI7RI@4+=G`B!fMSrQmeJ:kA+Q%-cXme!,Of2J+e1Li*b%Zh$BZ:MS+X],h$o_WfaB>MSDVo2C<DFX5#Fd>%KW4e3r"!FhbN>qlL??lA/+mB?gXqdK4(8.pc44o`G7pq=CiLO`Pu'-aSH(J<)+%.@5k<Tb]IF3g>tq#f971WP&erc00Cbr`=lWNITEtMNQObDl=03oKTCgA:G#p'j'jq&kO[d=KeU^3IS@<^H+"3jd#0496&RON]Sdq%N@_Q7O=3fXoliH3%($o9oj&BF8RMrcKg!5jp@#U8\-&=#GL9jq^ckGCi[4,K$r,%[bBBfL/\ah_0jrJnm'=OUoA2,sh7.sTmeQ/@%GUSW#Pm"9_?FKu[bK^`BT,l8/dgf1,bLRqUH/.0FTElcW">F3,c<5pnLnoT-/p<\/fAljNm+e$[n':JT48nP?%RK+BU?g?=DhX4`%`uh_2I*nF6@0VZpm-M;5dhoZW3+DcJWcdmn^eFMOT6$bmJ7[N(`*+tQN\cT)D"5jC\A&r!$i=mJZ##/L'6MDQdc^9PC%g1c*8DUM%c`L/'bnJmG%j5#\]^5:aP?4$&lAfGO9W@llj_biYTdq[4hKU;4r[X5g2sPt!6\U*s#*JJic7FM$/`m,[b8,ipUW+*K,u+pS_!fs%%?:m)p([IXOQDYC>82*"Es%\k<Q:p1\I#BBK)'S`9c;^GRCZ#WhH?lE'Y\LksPWmc&65'N%(!j\+rN_AsNp4<p]Lm]Ca2-)F/+P(<%l-[oSE2m*/@u@4lr/bop"_5R(/<Zk(ZE7fV%t^o?6b/r(Bk8Xi:61UBGp^pTC-A-U%"/dg!8%^ODGA&BYttLN5%bt]\t'o)<Ue=N%3X5g.nBZLNi(H<7X0\]bYbd`eGdZ-;Xsh202F^8/_2M]CqI";f3<@'D"T6eY`c*L6Q8n6GJVa?d2#K#;&3?'?NQ0F2Z]f0]2>"$o%n-te*GJ2_@K-:Q3r[Z'5i:7tE*WF(]MqfU%`UGhOA=AL![bY/o?uZdA.EnQTr8/"%Xq/Rj_*&)'L"8C0L[;d`F0H0u'QH66$:*L"%\8K/5C:rhl\Rc9@mpd*I(WXBH"V*c(LhcmX0BR:[pcmE?*VFn[$;SqOs5qFTa<Y3OftlSGa"/>p*V]P_@K*cse.uhs8&sNll+aN"%6B\rc`/In3EA9d[MYAi_Iu25gGMm^N7b\*G9%SGM\QaO\90,#kXe^YVqKik^;&_&.jnkBel0gtF8(aSDWkEEMgP4mXUsl0o&,]ec%NIUpbAeeFAs3%P0oh<PoM!'I1,_tZpZ8=_*At*a>$6QL-!`JqJNe^;@7DlfW\2Cs<QE+P_KcplB_"_`1Tf\afY@HHT7+'lLAD-0)%GeDjY0-)".6^\iUV0f7KgP=-\[)u=,r12:d4fpB;)^D*9,%h:,]FU9i_EK6bluLhU<U;Eod(O_VmN$;[WQX2&p#5+o&mMt9OjorJ%IiR5'mHnbikRZm[Vq7[`*d=OFE)Sa`n9[6mUYcs!]m-.l]0quE_0/4*)VKd7p3)M,J_AVgMg!t!7,D@^0Xgc>V7!AI`QQ.2NN>*6%8$o*fOE]+=?(1$Ma)JYb1[f8VfL<F;K"_'+Ns]jh$BWU4LtbL"gq5"j]4@a]E`8H7WOJ_Tl)d4]%TD!P^$%MfA;JNQ]%\lHL%6TD%c;)C&m^+dB-l6CW^M&@u@IoFuakgJfh="pDO%!5WIRbd7R1G@+gS<&:L,?*,)@uO6A\1M@1Qc^9DK\3Ggd1?P0mZ'-r)T-$fu2R7%dWBsn(cXIWUc_AgdVG.D/:'&GEB?-dfd:;r:U&h*jB1:[Y@\fB)'b4fWRAI/!sWKM`cMB.$l*:UQJCZU!(#jDjLa*73Hoa/^"G%B%M;f7TX@>epp!;'s=S<L["^"sB!0Ab_$/>^"rk;"(_0XrO3XVUIf_#m*c2KjEYNWrKo+N]=7oY[[=`ce")fiC!l7@iMRCM-rk4?Pa%Kj4M`I"<ROV!)3lAW"^r@HV$MH0S+'NZE7m^7Z4Z$PoI<Yc!8*;Rd/"%#S_N)M)G&\6+t^R4/1.brRA/6!/#Zi'<[U,>FLIR7rpD%)(.Jf[)4='FkdgI.$\6M00@R5Wi2<&WXqJZ9YoGMBD8455*Qls2'NO\+r"ANVATHKVj-:_6C,SqVEq]/TZo^h-U8-E`iIpu,jlp@%ZD@-W!DJd;/Seo(iOGRN/@.<H=WS:qbZE*hF9Y:&Y@^^FaUAr+-&Vb]Z0Ui'AX?;[E..hC@B-8^[eAmGHR)&SU"gui8@df']Mr\[%Ahe9s9`&WNBifpcV41a07;I,*VjXZa@s?U:ge.d_?3f_ZE9<34i*nC3ddgWGAUr%%O7LDQL7[4tQn+C5=?mQlhK8c_U#]JG0n%>/%R!+e@&Rr;c'`8#/N9r3p]jD+_kK<GZX9)I2RFQPn+(]_dR,O&H6J@<6Rd3X]jDq8J!,ZVs8D+YYA@Z!h.JFCPO6(&kr8&>>;Qef,%J]j7;EeOb-RGGB8#Xs%0Mr<e@>TP>&hcJOf`kOI8'bC,51n2:LKB@Q+_92bU&U$$cC)>IB[C,Tg<N([;>;#el[SI(C\DsQsA5r4+%T87&c^)X4i>7R4H9s5$pH3mKt!.h_,L;t*l/]A5G,7q*Dr1RJH\U):Pi9'Ml%$d!&gFbXmN^s>*",q$qY5@N;_#RQ%;,MVspW>i2%"gh(3j5F6S-?6D3.Ak7g.Y0=?kn8K)4L/J(i=LKmkR"ba$Obc43JK/2flIKgnr!ejgX0;(hJuhf\I;skE<uT#DrDd<3V\Ar.iX2!%aAEfo^9:B7pi&dGh#r/K+omJG,:]ohMfgm9^l]JkfB8@<Pst#\L;rdB<P!WuJG@c^9d,51EH1"O(!78jae`Ws@4;L(b:I[ZN9BJ-%k.;$("N1j\%Z&/\i+H?A(C'reh0@4RLnO,tAl5]%(L70DF:<mN.L_=(1Snm3oS28_:u&c+:a4V#FD9AZG1l,:A-tFo!U$ut]OQ8q%g,%%i)t/AOd98Z%om7<.<(-4!L1/2HTTY5@YuWhX-!]P*+I)..R"nd\:t-5Y:^P%,B,i_=1Y#%#**EHbWT*enJ%;s.V2XZUo(VV1%(hWS9@$oK?`@u@.X"jB4Kk1#Ri?)_:,9tE2Q2kjq%/a4gqEBX4nAar#rb28p=G0FjoGC*f\L5i'pp#?.-56,.q:3[Ni5ZE'0h1t+%O76Y);n2h\$c7rfmUOcH6nQ4oZPM,?+8&^L#N207!Ih+c$u(n]C'X40Y`Q;^2G?^WG\8\G?ROlD[dJ_h3C5k8B@XhM2\(FdRYoS<%&,b(1+!&J,n;eI$l$tu!:Q-99)=Aa$QN3]&l^8cbVrE>iLYprimrFZZeo>Ql5-^,/WPYEqMRa^lB`3]DUlmG_$$^=d89X[B\&?(H%0dQ=*lB>]qa%T*8i0\G@lECkgaAPG^TmmI0?VR9kqmUREB-LZ#DERRB*N`BuM)f%Jd4B+gNJGLRs)LI8#Hol7%\@h6](qN`<6kQq%kd6Gt[Pmk+pbhh-#J+WlItFjOj'>f)&<9Mr%A%+2#AS[W[)APNO+-B-j<W0Yen[-Hm6;M!8XI^3kqP8T5G,APGk-qQ/mbXDfXpl.%2@9*EOe:2a`Y519X^rVfY[1Z1qo6`RFLE$h;tm8-g$?oWRdoo8->6$f$Uj(=Z0/G>$`T;Ud]\#4J%I&<4D"u)(uLWHo3<tQZUa0J%nZ]dV(jr[aYVSSOO1s]@+;Ke;9A^CaIUI6oAoC()6qoD#AM`FY(UpTCq3Gmu7e5:LEs/)k'%q`bUbTfbOXV$7H44)Occ$Bm.+??P%[RoBZ:(Q_j%^]JC6u-RSA;_bU5rqUl%U12rl:1^^V`$8K]MjYhYo"5el"2JrF#*Y4docq]V?:Tm9\[m@@p%aD%:kc]A(Y:/"mONS%a3%licsi<hb7A1o#-=>RF5mU"ChKjF"+J[pbR6Z7g\^?)g*3V0k_G3=:pr)'VDWf*0qCI)_XsY+M]$nMl5Cbe*[(?W+J-TsO4-&3%P,p5hCHggtCerb%AoE,V0unY3)fp0C(<eWU5@F8fnq7UVO2`U(8rlj8L)9FumrOlJY5?.b7%;$jOWoJ_;XOr/Cg`l;W7M+rKKU0E%I98J!.q=XbLERG$'/hBWZmN$PS$%_sNJnoO<IQ,o`isj2ZK7nmb<+9PXO&]/Z-oDlJlRcd/G@SQNj2crkf+P99*8t4^U;_;_Oe\P%gCGOUb54iLLOD?\hm'Ara,Y;3eJd"g=mE7X5?tunMp;[!)"A"m$atMg7G4*KIX9=)fZHs$ZrjcCf'8R+U=L11)7AVS91*KQ5N5iO%C\Z?;`D/rs&]L0XT_3[;F'=(8ACcKeo65'(e@F1#R+@<V5-!2@WR&4]S,LE'[>"?K=^1;1h:h/dBs)<SRWWHT#PG`"VcmrLL:+GF%)/+:,b*(Iu"&pu'/O-VcME_JP=d^17S[QQ%F[l,c87rfaT660_2kqUrQ=&f0;Dt(qemW^q?_N$';Z2'p,tb_R/lTYd]#+("6!&>]%EpN#J%h;l<B//X7!_]Yu;s>tsH<?[$^<-;^`h8f&j!,R[N"5O7o&DuRZH%`HgLki.a$]Z@]a&>soRZc1O$9(@@et>$0^1Ame=ePL%SiuqMSUJjL4+h8G];o)^GCmCbrLfN"kpKj)>/+==SH^XPIaAo?`g9T>?sB,W%7I0O2gAD$S)M(l$l`[NTOp`USjnHDrkW'Bq4&$a%9=oL)Hql%RLApr"C\Vds<=I&:De?ra*OjEQks$&V`nAf(p1Zn6@"ih]7`J<3`aDJeRsAN6AMQ3qNV3V;lVkB1m,2B_ECbH5N:Xuo%e$sR'SkV]JfjSpJXr!;6q;F/aSjMnC=FT3eA]qKqWU_*Z1d-oE9@N'M<&>&s/XpHTaL4gD8`UKI5?%=X1HPhm(UH'Y%@SBQr@;qE%'m_SNJQ=VZk;B%1rOpZ9pN+N0GoFT6k#Et9[?tEFcf0i:.McBb&@O]MZ;+'h-c&t9c:QpaP)DP/^(si-1(Mo%/!cg,hd\MhIV`&_%nP*ZhIO'BDNu@]1R\BA\ouX`-=Bc10e(U@9hQ<"3a.%4ZBYW4OQJmUYoInq,:e'3I-,/l"X^k4$D9p0;`n&PC#2=@Ln$K4(<M.9=%2n*oa4.46Wm.ZOZRm"lj`qFG6e_+.K(!>D1U6>4QGOk+IcKc.!_[s7:HpL9P&M<rD47^k:_U8"g;i\'UkFuJGXH":di@F?'`SQJI%YH^037Rg%tMDO-H5<G?gHbHbLDe,BegjJD8k,<WnUK[&rr-b-V'jkT;?01"%EkOAOT.V7B*nO3LZ\t<td<hBukU-)"Vj"u=X,7C*%%MR05pPJJ!F3lOJaI3JT"$r/&0&iR:)%kO3?6gEs+%^R2pk"lG.S\@\1QIXZK?6T;(We+oO+4UZ(TT>dJn:O7r$gi'PU01r;dQrp%Mi)kq)H=Zlb>B>^I>%GL%/k)2EuERHgoaZ4k'ji7);Vih:$[85l;ql7V.\U8V.Vs"M07nd4SuLWF?FI11gFUMVrnoVSfbSpkI"K'%O'Y'@Q1:_\Y*uh+XgPjuWHme-$+,XTlatp;$X!6S@*d8nq%mBo9MTt`AmtA;I:uiBj_+UA-F<@-j"\%C2&n+Aa8*f#5Z`u-!Kt`0%!\n2+)0ec6mK6h'*mAj.]fg$L\"82fPSO?^lS0DrdA(8l>^o:X$mC%J\d5k,ku9'n0X7<tihI(M5Nb_6<<n#fa3?ZkI3eeT^9<KA%g&$g0h/`NOGl;r-4LX5[@;Fck;!O!c&+-5Xs00^mW3AFUB>P19mROdO[q<PFf-2(1n8c/u4us\Ra^_j!Hp!^]L!!mQAPYEDb>'2>%.]6R7W/i]&C1[P`l-C^"./*HkM,KnREAZ?e%AV7ek<\ape/?5!pQP&Ji+Y?4jd.q?qi%@oYpIl*Baeuoa\'OIA0DqrX]E"-TUTgG%oIoNZ_H/@pM-S`u9RJs`U5@u5Z'KJL_rG:ODm^i0moVD,[a&&*e+5Mf$FrWW</I2';Vgo$9k-K46e^SiJ#9Q<&niTi@H\HT5;in5%_#sLX-;e1uR?pc+S=*NX_lUPC%qhXQbBLDber+1U")0)p=d,[eR+Br2[JK)32epe"]Xds[jr[noRsD57%KLo;?5:\5VH%kSP;/&j%:btPBKi.I/]4`@lAhcE.`JaE/Qn3^,6<M@l)idNfDt:%&m*V(jZhsJbfi_"&b)&oa/AGoNp@;""@]GNbNinOnHs]t/X3]<0p+]Z6%q,7[g;`S5DBFIZ=S(COq]./'uOo"cORsrt!F]N8<C+e5mW23eMDXFcH=k5=p]<1M)5Mk!B6$'S#>Re7RCTj^Q`8:($`bR0se6qR8%8^m;,5W"CoE3VDW-GQ0)Z'nm,G`E7=NTXBX62Sk7_T<U4k2Z?8CbpiQL6H)MAc'pQ>)A;0\+T8\qHpMQGjlUk'cp`Jp>FqQQF%@_%L]M:>b>Z=)\,L#!r,-fD@IJ3Rq"=U!]*s0s+&8TNn.@,R]-!$1>2`sgTDCb-*O"n;N4f]ba$+:6m;+VBmAu`F[<jPOgR#mM?%9iV%`8p7UD:Rt9ZebB$A#/qUH&Yd<STVC3e.#D.Q#<qcXE5=q\(^G?<_\RI=(@)rhBJTZoY'tWGQ4Xt1]:JJbsK$`\;.4L]Z0/L4B*=t%R@i?/r;<iA9El)D8<Hkp=KWOr_[3rj7b#mL1oe&tc-^XM0Osjh,rC'c"Q.5j;?;$7hqgsYqd"QXc+]O^m)()VSG">T7+=/(^R(MU%IIbKED64+jVL=kdB9E)FD"^GtEc[F)@%&H;`;@41_B0P:T6%E]AZ4e2W#NHXP'C-=XOPs2bCpDKBad6*YH[3Q3SVq:)!.Q]M"@C`%[&q&!CG?5!s)3-(THOh978u2B&9eEjeAZ:?&oKWm#]`nO-3Y#/EF-KO5P2<L1B[J%l>m(YSF^471.=Zj^GFoaBX(hC9D.+5I[>_@%*u<jmHK&UX?=E'SR$Cq-^[.nl%`Pt7=Us@mJl`r3=N^5-B,@*P70!f^Ef4E8W<G*DLm\>)$L?4d:G['#L`ANJcFS+Io@mc\lh#"=%8@RRXC>N/75kQ>l$B&4\3kA0+%X)j)UI:Keffd2>@UQ-HF*J,Sb3k\;"i'5M,8pNcKfrd,gLISU_HjUE_tH&n;=GUj^4-JfqZfpo%GMIf^oiPS?&q`GqP0m8O3f*mo$KJXaof<jLk@<Spq,o#ud2Z8BlfJWF,'m!H5oHebUoQPRnrZQ26]2II:W7"@p/T-h?b&Zl87LS#%Z(=YIX.Fc250)l%`5N5TK--@f+RtnF*/,F?^GBJi)/F5r%S.l&^2+h,)YM?pf?6R[0ea"BQ?]j0Z\1@:NZ)LOIFg3%_T-,?\^-!J%D/g1@bFUH3Gk)-lBm07lpW&'B/J7KY-ro"!bY\al0r$hRrQL-:^Ln8Y/R3AM_NQrq,nGnu_7BjgnFg>G)IGNXpa:S0;[ida=`Pf!%(:QCl:Bm5F)M;Ob[_sA]H@$EIG;:"HH[/meSfAo4MN1?FM@=9'Z9:"K`/pNjUVlo;+l]5/g.hPl?;mFh1uel\&s'KK>O8CYepR;7%,B+<44U3qB\Jb19c=VF%H:O>;[ucupAU9+P.V&0qmrcqZ47#d?JPY$@5.JI(@eN2I%?%kcN_S=abX(D&UOg<I<[UlagiFYE=]C,<%+ZCsh/UBWVi%69>8-<4nr)ms6mZVOSr*YF8]\K!Y8355"P)74^gf=:"br(6s,kb(Z/WR:OR<')"U16jMM!'ujF,hX9a7<:Kca;pr%_`VDofN3&uN+T`9EmQcf>LT0D0`m`mX@6AE4;IcB-Ph9:RNoCP:u>rqEsr+uO^o%_k-hc%p<&4P#![RnR)^5u38QU-`O@[Og#fs8%L*)]c2s[nRiHI"!cL4VJ>S<6>+J\s#&5U9(-5U"9Jhd2/;Cg\i^8F8h9=\`D+"Be&\[@CZ\o4Prq=\)A7R?SKYh-YLkQ^JWHI69S%(r6"M$RQ<%`JhB7!dD1jAhqp]ZFc9hV\Ms_2c!.VF%5rs'm!t2@@?#UVLW/%1$ZhCT4)8LhW:=1``1s7VfRfUYBo[ec:J=l&>Q"3%.nJ0q?uSZ`Q_W^u^T#a3]]\3obOO&CRDh?`$1?F)VsF'NO-.Mkleq"0Eu6FS$=kJg"*u,/f="0nmf5\r(AIE<AF>gg8anGt"i"q$%p`4BZ>.2eb_6NQeV"Ig9Cc1!X?XR+aM>DP&=<l/CNm,rViU@S@hr&3`bnDaji:+Wn\fj&'Y0=DR@*QZ;?8440kD,s[o"K&"4futi%SgM4C>@s7dFoaD33Z'sD]NI4;*0%\Ee\IC/=UqaT.d@SG9msTqNTIMI3^arFRL1=X>EUH_i8'6Yeb_^dJBSk;hXFMD^*5E=T[@\m%ISPSH;N69J8UYu^%aBkL2,n><W*H*74LM->V&N-=pH*(6J0#Bu2/Q]eA/dDf$LXWnUGSQkd_/71W\La39RGptYqC%c6f1esBH`Oa%gPpK"EV)(lqUduK3Qr\1]^q9ZKd-nCN+OGdd;tr#l$VTa'?Tu?8jMr_'JK+M?;;RB<S1"QT>pB;m)^W<(XU<ZO."P@:P<)'E.Z`&%\=D*PrIn:u0A50U>ORgFDL"ie1^;VC7nI4(ZP`k%mcL')9=mlAhlM&S5$8o;$hYA:\IG_WIb)p\,`dEhCc9UC]"<7QZ]IdB@T)"c%*35'^1&2=2ZfA-'GK\]H2^@)5>1$RSg5`m8LD+nGrsVGBW8Q%Qqe^+>EeKkjhp7>@pR`\$N&NsC=BUe+h-=g2+aH=dK;,8<1YlB[%NDKY*ed%qr<l-TVBNJp,o-42#G`9ad-t[nY1ZK;l+ij-%V!U2%BB"^7noZ_eS/EWK3kTb7C9N-0G5'2L8SD\I$eE2KH6FWaiHGh3%na^F[l0c/"s6+j`Uq9j2NkX1id`-G(a<H9"NU\9-.+ooepXAJXOmh`$k=]$Z]3n[V0$P`Bn>C)X(\FJJ.+d8VracO.@>F2>"IC>K%jt4`q3K&8Q175<)YUmnL]BSP#5CIJ\)PX/-d3iB([p/j`V(f<=Ip2gXL1Hok$piood?]4+!.2Ct)>NiO<r1;+CNqqQO0itaD)1QY%J"Djoj3dV![Ek)RZSDP^]#>#3q7t[1fg[Efko*,N$<MTup6GFZ<Q\RQa,N.;g^hB69tJ`,2^-qSa"uI""e`nrqteE^Zq!!A7Y>PR%UH`il2YsC+'r2c0,h\g`QLKu2Nko#`dq*llBf+B3c:qV;Z;IL[cuG&^Psq%F#lC(<eoUL6f-p=E-kuH9hID)VhkPn4LOP;P)3us1%,*I*bfj@?TF[+`*;3E@$I1_Q\*;pbmi(Z:pFrTm)(W.jUqMe66;FCH3.q(.s^3r7(F>TooAR3CJ\Xp2tY5O*NFkaBp)*9Hff4#^s%mXQHAO`n2$Yn'koU8sFuT)\&k'Fr.?E`-d$CC7P,]ltXnnGJ]pP5F3D>'o)khH3SJX`@MdKpS,&jaKM/Ol+&3&rm>>6*MK6JlW4B%d>IE)R"3@r,G(A],,>ssV^Q%(R;s#YmT=QF?=SYZM"i42OK0A#[*'2i5CZr[!Y63e6Tm.Ii\=O&3ME3h[D\iB<qe[0iu5R'=250t%'MlETVtsdYWD.=rKHUVb">r6lpn;I(;aHlU"8c18aV^d!9b.uZL6&oXX284FlR3FUHKVdDg#"i0elD@g9t9NJAIV^P0AAJ)EMGe:%J9;_Q(f5[VGRCnqAJt`q&7<uY+k(,jrQlt%&f:1?Rp&_\NM^j%%G=3FfrfD+CG\1;1^^YP4_E[IeQpYq)-l]n]LMcfUQ3B$PL"K@%09i,,cNm:Ul!_<qRtV:MODe*fl8W>oj]6+oNGe-t_-KZ\8bJ?QE[`i6epHKtKo7:L7A`JIA13Ls*P"Y?$LBA+Ro5764P42MOV3\S%*^7(%h`8,;b51$_.S%HtJY+JpP4O28C:"-\X5laRCneiY/N5=n#:JqJrDGJ/PYX9#IYj8c7m%.s6]&_(@=-GJqm2-ID7/IKN`P9-%AAD6,`>2[^V%"0t>ln3[:%W!5Ctlrt61^'Cph5>,@r:$ZYjq!H_:^1Q&6XTc[Y8H.IL*2WNSumY_/T/_?CLcaX_5f,F-sJ10H`1B%ZRI(pZ5g\8NPRKH'AO\cSibN:$@b+8&(#s<"OYVd14'4gI$2B=_tK/)\.FcJoZ&jXV-$lp3,/_G""8KbkDaENKX"^@jhQ9,\"8`a%e%%]6Qc-^,9(e7nL[kW1rb8gs<#\,e(1I.!r-[X2f3SE"hY:-M.PjM*+cd^?J()YpHu^!*Kiq$5Z'/f'@FqG6bIA[X+)LdqaV%e<%NF[a5QZ-9HpGO8U4)\A!jSU.gHpcEm]G7&@q.s#+ni^e(Wh-"gp$@#YX*Q\/^>mUSfbjempEU,H%pa/nKaqIX:X(/H(!K9)4mfW`%kk:a!cTAHAmllrra#]NQ<nfC9EoZR\FNpMmUhcV<Y&fZ?VkP*1^FVil%a"6c\Y!<i?L@Tpq30)C\"bUMgQV(4a-dt-8MZO$erh]N%qe7I?F!LT]PoV1gr+Lr>ZJS;9JMBbt3bI4UbsTmdlZhnh?BUXclnskdWA<.0#?Kh)D;$>,GH''SSM[HSEda>PdUVM[l[j<JcW1Eo%96^cJk\/^Sjl,:Rr@3<1Il*?f7p;!]=TkX(%G)1th!.nfmWZ$,;H@12UP8*ofF(Up'$a;.bf[hbUt*+3AC].)'@tf[MX0kO^7=7?%nd81j.qQ'*0i2@F(gfQ+kP>h[M)Y1X#>Hej/1]WIb*,5/j_\R>:Ci%MQThp$a!?qNq`28+^MRdlFp-?#3jeF0H>F3jEQM)@-Qp.f%OK*']_jju"MSg[=$MHo^1=pY0WA232nEY(Q\0f8;CN>BFUm##h]T9t_Nu+t:%,NpcP*^F6)d6`)rO'Xq\s/<-A#i*._7eE9*GjtC%3QqbGr$A[ior()pU!*[#-+U@FjNY]YTQ8)/]_E'/k27\>iMJ^(#3')XdP1lQBhQ`]rd9hSKhi!.&l1p:IO2]S7<7[b7Yo-pKS2nk%Q>/NZRAo22+l%V'qCk5LPl[)YWuSndXUK(EY&2XiFr=rT"9Z?O6])YTp4FBg:2)sGW:?EA/?L4G(b,,$2aKX[+0gfl+pi"5<MD*H%!#oeN"FYu&,A"1Z>FCJKXnUrS7m/cr79#6U-!?i(,8H+fQ<G/%50I*6k2JEgKb$jA02e5>fGEe+O3F%48H7tnYi7S(8t&oNlS+6d%i97W?LfpH$:?5O)"K1mCja&l^8ulk&kgD"0N1S-\8<dQiPWid3.kV`;6F%P7R1jr:dLd+FOR+MGo\V+6gd_d:J?HH-Vh[5+H$pY]%@^CH.g]tp:qQQdV3lKdZ32&]j+%g\o/J\#BZsl$J"678.%q*R'BRWs?onc\"?pua0N^CC50?FH1Y_tApS8%a;f<Hj>bR7]jaTf9?%2(JJQe76Cn]9%6[4O7'Nd"<0BGRQd(A0jQP36;_`Xp$JN0?_#T#0O/R;9g7&#"$fi^2JiFNQrX!4k1&0,Dq'_M2g@0$6]+s*N\(7%L\E@>GS(ViBBZdNinJQ98aZk4=Z&8dl-&KW-+I(]$W[#9K&7`s469TMF*]obgSOc\EA1((H-NgTNhUDW_TIH9$ku39-$:uElsY%1%??rLj[O;i4Z>qK;NZ+Y6dhpU"&M>?TUB\)GnI4KWOk?Wme=n[jf<_f2VqXA.h<-7$mLYt#7"o&h\BSgOr(VaN"Q)8*B+AY^%9CFU%m;4`)RHlJ-R8qK?*q/X@3"Z]IK#C9qqe6^I0qn1KNQ8:n"5dCWd=gPs:<q\746V[!PR?8ns4!hO=BT'lWmQ"`7:mtP/$!'EC:"28%0,JQ=_GO7]BW,toeoSPpgTOsl4]g!DYa-g+]lNcO24@q=jls"-F79?X<_PVdMEs#6etF5G`_.EhA9WE(Cr[%a9Cl=+Yj'^O@Ra<5%d`S.!*)9aa12G7e/>u6k]2VqT*ppYXb"c.t8l"O0q`A`LZe9agI6'<JP+%VMOdE?8l)q]n/TC?c;30F_>(]r';<eb)9.njki$u?B%X;^g$?jdKk%"*C:ruUG[fB"Ns3)CkRap(OU$b<nX)/H1B:P"m-&a+1*\sLDG?CmF!+fZ7ZUNSpo9/-3DnF&Xp'"7:O.gG<:o'`Di%fuK:Fopfb+jTeI>SpZtaKZ#qtCuGb7$O,D^g"*CP.+gk5bfoJCo+Nhmqu6^"FVu(.poHSO8GV)N3,#\"lqnsR\tH'c%Rouab\g81%6p?>XR;8q?0bej+GWdH$a__5rSh'3"_PuH-B1&5W:+%5Wh=9#<KoJ$Vaj54>R4>W(la"P]^+Oc?'d$PMMW:/'V83K&;N*$p`s#nK%[_rJ\&rF6t\Z_/\#:d>n,=iMEL6WAH_RU6k+ib(dBuLpjbVk)m,[I^D]FoQ,1B%VS:68g@#UD`fUg8-K,YGSEH<0%kG#CG>^j>lH%MK!.30o97DgI'htVi2=]MbM$H&j.FP6M0,4#$5qpT:r"5mLNWtLf3<S)1<\\hM)?oS`)?B*:p*%k1h"JPkr<<\Nk1ZdLg`]g77g<%r]&k\.<r?u*<(4!*\:e8Z#0A5J6q79UOrG:+hYt"-%c54d+l=c.#ZSbemD/q`h)'9B]Yg*54LLh!&OpV)L7N6lFk=u$4dOgKVL2P%#7a?`fgaqo+$I/(qm&IBNIgbh@PqJ!77]Rt6es[N7^%MqoWrsA`AkPs&<eMU(*5^c%hHTW!PB],W)on#cH&dA9VT.q#S1J%nr9O6%?VT3C9siS4P/AR%@nrji$RXOr)7C-sU`/&u'!]N5UFmB`3j<CkHab"$9Dl1^6Rhc?T$@'kn1l<'\t@=093JYlcY+hQJg710_G#pk%P086cQ]t[s_c%%r($'a8o<BD9Q;Gc6"A0L;5ZBJ7KX((=d8nBi.Er/e#p"#NHuE.0k)Ve&%^E`4#3"<VBc"1Cjcdda5(ud[8VVaP%X$C&=&qh@<k0q_)E]I4Q615ig:HIYGp.mH3rJ^_A-XLf,TJ7IMUlmO33IrSii1BLe&LO;UNciTZ;Jf:)3j!V)1sgFBZ4K^Q^62Ku%)T,-.KRhDr_PRjlSp1minQ4tD6\i*WW<-kJ7ar?8q;pS@Q@6lC"C;61N9pt.+;Dk#V=XL_)2!_XP7DJe,Zu96jlArMYnX_[gaP)@%O4m>gML+K^AG<5#-r*`l=I2@kV@'eYA9;i^>J+-e!O)p4pX*B51@YNFFCjH=MR2,5%h1uSgD8>1898[8>h$23)7NQF!34u*AO]`F%$9.LYY6Ka87R)/Y,[t?lf(QD:`.7b/"UAd=0o7-GCigTsr[5K,MY-iN!)?B4^-oC]3e3D+#(#?aiGde-;IsTY$rd?4XA#!\HnM"*%;jC2=0B8F'B)bFB],G:7X%]26:97-B6B8ad*!ZoC`en?W;910"/;MnW6)>SK],^<SKINs&fa>/"78Urk)>^*Q^W91PrqTIAc5A'M%YLFU8_I@GN6!`j!k4F6T<.I#].\nO*D66@1?4S84m6,$jUpZCUkU=('3.S*7%$R8kX"]GcpJoliJ^dV1L>^;7/NZq;+*:&C9V=b.%=Y>JX'/$I&r5dgDQ4S^%M-,4kX!%$Z;*]F5AF@csPeo#C']+sBSZR!8o#J%.E.38=!lBorc6CSZiC9qO`j-tHGL4]^><R/,#bXXt%1o`N)G,1"6=!`]].7'IGl?$&O8J7C<`:"rAl*Q8*BU'j%a>f5*1:,c(&K.j4jXuV8!'aR=>/s3J(pmiVV%5VHW"Bo4SDN&_&K+Dr%=`h[>)%i8V6:;#$isoPq/r[k:>7&]*QR7e\CnFpt/HR2a)IqhQ1+HFVa2l<e@2%Rq1H=PKo2^6a[3T'8B3>S*-]-b^604Ytace`9%8eI>43[X=T$rnQHSgmW?!gS!#`6CrJdEh*>EZ,Nn-DV3<GP]86>-X8fH*T_4=\PF0=TjUb]BGVE+gr;':D%'eS<r7d?YTkG7u3!l%29tGcc\+]+3alSled`]RFpT:7k:(u4V?J.%8-PgiCCpTp,t8u]Ss)n*0fFT`kCORrW9'\a0?ieB._?lC*F:m:2[b\HK8SYSfh-1K%=^]4(J4&]Cis="/q+Oh\L4PVP.VQXCgEk$8#k/M0`+?qW%cA]=33j3UBFb,mB+qDdcJ7!%cm:O#>oECj>[.Ni^U9=4kFa#iJdSNh%_PnH8he1l(`2f^/EIu,snAgVrD=eG+5mCiep\1NM6(1!;e@62f!_5rn4\QF?YW&K#:-9+'qHd4m1^)^he^cC0e$+,[$<i+bDCHST%Hd[oYXD0s+;>$=C1i+b?VW!Bg397RHH4a0(\D+;%Q_1=OHm1<9lBSF5h!)_c@]9)3lI:WBldD^gFk<4c%/E.Nag4&s80Ea&,<<CK%qLTWoEWRBP$jK$XT$$=5*Ls8<a5`k0:`qi4_XYRs";O2YR;fgV=jSPJF$_]Vmdt<55i*C.*9Hja>E:6RDrW2i"7j`jj)$c1%*1Ld%XsHIE"jMku&-TpJS%0kTkiJ7hTpKO=L0h$;(htkY6OX.Cc>+PWNfIkg#VcJ0I44E+[/PoJnj7imF>#H<F<#RoEMk9]*7;rG.=%=O%fMn-b[,OU/(+5W=0/5)!Vofncr@Ef8dt<CV7l[dZ<-GD8`rO.`>(hka(!J5<?O=ac.772$$tfk<Pd?ue/#P\J>De2&86Qr"P^k!6%n":#,=/p,(C6,-U];[qc^.&QB,4!=^MM85[OZ'-*nO[33:bhtm*=3L@3RGofKfLR9;jqo34(bY\I1U0qK35_ek3tIdQo,s035?O;%l.%J7]3iU[or&\@X))d%q6gNP]hEh.ORpA!_VZ"kfL6qnat/Tko2f26He/Gqm@!SShNb#`*1pkSmcphd\Jt;"Pot4A8iT!s(%[ae%O`_hoCef]<Efdk.KgsOY7l^632t!N1f"P!9U^g^Nq(<,U]>s!;D%Ob^']E>3-j#iW=2i?>l5@F=i0SJncmdrK!/$':Cnl7?,9mF7%o]chu=0jE<j6J,L\;(<#)eIZ1:++dEp9+!FjDfQj,og:C-k[i)1)sQjgq2CeI-^dZkY%6nlY)M$[H.We\K$r%"AtHOM1MR0@'>W=%leTLEMI.mEIOMbXU4'&!E@*I5JBX\WOk%$;.sl2"iD)Oh<B&h1.:M*JmaO<n:m38`;2Zos_N[g<NTJ`VE\X_S;'f!YeOe\0XFcmd%WlQQAbOePe-plRUo$n(&$Sn\#$q%Hrj@NGgDd4p6d)hg$Id!DCa%Cn2eSA`\835i(6DENWm\dnt<24ErHn)Y`O[p+VSh44>3u:EA%l7Mm2c!cs4:pbQI9O=5^6mU[5iXN_Fc\+u`ZnUCiICUBkcQkj8>IA888E]]F?!=.T0TH>DM^PctIStqZ&bq9nN0;=Rd.*j*WjhfG%T5BL,U5l0-q>;u?eWe-Hk`Uk!ZYdO)WM"Y.*h&qYh84AiI*7^KNDms.9O2ZHhbdA3O5.T"`kVG>>PJ]Rc$m.u&)>$Gi1fee?^KTc%[kF9.gb/>6DW*ZJaYl'V7rI9IN1X']f<oMT45@ZMkUBe^$f@X-oTNHS^P,JO4Jg>'DrEe5_072cWU*l]`j+!1iD\^fQ#>Q5JnEnT%rY'5/6V<ZgLn`/WiPeVZ4pi,W22/rmDF.>b%l<4(#atRZ&2GG1O/b-T!oJ9MB8Tq/.MqRtT\t&9m.m;>RA3q2YWVKL5aBO(e8_,8%S+i#qQ*TaQ`UFpDe<+=_Ba[1oXX2UC[mE!;`:?MQ.M#*K=odtcSiiU!B7L%p.9'V"SHoR%]_Cf.TKlY24RLE.'i:Ri2Qr?hEAf67%La;M].9?NRWp-eSJ-':Rg**u0!Xb0G":>ar(P2^"8WqUXkC<Wq8FiKj(jV4,4tps_6fg>UH:T6h#8-$m%r)^-Pq$DXc#VFIG`9]_%d;XI=+=DT!0O5[1R,tK$Z[a_lQ$XLt5^:]g-h3bEW`SPXQ%p[,]AV%mQU35G>L9Y]e2&7h-XAjCZ'@r5kQWOfnK"*[%>2e`iM*94%4H<3]WA*BD0"9W,>f\(NAKCj[TL!V06.a>IFDW8Eq9/@O+UCk%01o_>Q;B9tk?`3R6DV&U=$S->IP24B%)V[>+pV<JA2)(FhZXQ[%;9kq^)n-Mn4k?cgjuqMlGHd@q,Tl'(GQ"(iYr_?V5=la)qH\U6bLe7fr>fX8\ng5-GPrOUhM!m*,2NKtH@t/[GQ!A[>^tt?5J`rd%+1pi7(qD[fE=hZC^OtY-k5HI6lVHg>dduo'6c2K:)%i!(Dd8%\7&>S&:$_or.GZs>iE?l1h71<nXUq%ZQ><UW::)1?=`^ueeh?Ue%>eIVjeT-Z(jZ$uhSTkTa4UNW*W[ZXGKH7]b:k&@knd[>B]XUOXK]B\i1^">p]Znq6m]\e3\:RF*ZI?%'$1:*L"l6i21i+aTQdP$R%3/7],SVEkBK_Q?[cfNW;X$nuS--j"fXQPhU['Vd;eYAG@LC1Wn<Jf&d4fpKeE<X/J:YS;%Sm7_<)NG=Wd3APgUT=pPoGDQ8<0!\M%G&r<l7VIobN[XZ.6H]aRSrZA0BPI8M`K5#[Hp6fMEhus.Mp$%\Hq%4AUYM%.N,[OKE\/5Iq5eht,kBpU])aF>_sDag6bm8iVP,EK%Ar$>"LpMYmo(p_1U"VARU-&sC.,6\_q3-ad?2^3VPk1+l^ZJ<TDL%4WrhS,1f>$HD_X@GTC]6a#PJnbRG0QZ#bN(X+hDKdr?7'l:%Zb3_7:>4G)mc7=?TXHuUcG6KOEQ;(&XcmJW*N;T?_+6NVa[\Df-W)"bFdRH)P+!mn$9>i:;!H'5djtqRM,]:k,$ULg.L:BYF34-a%X!HKEH6%q6C/,JWJgS@c>KlTl,]Z]5J$;Gck-!uTe^*RmR"I'6LhE\C&?2#'(<gYWc7k<4+lZ[nii2dLYEa?,[H`V#,SQ#H]_,Ml%k3U(I0j!5OGtPL+D@L<I$<^=h7c!kr$Ff3S@rG8D].Nl9ofiU1I'F9VmVJS'\]A-C$3>+#HYai1om>X9jfL(e#fFAL[S].eO3-8m%BIJq"*DrTY^20;;;F23]!k_"A!4\\]h)?h'(V3sCL!W,K70#<L=V_"XXM5%=CnnH9cqFl@j$nNB-_``)dG9+I6J]nNmKm.Jlb$I^%1"afSTLXF@7VVZfrM?D.;55*\D:`U0oTkeSYQ-O1DY31,9S%NB2UC4(Z'Y*UElia?&5kO_HU3JIPV6aMCeAU*dKQh-(VQ<JWV'5L%jPQS[\">;TV5Tul/DQGpc&YPE`OHJ]`Qj3>WSOnsgNur>rr%Z($)a!*X^;'*L^ABbr^oL8,BSFI*-+mO/Ko3A:bkB!]ShXR]9lA6%8R+([/ZVg(:SP8h"c1Z^>"Z&e:].5GOXj7rl6S-_rSt*,2fo!mGjF@Bgefr'::_')RO$Mm+A2=l(K<TG.k-W>X4PFI*jl.!ZOql'%lp3Y"^B0"K6_tf3#gZ_.b9I;Sn#sANK('Vp$Sd=d7M)/8B%O!f6CE2XY)FKf[)hHi5su:T,Zu`nEWlT>!!0@F&Ft'i'a3LXDF$"3%nB@GI=TkEXHOq?6FU!G:P;b,)\@s/=E9iQVKK65m+G;7/=lX`a"Q>2]Un3DcPe84uI;K+\jP>D9(]!Sl;F_:mSdT`[Jl(Y[m4a4F%7M*_E/?XmR7(nTM1'AbMcf0Hu]JbB2EfQh9#a%,j&V<j'0mR<ITq6+4o%p($&UB.nA#h;1N>9hp,7?.cgg-t8F$j8[b,o!*):apd%lGVhGMIKmTlD<-R:6le9HWd=QI\qQ9TBK+`F3o8CI@tQ5M%!1s/2Cm=/ntj3N2RR=GpoG,_\Y!oI_SdH*Q\"%3R&'f"B:RCq<J$7%*TA:[&D"opG8/3?9"*79d"8PpT]?@4FUGg[XLe-OM243Yj:?E_arsN#3!45"X029G&88"t?)c[1$]%^N"V=YQ*auN5UX"*q5+0pm%)#B5D-QR@VH_39N`Mik;dD:I4T,1p"bh5NM'mm&CJZ+djaT@V.Frq:W\JCe?n79oq!Tf'CBb_ecL`@p77-Ofs[HoAE@mCOl4VE%9%lfsa42S#mEpb^0Np7UO<q@F386ltU@2WYlCE`YLo&\0bO3fDoibb"`ArQl^I3gfGH7+<am>!YPe-o4=QIt@().d%+'m[SW<S('If%OgR0A$h7F,!F:ABoTo<rYEsWQ&<]%&r;4DE(\mgTF-^BY'USWRO+[U@Ha$`p[p8&mEDT8`+mqh99@K.L=AO>$`Hf6teN?EVHqO`W%]FY.P40si41oaobL4$70k"B>"T0EOrF_9a*=2Yfpb"QR$ST.T"b.U\NnHG>nEDRP$V(=$FXA0_L>fPcnk.<aR[rubgng:9DVO2(O%%]tsOGphSF\U)QC<#4YXeJ*Z2a@G@\WnK(6<O=(3%AU>k]F45"qJD24=)WZ4Y(_/Yi!'dXR1*t04>(cpP776`1eOueX%hUO0aRZg%%]l+iLniO6@2#`iP]ECAI`/Z0g&,Y_=[>K)+Dc.:2?2(/e)u95jns>MDRCCMnT7m@%)VE>Y\K!C';T-1H,C>tk6*/=2KK_dUO&gO%i]S6?D+=7'5Ru0u[+UJc2J?u'"MMZ/"9Tg^=+AXmH"Z;Q*8e`'HuC4Q*2JMCP4(!i`SNS-186@qQ1=aRjdFRo<!uqU?Tno"2-7;q%HrJAeC[&M;bLN@-!CORL$W\Rpe;uZIns%T45lYXjG<Z[CYq(7jh+u?Eh(YjJ;r6&B(k)G3(p4(@GlNn3<M+m%-+)YfT?`8cES*8H%Rpf*C6l*af;s#,OeTt!&fMXKnJue(oK>P-%Pg8PVm@mrI5noJ%m4gEcAeqa(fRd`4d529#<KbVF&U;uCpi=dtCm%XT+[5?nesSW8%G82qbTkmIc8Hi(jE`K=*"Gh'EN%upFj-E#lbn4p.#j]X"_ZCln>q)PY+I#a[cCUCda:X+=\sDgB+U6+iG2dpfMI*1Oi+;I_BjJp*%N'"uYH!*6b&oLP)fE2.Z(hHrU(N9<Z3-LQ#1q$BjcHhSV-)!:d>o)Z]b3`?YC5>=qNcLG?d_2@DN/3fYia&i<+A8&c6l^)W3;Kl+%K%kQ]BaSaS'<&?/ju@cW'IT2+Pr5_S+hGeSQb8/Tl:ON;3Tg\0Y%/fmStAYTbk5[n<BjhkdA!d,,Fq\ERM[g:\],14An_K99_;A[%qdV+IE@%CUc*HJ=ad<Is0h3h.!`]Er]Q#Z``dIYYJ4*pM_SGXcHpUZ&Q4*t.0UGtI(6_021@$Tkqur"eHZCMFIhVoHJTi8fb.T:\%lM+)p2N"C:V4)4q)M=0n[<lpjcb:#?0NR3k.RYJd\e32>5Dnm4oOl$*qUrTd,#Fr/V1cC,OG?';q^VcYgoZTCS\@-05NRu_nlJBa%p9JR%5)]biRC7T&AK*MSB&?/Ir^s*:rKZ)9_'Ic:L2DSufg`6fLSHI=;`_-uSpRpe#*$G3J*kPn8m4F1Zajg2YO:R0q,.un45;B4%.-VUdj_c#NLY&037n(UQSJ,G'*<k>!CIW`3N.*(-q)B/`QB96@'^gmQ6E)H3PZm^1Dn3!UqoE]4dgjWh-`KaM:<?Ft^U-`f9$Y&8%7sVj4ETWtj;L90tM:2sZQfXDb4K!FnM$fkA<e8&dhOC0[aeSFo)oqLp]9<LN46ZlsL&O[#2C+pHVf[4CnHo-9,g"u`!)Y.''d/VQ%GJ7?q^4['c(fEMJ*sc]8.eNCs-S;<*?fYl7Sf`2(4H:f2(WHkf%[Hr9oVfVMC4CQ]%Vr>qj<Z2Cmg)M;'R]ln^l7I;!D)!RGh*3!%@Z74(WH?G=K9.gcXko:]I%W7joCG^<XDDD@XiG<G-Zt^GPYtbf5bMQ2:)<5mPU#OHfXOP4]h9iorf9iO3s7sI:='0g63OmBSY.<g%0"HHi)FiX':Aj*eVp>cbJmQ-HE_+Kj"Ap-?Q9]ekUBOY;8LL/7<KfA(RDlq2;&V62%;7&;.e'0OIg0(*o_JM$[*g:RIej/51[_#W%IgTB$[pjgs>'W-KO=t67iRgTG8hnBc%()28@\%\Sg_nJ]]m]^Ocq:GBhV>lm_3BLO*bVMN$#&GO<q<<d"40Yo[?q@uc@K#Rr8^'F%XZXbhs!,l_U#nQC=t(i'Z=h8M:7tKtL\.9&b08N,mr*^93-JfHZ_q+/WcT2TR\PK@JGYJBlWFkB,nDt7\_B_W4%isM<sId>NLE(t%4`%r?H5kneAjVRbN@HL'S6-)Ahp)dac)f-0)9CFFMC)A]GGCcQQa2K:Q6a#QdNDC7SOfYD;Oc(,=pl'/.3JD_3JFDIBGfp;L7./+%Z;AgeCRB/SG'Ud,;F&"]S'hP47eI=OUf%b:WoPeIf`G+q^@:QLr3>&A5S^9k4rEmLo1?KN*V]Qqff/%Y+J_VQ&fU32=r<M6<qL,C%APnN]'eYFNkIHDQ8k]QU:=dI?:$!W\,_Y!m%Qb20LP0):GM#45Jn@m3,Yu]el.YA6i?RdmiZV<>q`mM9nfu"ahYmW)O=*GLjmNr'%0#*SbYf3Z/UPO0CGod".UcASo<]T$)L>SsL3fQG]eA\s#1p;KH][AM;n2A;H/2X?\(fBkNC+!.Gg$J@Rm,ICLLn:j/Q_-^^eUmj\%ef`Laq<=cGH7kb>>V37m>F9-.Sl<[0Ftu+I^V_SA8,&!dZRG8Oh]KIY&o:*"#9H!b,MZdd!ZM2@Oj90Z':38V]PUQ,Q,7P"D=o=6%[`M8qiq,Y.S`Eft5<agh#i@VjF[&2#?4DqsWnQp,.Jf>YGa.=liKOT?\^+$r^#>BO#CDt]E[D2Q,`c\#!QTDK+EAgO#1R_a)8L6k%bRg1hhRQ?i[4H"Q$R0kf]TI[OoBGI4e.duBT#FjrbS+ORC8Y^f@l)Fj%6/f_SqlBTYK5p$'bo[LRsE+]c`eIt[BqDao^ZOR%9E,\%PE+.tR<u"`QoiI"WpL!STorb/26@V=*^k]q,4)*sb1LD>9c5SS!Lags6iedLhFSCg&5<<%F15Y%!CW,!)fbr'drMT:+dr\d*2CnW%L1n_,_qS\9j=\_%o$#KP4-RO47l?./##Q3\q6EP->B+VibCF,M)%2lF'@.5?A8Odj(JZDt8jZ%\TJ#.7nmUIAN#)Q;"DC)c,s2Nr%XNcQ%nT*<8#cOkufng%]PE5@UO&KIt_G9AKipQe<[*'Xj%,GneN*Ml[Sij9OM`VqLL+_m.Zf'WF#[/U,TQ`?W.,5=mP!-qi)$IXF%qf/OVOp`95*I!B8Q-B48$4&]\6pA7\SR\D,P-[&!2A*nDiqAHX#eJ4%3jca[L_+2em%o[S5!R6r/tT.pCdmo5Pml<rmL*Hf:/O,V%(dKtd9V-OLO#D&W_F"==T^h_g42fLCWN`;+3-8G6ID<G'LYU;lH*XW&,+a+%69=0#4OM?S/["AO3)1@JCq=:OM`%6*:sg2L$kd^0%5_3J`Or\6F&:0b^Ci:U_mWt;r2O&20:44jeFlMODk3BW3h%VZfV8C]B^f/-cG0DM7fM;q%$qjIRcT:4-hE-,m]_dR'4T80s==jJO%4[5.]S'U,:pG<)(1%jPM3uQ7@8@uWGeOef+?RpGp7s2E(q.Z;^Jc7ZEE@8K.okJpgSDM"3kXY7BVsX@90TioTKKYYC9mXsPp)4-R%frSaJd_31-mrXX1-AXn0J8o;QCJE#eqi"qDn>C!4Vb@[b(!FYee=`/Gdp?OL@D2eTL@mcD=l$!bbBga<Ps%mIDL6=_Sg!r0]=eG(%q<_YDpBA3^0VFUkiUAN4Kb"tSnlKs%@>le5AFG'qHJ/1cWtYl)8Fu!u8(+jF1I77!/'@#J[e9g>6F^h4F2V7"DA[O/P0Lt;dpS+Z%"]'S/Jp8dFPe^4UE</j""l4D:?iT%kpR`4U.622a[EP),2jngCDe;^-,>9)YY$h996lZ7!-!`.J3)771@b^Un5=sU^^[q`,)rkgY%`03o&Rph(4*UYE+Ft#ks0nTQ<7n7L8$JD9]R&e@t?l$-FoAtO\hWsA"TN%GD=h9P(l*!u>nt[X-4Q*GT49\,Hh+sE_hC`3Un2`.a%8m,cA^7_^j5(I:7X$3-CHnLr!ospM#]Xo,MRrNpdL6&5\T34Rhn!Hngrik"M2=$^7F^SSKF2jJ#HC(i0G^>g*`@,)C!Tg<,RLH\2%cV<2@OZ_;`R>9QP.mMcmTb;US]Bo/WoK2uTjFKD$iKcXLOfp"`.g6rUa%at7Jp7MuBdjVeEHA9;&A<mB"n064i&TQ7:IW`%/S.U[%b[g:9Ep\O$ji&dI="l6iB*A3j@<OD+g3g9_Q\#dqS])R$;\cW%BoVUr%<Fq:0`9B))TH*2a^AL=m$Jgj1;O!.*eO?[+OZq1&)/4i%e5`T^6h#V*$g@@p6CPdF"RL]s(A@%dO^RbC4\3O*m:\Z^q4>f0`^Jl8lAB<bM<o'&V@lfO[\_`L(iRHXA4mm+hQjEuZ6ejlFip5r%^'H]62hTKX;?<3kmr\:6B_(d\0h3"l=W)fQo9&f-ARluZe&tNtO^VFm[QUCDQA>3gBKb>*-O*@_Q+KVT`BHs%]Pj/b)!9cl%(E,o%-PO2aUF[RY'n`;Uf(,X'$$f,ON(Y2P8N5>ul2enX^<MN$Rl;.cXj,S@rF=!l<=<s1%prPP7YWo*C94tTVJN!o77%0:&QpYuc^]Z*%ie&rJQ=2^Q`Ao3h[M_ZlUA*\-S!_7=Q,lHFiUM;8KYVS)-"TTfHU+,5Ht2o)KQ&Xl!@_Q_D2j5*8*tu9qSgAX&+f3\,=Fs</0PoT%NT!E1dSKXM>c^ehM)+^8%QMdckjIklVIG"sn's#Mn^tc:Inr%P-8n6sQjM[V2Y-fWWeFu]@r`o'qqBF5o+(HPHD;"Q6e9%I$dcX\%*5$&A?kO:.B`81eM<>G`H3pXqb=6G.L(d#M1&/,\MrD(+K;lo4O7am!XQ(N"/e*#5Y*!f;h*T\e&J*C!L.OYT-4ZeEO6]L84\.6a%R%4)/)f9@'%Qk&&E[%P>9S:?or%RXtbdeBkKpn!n%".A:<n;dk4N4ZbiYfEe>h*75+!$'U=u&YQ=OQbK=;0pcIn^L7luV70n5e\>%DgS3N6:1a3_lGd!IESTO"V:CL_(TcOrj.!,G,#0L70oIm;T;DRL)rN,6Ut*/1*-^u6XrA;*]c2n)o%E-p#\'*49Km#c`m2#6WUdK%XlNLaMF1$Io\]Z]/#Hi<Y%>SJFQB\AHaFV%XB5U]G]FFbs1#cC2:\"eYQGJUl4Y.A1^<0:R%3S<F9[u6Dm$)IEWhQF%Ml'PR-8O+%@Q$Gb%#6Pu)BmJ?A+&h^`N&/W'K2sA-Hh\ZTU7Qc5Z&S`(%<g:`?tPBB$UV8Ol?h:f-`#^VcaRBN=B(-fd7_Rjr^n.p8X-!^V&[U%$&h/*XB\e=+5+#m3L_i0jnZ8&U%(PmLW1I5nUR7:e/qhTLR)*!+#?hMf5jQ[oO-bFI/PQic*9F\(aPBNSTmL=.qIrQr3925<OdKn%n`,,sSGNln_%rSP]8soU_>BQ65pQc=X8&FlrYT3kY@D+g<a$)YAl+K`,5uDc>4kArC+gWLiahU?ega,U90<jS4dAp%8"1kB[4d-/%`+s,\&^>R88s)Df)+lY+h6L\IrR<4GSOtp%@TIf7+nen[CT2j0'2A`'eUIE@VosbE_lu;dF>HY>oOpsWa*4_Z:`Uo;/r6[Q.?;0.%9K:mF#=>raW"^[^eHaMX7TqQ?F[Q1&-CiBYB0aNC&IIPG<EUOJXdFd97'[pAA:"MC=@Jd/XKcu(oou;@Wm?1_#]1%:`rFGbH9c.:%ZVXu#GYb-a%hm;Focm@._!]CWL>/PmRN$of=LYmKW2B5][pp4O4N5%+1ff]mb5&)>1_[JugDU1RZA@ZmSh/0!W0>j"_\H5gR.YO3%gf%_F"q8NIOZZ&F9bU/1(sld@6ftH=/FALI<^?8N4Z8E`^-Wf/OrB1^g@'u>QM(kQ4gMHWaHIiZ,+Y?t4IMb,<j(G&]ndGH;iHT_%h5@$Df2sB7W!=>OO#K0F3t(2b[&%Wt^n?^Z7@#k(82U8O?%8D=4BdqJWrD3t"d8kV4ir'U5=;W.GrRs(^:ZrlSi8dk@[EkWgco=6%loi"^8,]kXM#s0)'(lpm>\2s!0hB8X</j*L+ngPo;HbAPchN.g,,_E]p'eQ2\,hPH9Y^ZTP!hb-9dns)cL+=1*"]4Z9$Dk0Ld2B(%So<XKqguJjQ;g`f.LJ`;o`?;KC&K4;%J5l[ogfW\<MDaDZj1sF's5JpqEDsa.pB0+6&_N[1$4/.XN'aBK8H).c*a8[9LN+*WW^Vc%;/9m$#gMGRH]5S\0(gXh-19IF>_UF9=\+I[It,FK(q94tn7!fh0Y$/sr&H$Y8F3k?8?:%d,b=E(+*1f'*Q>:rq#l!Ka_$_JXif?*%Rmf07&W=IBN/^tNN%l+#/8+,>cTM*C(KjB^WU=@[1\[KaQ+B=_R?<VoZ$[./rq^O3nDro>Irs`!cCGbQ0!65>0-7b#@J?sX(I.=G%J"D+:rkB]XA1M4r[k?_\Vgc7"(P29C"O4.1MqQa$qsp,=c&d;NfQd7-d<*K0P-O+br?U:/'tu9$n]sBqQ4@HmkTN;R]8E)kWp]TD%r^V6t.u)P.Q]I1tIU)gILCgM%^CXlbNW6u(Ei&]fo4N82ojg/690.Lu$[VeZp>"R%n(Y=P7n9mM_s^t$gcp#Fc:9R#J)p[Tg<nG^%a*ZGh)N/%&IJ\sKYs$r=c[Yo0nE-r756D._rYI*u1;<S&]DC%CK=bcR/"=k7&'lk.n++O!]\B8Qm9_B(4kkCpF)uM>03n>=p^au\%meh/6q9!oj^E)D07<A=Qm2I)AXS$l8kPGW'T%s8;-N@6cS#9li7mFAikgr%;YMc`^*p\V]=ik=4^&7ZU5?jIus*=J8$CZd#U8OM,%HgL-T-[SR+&j6,2p*I#Ka%sodDZ%)V/2K%uZj@IlC@gijFHi[2&"^LBeT"k/[1:6L^RtPV4F4`9oDB[p"[=%*rU03Pdu^HU-dUX5%G-L`U>:is)m`sC%]0G-KqtCgW,sG<R]^>@QGQ@l87U*LTc@T!]]BrUO#/8_;M9SNs%4^[F3]B6&Lu3'>H2+7t>cf]O'u<#Sd3/Ip%_Ka?hs*<_R,YefO(&`a>H1Z#i1nWmCXumWdYtp^W`JC*=+NZ/r+!JaU4ta!c9h?\R=^@1loOC*UOq3\G$1C9.qXq=QU7K@A]2[S>%b\fSYIUhR/Z-,YCk?#g4].\ZJEr>jMDr2WsJ,A,5GDhYt?BEWWroD(mGUJ2g3rV=SB%rg<2fQ%LK)l3MDHQM<]X$QFT_[-C[d'Qp%EV.TS(KNZJ[c"hO&$13!Tm$IfT8q`e3BhGaI?&)dkb3a0FiluaLDh14.j&M]\7R]N^T+#=@2BZ%*toiA[a8KW).Kfl.lJc\l_f5<%SkeTAZZc!$L%o./ZP-dEpSVY)M"Q0AGJn1#Et9JAM=Hm)a0U9\`QHt-NFqSAP4<?/]Ct'\grV5KG`WmS.T4"aG8<i3NV/iE/J\.#%P5J1_P6*mq=\0ZGBDH4!aW,WrrE#9F;0(*Jgo"W=T0%=3.Q613rq=Y*bH68D3+#s9rF+m/^MhsE],S_Kh:J"]DscD,<9@Wdjo(\E%[GS.ee(5ft"[*n%E:M]G2h#3a;gi`di`i.h]>pSA(#2uu/e2r=^S"ehSG8GT_&'_kbd#K!jQ.>2oD<7Bp'Y%(&TRQsanOoq&$&h5%TAnG)*F0F)rXs,9&0:_dk-kqk"ki/okgmmYh^:H4/%E!&7mDbjX#b,],%AN1kbgqRQ8g7!`2ua(XhTD8YM@j8+j"&2(.n(`F)06f%r,GTRj_jJK8b/m!Xm87ub'6\=J+YT<\%fT3\Qci*#g_YBk.CH__op`6NK&Sgq;oAPL[@_n5(pTs8,cf\f"ue$bBPr'^$\=]Q%#9@%S3"+KW37E&5P:&-h+r-8a'H6EZhoRah:g8;Z1V/75U?n$P2t/`h2aS[S?&.)-*8*%?.IIO+8OCWOImSJq^CR:WiQ$=&X&2q&83[<%j6V6mBMO$VZG&P&5-F,9Ic>#VTV+No@7e&AWLAr&i38TrQk!*=SD?s\c'7,c,j02:=8.n)R:U#R8cC,NpCgigPpJFO]3eR$(PYMI%]=Pb=k.gG*o14&jq9=i0c*d#$mG)r-q9&,bUM%?`2s[CA(<8=jlhQaH1WPB:%mIX1c.0Kbj-8qbc$u>_5]5mR%I^]REqA;.90^ts%Da8d5a4!8C@IQ"$Hf<)+qt#k@ko.m7ms4q"AXa2,]=!"^bn*lW&I%h,ZmKdh5kE^W09+m`B6h36%/E_m,,.5-#_otlKss\)o-]dO%0#f;gJJt<u^nm)sIHbcU_\Q8F]GcBN`UNFGj8(r[1t.:SIcZo^hZQ2[ERjYQ#il`/FZKT=$o$6WIu;.+5B#u)IX1qUg$S\4M;Rcq%Dbp/rkpo.okq'CDh'S[GVpFhG/q1>MY3nD4ErOYg90]S2r-A,5eCN`RcG$m3&^rOSSt)U?AH'gUrX1nsR!eYEl!nWaT"b!eoBg=8%dQG9crm.4RYqK$Il77TQ[tZ-9OC"(d>7DhLOi#^SI35<+5JE<QPL-`g*H)bos$>DBe>2'PdC(,qA[<kX'Xm*Nfg6c\D3&T+X*AZW%V`0aq?_qe\Q*bqg1+blK:#fAn1hf'$T?*WV^E6[LYbDg*agDGu`Y70mF5ctpYqt`O[XrpJoH1X0\G,7;\YX5^hsZ1l-&CMeq1l/b%Xm$AVDArN@Pkq^Bn)_Y\AsDSXp&+(7HG#1#_S@AfjW+12d9Z80`iFHuc(,r#G&I6WcbJXM?+>/+qr-*$^NXUd47Q\1T,j>l^\uXQ%&*I:_SmRQOaF.<7ld=f).$Jn+ieU5HgGeObfJmm9kr4%[o'EFG&>QnOEGF[hmq>.7G2q*<++HY#70i3;*?rOYAB+GR[paUUEW?%,%UP)q]:QHLn7M>L^p&+TQ?RcgdoJGBY0V""Pda(t/]u.$8I08NplLFDB'2]]4J+m[c^M`]V&i;?!`Wt8sYO`Y(b152?LH?k:rVYS'%7e9i(mcT'QY`d7ScB]it@6Vj53-!sMnAXXokmQGGIR!f0nC@@%kpngEpWa7U>b6d*``%T*fZU-FjQj">hW.tXDsfJII<tnR`&meW%/!j%+?P!>.]qs'KG'\u<Q!5-CP:)85h#Y(M=750pp/ZA0l2.W5_!UqhQK2eMl^R*jCSuJm7/Q8ZBl<CaR"Sf8i#VcB-R0H,=eL9D%^on:.@nFMOT#LBW4>P[P^?aIt0A!XZcQ[2M_fu&pJ%7EM]'oI`Rt&``W\<8@n5&pu3sH%HK8qj#I$eap4S>'>jj$VnHi7DL]U&qA%Gjil@q<kq+h`[D-eQi+jLqDKppRuB7r5,XA^IS+UgjefK.[RKl:W4_g:ZV@9gRCUm.I#n2.Df_A3/k)$>9#Q]:J\b$q,F`t_">6C%nYZa*MlWqc8<gj'`]s,hqs6bjqh9/.Bt8RHHGl(6X4A?T0Bh*$-fRotO3GrBUNuMh(VB5U^#7bXiN!dVj\,CYCu'ls31"9s\U0[H%%Z:)@WJ`i6^HZo<`TuRY/q8AMr7b<Wka>+&G(2FU?fj%!=<GsGHf%J1I/iLB`X$;5h24F&qX''%nL$'ZpFcmQN-+=+9@IRq8&ff=%LBgo\\bP@8G<_3MnXtj7b1Z&WL"b8p/>:%fQUd*Bg4/d&7h9su$qfg,:@GNh7\cj*.!5$YK_kciU4cl\HMu=\NUsW?mbBp3>Rr3S%SU%Q2s0M<6ET-QWDo7LBji7+CpRg=RJ$kW((_r!7P#fGh2]nVV_MONHLXW`+M6Cf5Dk?hTTnJJ/,s7E.S/<f`-k'>?D-:uUpI%gW%42nWLD34;kET[Jsk2Z2g0L5<F5PlNTiPJk`=#W,[K,3qRlcHCjkjeTGq2InW1ZFCdOQ>0N/@mnr+2"5bX(YgWT0CA%/rk='l%`61%E8!K7YK-#krdulld9@O;GA!Di&Htn_[+Af#c^Yu0Hp+&%kZ<bS>c1#.I_IjmnnRn0.Ij3tZg-4d'IM7+9aB15$iebaqCca6(H7al%r<tXL<PRqpqVoYF4+?nqS&aF5YLas)*G*"`IGpf:?=+1D:L+HTKRELDF*@ufm)L^,%"5Y-a>UQqjc4O[V8K=DgO+W=Z2oCEbhYpA%$sqlk0l;uV(]=7)qie^ac[U7A:::CWp?dA&LE",USu<V0*q8.AmJhiFHL,)>KBfGQT5L1pj^<1Sm_q"d5AiC:IZZKua/V(bKgEYL%("[o**cO&%!$2"_%^q6F*C\oWj5]st_1`*<QqrAc^V@kJNGS<\4oK<"s6S8p-ZP_P>4)p?GHr97c6&XJ%R#9"1Qku*mr(?0EoJlk%RbMcUMp2puIf7;jhD(krh8,Yen*qWbC\[=iHT*\'Dt(_!Cl_;L\T)(^QNnIJFtV2?^:En0m=enrSarO'SfPB5)[TksKgl_fb,h,H%)*%=uA*RGr)Q%oVl`hV4\bR@k=rt^//_F_3Rt1n/$c.FihetUp=A\EZ/APq*a]KYRrLO<3hq]<@n=*t*LL4tZ9R*45Ye?D-4W:=[%s5SqL4VOEY];:m6qVBf2qDZgA4"eWq(7Yas]^'XBo\.RU,874DRXOf%]bTTN?<%u!\@M:4B0lM?8/CRL\cMhBO9Ef250Ar\j3D$0%Qkguo`8M4DAWbR*diJN_E-'PaE6g0:LeGLRh>4&j@37bSc,jZ.geI)ZV]c4a2*TYuGoXEoeE9L->%_He&372i1s#ZC[BkH]R0Uf8%hl:^BfGI@SWDn4K,)7!&mLrJgI]RjO[pu%lEqq.&k(Jskq1(t&#HHmUOE0S-OVi_!!-$tN>TUTtk>&d<4Zm2sSeY-Q%hWWHbJIth%jRQfVncVVI^p1d;Z!_L?R%uLLHL^F0i;p^+eo[D/98__q?2j**38.^\)9S4Tm#Y@=);G';h3XMZk$^%=S!L;_@_+SAfV`T<9dsSE%3"7<HLThCH[V-SCN.'\B%[XG#GPpS1RW%6]`SZ+a:ZVH0n+mW#L[)Sga06jcjMdlRF:97fq;V3Z7j7!b;^>hq8EG(?YHGCD55dn3%\1K_:4#,Y@rJ?Fcfh[D'q8X&95nL9H9\5%h/#TV?aGPH:B]Tr/A39T;74Y9l+kGaj74Y9<V2Y%ql"K/mX2J8W<jZn)<T5U27P!.l%*+Op'hT739R<hIf?WMR"K#m$4\0T8M(Pka;N_@CE`TK`<(WRhI/mf_V\Mu3%7c6Ke1:]@s)7osQ(7EBt^0`J%B0pr\?RN?r6@3K<%^IiIkK_EuWI[/i_$13`Fqd1napOCJk2+:iQ[oF<sGOBkRkP<k:DdU5'q0II9mCTcsh.n1hHi;!SbAX";s69@ZIXgn4reH-hYMZOU%?JjGL425s@XY)fpJ+L_Polse*R:P8U5La"taK%N_q@Z9DKo:G(='f22p<K)((]V^.3SOXLSfU%Ernbs?hr^!G4oKR`^]!&>CIa:m%:EEdnNh,"?[r_.EpJ#XQs2H_Ts18hkm/]&]mC!uAl(7fpj\/(Wm(@]84[Wa45.l..YOBbjG'7<ci7Ql]UMKm7]_(NRP>D)+I.6FU%Lt(.7Q_'^^:YeJ'qkoDu(RoUf7pe2&2iaH!k8VH;BD4>C?bSS1EU:oOD1'A'2!?!"'041(n]std4o9'U=F#o+Chr(`hZj>ap3jTm%DiV;3#PjF*p7EbH\BmJ1_:'G&dqp):HnT:Uhu)GFif_5+>[0@:lM[.NSnGNjNORm"r7_)H^]2$]')(0g^r:qE2g0*:3IcCi\p3UC%rqsp$?]1]0qr<EheN_A4rHIejjm).!e`ueSMs!k7od^-$Rd9._D:>]cVq/kRdGOXuf2f?%jX@lP6FSk]+7DE6RBVYWSR0+0T!%=a%%2\J<!Qi6(2pI&9;pVXCX-)A5Xkn4?YC+h3kDWW`p(sk!Fbe*`OMJV");EoZEVmLP@IM%-gH.@NS3L6EDD]DZTDiWlBRX[UlArP9%2p"D!<*VRNn`ak<FT-jdo_\a!'V7P#Ep#`:F8j3=kBGd4rrYjN+5^Al^3t/$df&b@=`G)+>AlVcM<^'Ld3%=s_u3*?&%:JWf;&1f%4IqtKU&Trsj'_G_8t@-O2(I-_03>L?_bVGq3I8NFRclnr;RuKSrH`';C=Wb'IO2s7c"Fqd?/?IlF!`A2Y(c9'Im"hWH@8_*T'btE%e+&?[nr(2Fqr8Kjj;5Qicc7\^oNV<c^DO^@\oTC%:%?oM'@-mBS(mLl(Zf=\hjgqh*3L>CT+)NVUd0j:5ZsXR\oW29ZPP"*fcPR#%^ON%>h&B&B2^1XNm%6<@2>lJE+'`7Sgbl>'a3^R__Z#Vjpot!19&K45+k,uKdG>Es<T89$8MDLK4Epe:EQ?tInB^I?f'_r(5PHd:%^UA-+g:0Lo?X1]6h?,k<F(a8X(\5hOQbQo#M5f[?q'Z0OG@o8qebe)kSmQd8Y^Nd'pVW,[QQH-G42\/:,eqd;s5iua&?h_KC#VB:%SSL]'\UQ*gE\@>NLR3.5B+Y"<o^$4O!,&kb#(tr"?VUD%58E3SAUM:imga)7DPr4Q$'4h+i?+*Jd_fo!8P!(b,l`;:Y!4Ju(DgF!%kmaLkIog..\lLcJjT"!uH>1"GUlCrDHt:CKN``)=rIh%t0SZOCT`3&.RnYOfNc!VS;]jCO^YD>.jq5d=s)TeADnILg=Xgs3pS7QS%nro\qR9r)0DI1&)l,M%dItk^&W3YU4:=j;R(.Z+=rWue4`NcmVA<B>-Q(@\u-`YkMPjmpk9).#Bp[6:sr8RP4ka(u,3q1.-cCE_h%lhh8@827ll'"1Ru\/N5Jq+pgM/'Zhf9)/%R>Am8u)0"Vk$_.1/]hRe%^3\a92Z(Up@#6o`Q14;ET,.BXbs<1a^ZkFMK3'E*^\dbL%aPP0b?@Htm=S+PX'=2nr0Tb;U3#22F/)S\YAIRMi^r5O1aT:?mIeW&4e)1(n7HYV6C=?\mS$A.gY5CJ1(k$CHgN2/1d=9K^%=;ph%#9=8WT4#PtChKrDN4O,3[p8)ds6YS8XuV+_adg*:+8pM&B/Ee)<[VMrJ,'";7RX`&jA\YBd2T3#[YFV6N7d*f,AA(CE];*L4E9n.%\FT*&m-'q&iVX[\-L<9j\Kd\?%bAW)EhL`souOTWj=]kjnODe0\(NqOG@\oEIs6?5%euOhmPeVcph,p]cJNJ6%j2hRf_3K]jq0!(%8'YBQg$TO0087MkJ+Lq<F'"*4pR<aum=+fSjicYt!-H6XVV3bcGjsYbmeDU)qANQ.gEKl<,&leUmnOV<^ABdL/T>\K.g1pu`X[J&%JXl7C]Io6QN\CogmdYYCq9M\ESr?Z*,/)68edkR%jAVonC!B/'A=?<.:1]kmH0-j4D)0ANCqot>,cf&&Ls4eW&_WB.WrBF!leCFP%^k1$$Y[IJ"O5C0XbYFRPal_tg->X\7RHAS^s5(gj1[W<kEA/]nf8d"k3;CFfTZD6AHm[i\o7Z$GK*8P(oeNuF&Y"\#Z2=W,i^Su)%I"W2g_tM"%d7$-+F8L%!E(]N?:O9rqKk^$%p]f(*,Bc7p)O]*@T-dOrUSO&7igNARDgqWPedpCg%q,%ra$&GR29bdf+cf`J27?;W%*l&ao1*K.r+#-u.2,\spW=!&1F+n?j47iQ%&)lW2#V3.Mcje8Yb]Z04UAf>i?LPV=Edb)s[Bha<*I1q<GIscbI#r,).j/OD>;WCO%:XD-l`cdLhne#oVP8"SHqGuJC4.duFPDnm>T0&%M[Ebd-[Zc3d(g+e$MWMJ;C3es]r+(2ngTsnR`fMk$3rSl[L_KRs&Dlt4S5La*%VlW?O><sIaN\4LpHkk[R&X"io55@V/S-QU"kML9p:\YSBO,i+/"KTaM<:_!252WjB_nh\"<_fpBZ)dn+LfR9U8lTANX_?f1Wt]LJ%imGmt<lpO&Q(jOBXHMK3Q(jOBCiShm7OtD"%Ga[k7^R2n<AMV/;RCJ%<DIZM?TqXR`@<%Q?Ro;?`@<1Jj\&)oVc`&Va)8QhH3$7u%]_]gNY8m$N,4Jqui2:Na?S13FG*G@CWs/FXrL^E3hlRnfRelQNf71jUp"IfgoZ>qPmm!I-mTT;Y_XeQs?gg/VTBC.E_Ku,u7fUHB%9t)27G!3#YqPD',HdC8<0^X2=>i0nAQEBV=V>,:Jp[.j90DFA=I.R4!g](D@NK5.9fXl@piqhp4p]llE&&)745srd9'/b3GM<+GA%)WkNlLApr*J'gKif!=tM*s)B<i9=Db9MYV7n3?Qg&+mcso[3\B&)$f=oj8ePl[Rirn'F9nQE;71Kr/PYa1_6mI`VA8j2ZYH#G&!c%>^QEurP[NaY<9Prf@,5As7APU5*t<"[<]i^]^D6"kfT@h198U2BY1:C\ub+QaLl=)lE"^C+r!aXPoY9L9YY/4X6GhVb.<o<-4a,4%ecfY(ML)rg)k'+M<W(>&>*0Q+]Ii_%jCOVn-%B1HeE\m=?grh>^-5oA:M%@lNM#cbeqC'FgSU]rfB_jeAY-*cNVNN6NrhNXp[UfR%,sDfan;lW@l&G>eoFj^!(Or`CFH=@^L3_*0H"#9JT<E*[n?N_=HrdXXQA(W,6%W>VmAtnu\1]?.!2Ju9=daJ>Qe+s^ZpB)ebrV:h%<`YosZb6;^cb_6o"jqN^OiNMM92B5:RV(D172P/f79u,PF@6^Q<J:sh.Pt-uo?O[i7T,L_F\^\nXbeBoFa68k$P`t>TViL1XJKpe%7FAJJ@#D%e48Q!),M>[cPjJm3lIo(D?!4;uY9dn=(EJ>bc)nuaEr%"!8Q1pthU6)\AldG=P+n\m(EHFR7$'8p?KND/A7/Qp2"[`D%T21K.L]pLQJ>Spc7'`ngd?J5')f6eq%rIrMCmcIMU8TSgIg<^8-HQC[Wj8)$2*RuAN@*i_KN[&#mLp%d+2,20k_X;d2+Cnr=RZ$L%4<)>51Z*d*8Z?92c?u[,hfgYhhkG"EVBBTg:mt4fFi.!hCWnbk-F>@'jHsp^K<+6h"@YL)1A[Z;-*Onc?QVX&iW\JqD-huENj^LD%JmI'Xpk](;7P#D&3!_DSs(>?XXJV\hkJZ5C^M%73Qpic31a+QrX+m!A"e'7-o\5(%g]')pCe$dhL@pJ;I>V8:#Dm0L$LVBlQ*V)2%&99<iiG%uu1aF,r>l<)Poe`%5Na:D$Q6djEBm9_=l7!/K,/(T6*FBO)7FBDb,I4Ulo9QiAr`XoNRhaT'"e@q2N_p]d=3<+$6D;d$%S$Jun]O6W&Odh+#;A;S3C"ESM+/3JFQpFO0*<a))S%>U_GF,KF'JZPNp;"*ZV;9PF)83XWY,%mcXs=<iE%BV@R<tA*rsT>e=tL8P%(C>IdAh@ki'Lbd/M&qeG-#p?\=45IB7Lj1(BHKeT!fBJF%9)>N%H*-WO1:?)oM/E9Tu_SgK8giX3\[$O%p;14FbS3Jce[\uKU'bp%?P;[;AL>r8Ih;H0qXZ<M%B4=173(+%_CoRLKfE&9==!i[Ei[R6el7D/hGqf]27f&dLlmtLX3#Rf5gsMW6[/j$7slHVL4g*K.@SAm%n6^\H;R=hnF4*c#d?&'1C7#`3gBt??\TN#8O2aOd/"*abn/0dfFH2SGNi:'aTm\[(pu@eQ6=SPu08>mlVo(;Bb$!SW6QTUr=rlZm%0e;</4.<gTr?dS":ln7BD_0QE+UW!$&4IrW4PDh"/Fe$q*$'!pZroWo,>GD%4t+I,dVJDk2A*_Q_a,e%kVYaA1_#jr'hkdAc"[YF%DiJI$R\6a=K(K2:WbmWf+q%*.FOE.?VP[WMN?sNO%Z\dl4d&P^8J%++3h7Oa`4>*b('6'X;rFYFgf4S-.*+`Ja)j:%$8to7;g<SP%EBt:2Y43P]<FJfmmZbu5Jc\k'O<X-[aV:s@KG]qW0ft7QMe&s"@VJB-MeZ9Y@?bbbWAfr*+GHdMk&"FdGq2ku.$P4Y:`=``0O*V#%RR>F0i>-rq(aprI_B+<94EW?ZD628][[je=pR!:dT>ae?-)?B6]W@#IY$lR:nh/mRJO5k$6kO0ZY/&2adR9BZcC0n)n>qQ^as=#R%TmR5E-qbL0f]:0f1_aqpeI3JC*\3hfV$W4rBKML_pEg`r7eZ-PV_.01OB4!dk1oE=(\.iNRe*+d0u'%0/ok<E\#;0=!\^m:o1Vsi%HR71Sq3ADS+-+T4>G$rOkQ^;%K%2J"Qmh5t>*ajs@Oh)J_3C%D@-;CXeGP)]PrS=mUj^A!T&_bI0t#gh79lKdR?Np`DSmA3^9"%%%'@26NQ-dSUBl[)cEO>9j@C`P#RT)IQg`NYg,5[p/h=<`DCBO_+7`-[<?5XN\0Q&6Y3-e>Q,sFot0'=HN=_<@f#`aL!D^c\'CIss'%g51gh,!I:`nj'$m/2+qB^jOY_`E?;O]u\@?bF39FU+)c0)]VRK?hDu/;t"FZ1QE8Q$0;Hd8X[WJCZB>@%4^UoPB`>?'hT;QV;=4m%@_RGN13fc)b"d^-%[]`_/X@`@FjZ([K;2jL.\dnuM5UCXCL\[AR?jZtf#e0T<R,<#'qb7)YCksJ;0:&lMHh[ErNub;1^'C:aqO<W%3"dJ3b)hYT;)1eb5is=9+M(#5D/5HZb3Cg&<pA1-]/kCh/4E/T/585ge94Bq.AoU7CKSiM@PiBlVC9+&0Ln(dEFGS192L>\E"kR2%<I"o.MKu82"V)5ZDiSI0L34A.H<T.E>&JV"ej%>H3!^3ZZpQTJ=p9g_;P*aSYrd)7&MH[hFDXII>t$t`*R;l)c)o2/</!4mZ*QLi%'Unm84hQ0/&)K$m>+l;?mLA7p-IuPbD''3>B6_R@TH3k45AKYkGHa^)aEiM:8qL:OG];^/m2(%.#,?=6mdMl#%N6MII3]b_VSS?;%dF)cg,>j7PKbB,_aV8ItE&=GS5l_gR3f%7XYu8jt#&-HHTc6^m8>3/,KVJq!V^Y0p.SgY/ZXbhR4;!X4[dZ-CiG!O:,;cfX'<*E9%Q,`1s$54kii0Mc;g+70"aHbIm[Z&Km#^>+?DpOjO.e!Ir>0iTN"&;5[^'nk9+="MC]ggKC_M!3_FqhSKoSX^GTFOM;)Hrb&AKa[u%@.ZsrUPl9d(>p@"CWDhO20qV%ZNDLekT$\Xe5Q'MYZc`)r0n7<7D+Ap>IQ`I%YH'g+qJ7D\CQDM)EpP%KJ$`&9EsI[=`g$kQ:md2%M(Rn\,u6=3L#ghJLeFE.;cb0G'1`V/%<fNAX/;1thpUj;BR3tC?Z>cV\W4KoRSN[bZp'b2-ENEI6C)es=&9dETV,eHrh@@"EVnL`%7A.[Z\PuVNcH$G0N99Y74$]t54X@R,PL^nN1<rcaLEOsr$!5BdV`%%-`X55)P\ZrPGoa0=1=TJRAhr(jTsXHS#Y75(aNtD&'F-mc%l.<;K%TXI:%BR<ma<G_:Pq0iY*OYu;"lk'[A`Pke[jYs8%CVq)^]uP=r>0#8X3Km8+)IOr9`jZuo_s!7^`"XX_/_?I16^B3[j34N%erFh[)bQ[$EO#V=<"=j#0M?uK(ceuLHV>&5l0J3_@38)l&n=r8/@M*i[=]'%/7<?>F>SI.kck1c^*unrl#7!2efOa:"XQ,(Cs6of%E(F9A=aXRle035h.dh(di\&e_Y,/sL(C1TeUm]C;"])ZZTP0UMRhEucps^j.1.k7_e>6DfjQ-q8DG,AC+;f9gq)gSWUORJ/XO=I3%88/@Q#M:ekaF\bF\jP2R8AZ?c/"83t8?1F;N[4@r63f^Ld'C\dPH4GF;"'q95.<@0dS:FU$p*md<knlgHm3\^2Jl@[>J7f2&ZafB%AQAP"2d0Ng[E`s@6r@.TAiW@<OIacCFj0SaB%c;d'9P9mdA,T"Gl;d#,SfBcN#O/:?k0#6$NJK;6.dD9Rn$g'U8VP<&.ggWdls\9%@3ULfTH)":a?!NG"q$OnaT9C2abXhdT[e=Gp_lj_Qst$IK&jnE?dM_gp<_:<8=TtqK;ZO4*hqSAAb4W9hQ8>BEmWl9kR+,t'5EkI%]"AXV7/nTeKM.HQJJbBe"o6e_/@@ZrkF>5H/<)Da6.$$77E\&U40i_G'+D"l=cR)r(PHId:`]DOi0jDm*VtIcIKPF^,gi7t^t)\_%=,8&UnLi.%*J">?%jN$Gk-,)$hurX?n9m?-U/do?>$K"Y*P#_HcT0>,)@&<f3g=e!_kD7hMM=LDNT$kjEsOJ.LtPMRA`Wt17$Dg\%RhH,p"U];+`!MF]VohD3!gDZ*Dc%dak06Io'K4[P$I']<pA'JlhWW4ka)TfK,\-pV'p&qVdIba<ZU4rX^IZSg4`poHlr+d_8^`^e%aE/=K3^e],&0.mI`+$$^OaSHJpY&,]8V[;*1tg'[#&8[_CXl?5T-CEQ/AkBPoCa;*_ApNQYCqO"fVZI)8.,W)V(*m[8=:h[nY@lc%TMb\-ij!eP3%0H@KOn3R(?UET_>0NI.<RmmO%5oHJC'>!c+mF=gT5Hs^t2OP@*f'3V$@*0R-UPHFC:T(#CCZ6:_R#FRI8cV%C^I5%%<?>e"?F@;,!S2OAX_"cBKd_fH/piF7#.qAAZ'ULC?UkoU!Y\KEL)oh.-VD6))7<XZtRXg!.MV=q")-IJOd`c%]Nd8%iA@Wf)U'c%N1I-HF6MFYqfBbAfAk2,ni$n-6"\"cQQI3cJ;f.Y(C18-^7s_gC'9G[d0:2_92O+VlKd:?/MHYq-J9g2PbM5k+n,1/m1EB0btV?F%,.C/('LaSUMi%0bZ]$/fN[OB9qa39nd7DWKo!(4Q3;MPZL%8;Cmt'4_?N_D1O.jE+i.Jk-F+50Db";Y/r=C_>YbiO385mmqLn_#o%ZHJGa,T<u0-BsC#Bo9bmin\t*im(U:`^+,_JM3F>P@,2%aJJBUcBcLO&%"92=tR$SF.*?B0cBUo8JPAoedYb"Z02>&Qac0\HW'T<%&6R'$p2q\V.8a/uO&7N-K])/gLq9c?$!H$7Q#n#r3U.(iEBjZQ4VA;CH=9nI<@(q5.Oq,f;(CQHLC`p`=Ase``0q;t5kdZ?AXN)P%f9@BY:+dk2.j]J^*Va!Z^S:nEk]Kg2G;:,;Gp[C^MD?;8&@`thYo+6@FCU>lIttemUJ8iL'DSoO^BbTRbM_itP2>F11bad+kZ/aG%#,GHXW't&n(."F7nd74tLHWPA\E>UMUa7-EZHReQYQtRX?VJbkn-'\:10bC*5S2Z>3l"d*lTKmH6G%)$2aqXkJQ_,oj/!Vg<XW\W%nr6h!1`U<1!6!m0TG`i*(b3JOqR+fe36Vdl_p^lSdSi-'e3?up"I?()Dn,UNM9<ZbX,"oLjpG(`%"EVI3`F,%KVaL0[\?T.0f44`%RU/)d&WS;D>f4T)\`YqdL`=1?Om^ng-M@@OQ+G$1+-Q_]kh6=BjY`\5PKq';V@\k40='u6Z=_;.;u"=U1c^(&_s%VdQ@$05c>odU%;*&)^7q<r&2]m%UGso0kI]Y,g5W:NU#R#gQL-SklRG'2QNF?OWH)"88HcO4E,=49IQpS%9Mh6VE..R]k0+GrabpITJFAd6JkkE[A%2!'Zk(?0821\afa8I1SQ/#lu-**`US7hcVR0'd-]9a=UFb+gq#&j%k8GllV5i22dA=juW+$hFQZ1>eJH[r%=[>7EeZ5_m]helGf#%n.R:*=04mM>m@s`bVC(<d9!aOOGBV"g6.MRaGRW-X<?cKV9l+gX;gG<8744jT3[1W=n#@S;[/+Slbpps$L/oa\"W-jQj'kTkV5+d%%"a\V%)sPD;,$a$5/5@.YlldpQrcT7:Fo3K'/mB^9^I[p&.`/-`Zh%;]ZTH@T4q`.igsLFd8fH\QKO8PZ#V93^&Gfc=ZOqd"B;jq%1+S1iE`VJAb&`,c7A[ifScD,D0r@&1`WCN-,U4?gmR]mI.>,[7M2PNmWB#3g:lo/.V"?[d652jba,O(oT#.Nf:Lb+c!9(?4fM:$6%5\r"!fL9\D`9D]i`O@$_muIsj;_5n8q&)'D![-!F-G-5l>O!>K9l7'NR^b42.nPVQ2m5W;EMcd6lPYDU[9fmaZ?rCGQ7<S?d73PK%)b1$BVN6OnSq?H:)g[orh^_\"rgK_c\jPpN3tB1EJF/=+R\'uS?5):=*.bi'L+im@6B8+&K'3W4>oQEk:TUgtM7JeB:.P=2(t>BE%dHtV0`j4=GcC&@g_OO2\Dm5.a13&h.'T)KUd7>-oUMs,lk)tfp`t9]HNiR&!/DYfGq!h>1&n;on8FKGD'6bn)"&[QcBfHbR'aJG5%[<^]D"eG1-2(u=^\lQ\9K!FP@K3!b"Y!^s8T[:gD\4&7]R7"lr;%O_&;,%mP4uoE_b*0(WWE#`_VX_Hp;$G6M3N0#1U]XTXTO/R(%OkQRr-LT9_0HgSj-7!OuRb3[ejBC;(M)f)?aP<fY*8-=R[^Rj_4b[60:LiL:8"qPT.nUfV<'/nD,e-a\&u)1URT&BJ!]7/4QL;LT%dIK-^1g6JZY:3<GiEu)L&nq+"MZd44HG09O)]iV<[gTnmUN?PsjXIQ!`k3-?%uS>>Gmn(Q8B!uM7Eb9FCU-lI=CDLf=<7V!1U(84%8!*ep4.6:S54Ks%Q3TjP`6!Vm_3AM=H*DcQ=<;M1+A1EiGu^Xh_G[c=+A<:7IeX`Oe7E<=N.*Kb*^%e!`1l?6705(0BG,"S`1&Se%*eWjA#:E-.lSu76#_WAQVpP"-Td,^W%]L?`nd[74ohn;.@a!0GV\Djs6H`/.+h@90B_g!Zm/SHZnr>&JQ614&J&1)N_"ZCFA'sjL%T>bJh:isj=Z=nMa,+<Q_/^K&SLmId^gRsX,9#Q=L;bFtNU(cuMTP>P66F8j'QD!>Bbq)9+o9lor/WU'7=cW\hScsHa=rr9tZN-R@%9;CT9gW`?u3Sj#U<Z_fh%W+"cjm<AUHt^Y$-ROq;gdP/uo!5Ba@-+Zn]$^5Tl4d8?1tK6;K$bM&bY+;!n5+C#P(:\&?=]`"4B+<]%#F,OJP2ZUD*c,$hPm7IH/-GCi6\_jnU0U&U6&$',lO^!WhU`TMBS"is-39BU1_(_Tj!I'/.m=MRGZt3n;hA`1l4EA=9`D>K]46%9%`5tgPb'kCti8eBl1Sl_kn5Hp71'(u\,GT=?Om[I;bE4I]gp/78!=RFQ]ZHh[q7*^8NP^X\.Biq&cc2#6<]K_4Ge4e?O7cY1PK2Z9%_oY8p(?=I!KIuPHRU!!4W3^P_)m'G[3-ik9G"CK4IQL["q[KlJCE<\EGM4PJPYZ!Z$^CBhciW;p;31-=OT<O6csiQ''N!Y#0SaYg%16F/PKi#(QS"f,4,3;<Nb_"X]s+6iR$n9L(OuFX/aNl)TC6A(9Be<4HZ*XuiT@1:d.A(jK6-?MVU+IrZY,lj0bubm,#Ub/n+G#Np%Y"DrB"-dGn,EpE>7AtjH<bj^a@9kE,rpVQFYKXcLcnCiU1m\h?H#Rm\:`^=/Jb!UdZi_#FB<)'UZV@.H>$K"Y*P#_H-\:i]=pC48%1_(q[S%fS?gB$EP(3gC4&2\YQ25:>tZcG%&+:ZsC$WP;KK)N8d#*W[UIL-.+24?hrm.1bbS;`Xi;iiC811-$<8u(>]I$'eUHg1qp%Zq6V#jB4E#Umn]\=4"kGGm1g7_r#n5bJ<1)Ym_u*RS0N"*D@NKUiA"&-LW>q0_rXc$r!8+ThOAT/PM`BQGDRLL=etn"iM\fPNN6*%K#ogb@[K9Y]of%&;_WKo;(dTWaZI8]U?%_M#tgd(b!M>?6KKas>[IOY&(iq"AO17XB_Q%G4l^]O2:049\hX9H$^,'\Tnl][5f74D%D0K/!,Y!>EV8'kHCAAtL+`UQ^LN/k5:dMjX,(uK0Rujl^5ibZ4bk6;4_cVb2,%jpWj"\O0)%fO4g53NTV1O2J,+emI8ldTJml@uS%Tcr$:*!k>^(:^=nXB3Os61c$1?OOIq,8[I25gcs&XPi(,SIm*G3]]+^)74>*EjUQ=dEC?AA?Rjof._n(4@;Y_RVK2=qC/)r;*7Hc%:l(mDkcqlY%"Sh!ngVcT)ANT:5`S3@!2rG&;:i`j;K6hASTl9.#(g?R4gO`AQc9X[V\j2U$bbV7p6_^D1q-8Si^L5MZmA;\We%>Z%37(UpWbjd*<b-6<!e@04A?Q"9'flREJKlR^BN9`H#PM8F2KU"^@1Y_bFsF]<gbM<T$s?7'!\mu#\,O4sBd6hZ2Dito<UhN%^'A"\%NG[Xnd@<_3>;>Y*0ptMK@1iu_FRUQle-</WBa5rNY9OEXQu:%-,P>)p>\QN">2;<Fk-TLoUsTOH-tHlkGX@2F&4%iC3B*sOY`kIW%#.@#uF]K2Vh4]l@]'kV5':q""[ZK;])J,rZmnjt;$:hV_?B&[f8;a(%LEOo5,a__gd,O,j?jAu3or5uhW#UglAfI;)W\LtaAfV5"%7]ESGn^fa`l#WfZ5r0]/'8/u.F#s!0NjD'/:I_?)GR4caWVHJ6AcC8.4APHS1'S+,JO;:c9T@o)'/$=p$[/aEK.U**UcI/t_EpSV%LpuI[J*g6;8U_)t>K,CXV_mM&$%YU7F[H_7i??QK#cMM(7fd!7EL%G7$^mAQeFj?E<`@I*a,Y`SJ#nDU;_7T3(UnoJCo&t7b/qDo%!tGb_-%*b\KE@Q,3DUP(GY>*/7n$<p`td"-^>tptdR$eKEW(^]Mb;b+Y6++MU,RZjlleD9gPI7*0H_c;.mN:m1BlKmb.:uV/V?l&%q`O$G+g[lI'GA8_2"b!2@,YL)a-oG1rH:I'6UcX6:uZ!J,>3S*G:<*OE%$`YO(i?c[I\<g(EjGd(p&Nf(/1F;YMd,UVeI^;P>\27%.o_>*6O/#>,uD=m0h&rS#@Xe>&eqYK1p0\Hd55DZ<FZ>_XDC"#cNYE<9,%/kB!Trk/^#"UDdcKF^GF.?R:nX)+?*0J_k:')TTE&#%&a!raR,J7'!l.n-3/kD$?3M%?gq,nq7@+jqA?-c`:k9KPX,0[Wm%@TmK'C(lC"<+=<0EtS[QS0P:se/Jl<%.8;685?3D(:B>qQU-%N)Xs!YL*]Z&gND5<7N5F3U\D>.fg[:H'M#?jI8];(p9e#pO`T>31@?!'P,V+$/I"@n(AUm<I'62XmWGeZYUAS+?r0$d"^4?-K_]/%U!.ZI^CCUU>;/JL"+Fp[ktKk,T&,T=m6o,IJV$!q*j4uKM$E3%o!#.N%`"A:!lJ+";C867T`V#q"&j(ogZ!d@r?*a=,*JD]EZTQ\%V&^K79eEeh"oVs<lZ@o$7kp';Ni_to1j_npj8pEbGSBI+1fG3/,*n,Q3W]nQIRI>\/JU3_?AZ$?pf9g*4L0YO^M[jSbH*)/]D'L<%,XIETR'MJRMP:qr>PL+l%356LG#hcSh/g6Wk$$0YUR!TPp]F6Xls>?MeBM%(hPLir+;eFbDP-<t1(hXDf<L9hD?lUqbig95ET,'a%'_BeCLGasHN20T`/etKVH&TPIcU>NSXO<Jhl*k;Cg(DlTYlk6P2SGWi>6BbqWhb@3-r<DXO1bEK:IE03(lKj>V\H@UVu)6[]Sd<G%i63EsRjnVb'CbFpo4Tu5KW0b0XV@6X@>8nC/*\PF.i<Z(@P1k%pp*tq2[aVlM1cB6n_fi^A\-qXFN/A'Jlt!k-c<3P-6G3GR2[[7%Hmn^lpO.nlWj%R!;Q;9FV(6f6\=5#T7=ZH2U-T>a:DruHpU\*BdegH%NK+)%7+0Q<?h6)[,"l.VNMDu"FC`eq\^VKe5*SXUr"(#6%.*kd4ilokT!+bAfHm:18/i*2ZZKcQS39YJcPa^e\!.S6B/>IRu"#t9s)_"FJ"M!Dc@bam/5tO*RT%_OE`4sE#Z\?g#_!\_H\;[U(%gRMja%BN<>>jBp5$O.ufoG[i<GQuo55[MtJ?OK`M4XnN3ThS6#+@fUMYWOTTp`AITGIY%OH8'\>e):-F+N6`9b$Jm(:ahsL<gO-T%ER*5?$YZ<_+SO&DF1*fd6o,^t$S3cup6'D(PDi;K3nQM$*CX5p-D0f(Nb"1SY%npj]!3nD^%:OA0h%V_\5&dJB5OFAE=A\p&2f-c%ka7eI1/OWEDJG9ib'P^b,aP0eq7u3&3Z<=JnYYYDcq^\WhNXWCD1'tj9se8bI\SBq^tY.<*620kO$0-fI]qACI,/^<I>*BLL`<]d%@m8=T7E-.UR9'BNfnur^V6"1kV)_p<VsDoGpqB2'art#E4)S#I+2f.N4@4$TQg/Tn.Jt"s7F66;_'H8Mea?jjdtL=)mkK[eIg#f^%.Bp=j]_PB',[:o5"I3.qW.@jrkS",g;G:,@S8odVGJje\T&jKui=7EhjkZKT7_bg:L8EH$gC+gp%onuf4&lMZPKD*FN[>=TMbN`]%S1>SHki?#dhO:H:CCt+"Qjm./Q'Xa0^6QFIUSuBhV`jB[:r'1WF-(Ls_5M,(84Z>V+H:LI:SBNjID^8!NUTd.$e7nTSP>Y"pqc0^%,&\/M"S<2POMSF9MI\A3;NO;+[Sr'ZRu'kY6Qs3A?7E^^V<2qo)b-LC*<iq^c6WCrEA"0-c%8fm2AO76m8k'hW:Hum[I^KMD-B@B%b"fD,i/CAWdOi+8l:MaYbR9PZLdJ(=Jf'<$!q!*Yi>0G9:T&.?=_se#H[:U+0on6Va@-2]>sQ&5RW;D'nP.Y'SXrZQ.mF\*<NF$S%.I.EE2'qA-V"IcVX8Vsc^aQaMl7hQ$1\NU/QOo;uc52kS)RL/c_Q$uQbQf#p!sSON8s?:+LP)A;Kl=oG130hjhkOnC@>h'W("/`.%`(T0OlEjQ2jafDd5S5Yi1hmTGDrFTSY%t:iJT-.XFRtTQKR7%K2S<@-02qfG_puR<8kimW_GXn#%sU@>"c"B)6#E#JU_.oYUT@Yc%W0l$$G@@Dm1112pP<**+.q]G05WOE9UH!":7u*Oml6U*Hnugm9%<m(gIKa4Xg(0L(2n?N)P[$*eb&nCX:o#nQ^QtV9U\-IB:46B6%ng:"RY.a7q>-bO!_miaE%Bl-U;D:+BkdVpG+u]<cfj\e*clt`mITduBPR/]A>Hu`sKiMg_:$gcZk"q9#6Ed@A;dBYh`2G``cDepW%qB"Ooe"+3!pSr#pG(?b/Kn?,PkZsqcO#>)!7A>]2$6:@ld9n+2)09$e87u]YD<<ZD-e<k[Ak,d>Ebp9U[Hi8eJ2[Yr1:cXKnp7le%5+3qa*j#t_NiBg<AeFeTXWk5*Q=?JQ:8Qa/:[+`!?]u<uK6X!/EkD.o`ZU^:p1!Z!+c90O,ogP<7:LZX1hN$/8=ZKcq&"+@YBd!)%R<=Hg1;@eKn/5,Jk)-(2hb!+^'JuTlqRYTbB_q\ph\l/I\k-W$"93*+4k0t+7MB<E'q1*Ia!MB$%Eci4>n&[>6k[8ke@OKRVW+8:%Ti[^QU.#oej*X(cWR+sh!%Y=NW":aZX-9%0INs`i/<DYULo-AA-rQ@?e"K`V9)e]H[3dF/CCJVf.>clDUl-?&Ru5[O7g!IX`Xd%0%/!kPA2V7=M?r:UEKqi%SXk3r)O/:ea[YP1:Z[*/DYYWY56/$W6RZ9Le6L?tN5[#JGC*XK_^As0gb.7^G&JloM7#e4Afjg^AcU0.p%p.`d_a>tnJc:s$`;k%ka6Bu!OJ(^o:i+rLVPC\^=+p?W(q(aQ2L[oNkLpgG:du5t5ad=>(4qp.0h:"bpo\6"g!Z*3*ClgNQ&"#iZ%F`B6?:*feTe;)m"joF>?.iD0TeLE<7F%\b3:^fq%_bE($+2V\c.m!GAL!%EC\B\@!QlJl//bN];0W?#MT0_2qO(<.]_l[*hI:$jI%01UShVp(CnYBcS&42"<>BAGg6m^Y8JQCElWYXGWCSfkpKW;)tG/+cL[Q+U<Ap/&eU$,"2-E34!^mRo*qO<bO7&[dkg[3D)<]ksh=%RSCGoe'Vp'0(N`cF*2.j/omV8>YI[KF9KZajpTs0e9MB%GGlAd;^j@Z=t*QM(OY)?Q:Ore`mVY0QQ^GB+=LoG78)02BTSL\bQ7*E%csj/G,#_d-DU'H48N[k8><P9;b>9Qh.%*YfG38KBKS6aoL725t&#AR%"e:+(J@4qh-,+EV,lbJM?i!AOC6Pt(a?<CpO?d5'=qaDL%'N#^J>kEMb1f6339$YAEC)r#E?kmX=$f>OMgle/1!_$Hl7l7A*(G-YhVW\^ZN$q"A1&T,?X%Y%NajdC;#DEX.c?Z0tZ@`hO5V:q9%e*-[a"5gO76HuHPP?C]f$Oo^C*4#=gNDu<\]G0OFY5^b];+(O`6&84Z&DF6A"'=Ic<&"JJ!R91=&h<<jE)2%rON8k_S&EB8?-"3/%ROsBZ=L)!",&?W,O;4C9\Tf`H;\`L2(O`MF8Urkd9';`b%3e]X`iXDtjXXu&hCQMXmr3ob]I1%IofnRjd1N4[JlqE+_VQ\W,hK'a%KI*nIAsj/1]G@>.'!G_pUsZbf.iJ2h1j`("$mJ'fE!7nZegP4=O7H1)6oU21*4<gqQeA1Ao\FVSokR]"`'rQ)Np;q>`^t'4USY44%Xh?Ul-IOl]KGaL3+r%#::c2\"(oO]'St_NfYcI$0&[&iZ]sl8R!iEU1.gRRWJ?+YGd;\n(*7+_P`YfABT]Di]8jL3H5M]G'9@[&?%3EE\u7GIMAC"0I5fKWi^>I2Qp6-?RA1o,'3_@q&CDBRK2Q"b+p)1>BHTRR\L&99@+[9F)E'74BF/tMjO5ugM4&<*6(OJ'])lt)5^%NdX$LIFm<_j5EI(=_2J[im*\[;`O4,LhV_KBFP)f$%WW2pp[=o")q*N0g8=#VDM\,DQbBZ&.mJm`N*[S7fQgs[)6rbTS0L0;:g]h%UosL<)O/C&\"c$./Z^&.iC1^W/B'e3daA+>rtO1EPI\SNdXq2>KV%8M_6Q@Bc(.m7o9]pi[\Ak=891!A6m"eH]X!P\(e/:lHPe9;%E"-/WPXEaJ4ADeYbJ_D/W_m=::Joi:Hp^1Hit`r8^*7ItMBMJMSmn>\`MkoG;)7YUEpII;:4ogOq-\n\:^er;&CE@XCnRbB.IURI%\ODC#:LU9Q;A<9\5*r0=ll!MO=I(;86K9u.IF0g%Gkk9)T+!X[jY@+25dYJtcph7[ltEmL."HQ;F`.jDgn[#f[7VQF\4_hbO]t3]%#aBi$&1sKj,?d3h7C7T><rSsbZu@N:=Z[?!/_k#4'bP1G$[:0!`ARpZP4SY%o!2^0B]8Ajl5^A]Os2W2(/JB?/[5DHBHcS9.GP&4%Al]Rq(=r[QnJ#5p@Y3"--X<A6luUepDLc=C<>sZ04ce+kU))McMG.cm"LnVE+\P.#i0GeS;o9^gDW/8QYMjZ_(*9T8c?X@:99KTp%BqL3.EQLfW(XD%5PE;D)i!_HM`9\iQB.PJ5M3`B`U\BrU\+$4I'#rnH/_h.)dt'.]DW1#81>Lj(/Y9h3><GX-D\nDF9Rl?D/YJ4L%CCb;kp0%E"WQ(HHCK;p5q*I(HQZ\5!r$.oTQQ6;-U,QG[OM).c_U;HKP$USo[nKol$'Yh3VqFjj3J2A2VKT7tYsGqiX^=B6E@f8O%.m]5:8^UWg$[:_km^&f?9H_j5n?su=LKk(.nJ!&4P+iQ15C\u'\-j]a$7u:&@I9i&4:QLC5uLu)gtFEDT7,*OY#V]@?_rrrD=,Ak%l&H*Cg;4it(ftM*R4ZYASoL1T]t,nQ43#B7;-TG%>J11D:,eFu\62,Rl#'.8ps(^QDK)F4T#-iVGT'eTis0%/F51RE[5j?qdNc'*%3M6pG.nsjjYDb":osHfm]J;\=C300-.bSdp+%oYC;Wf.UiQ2I';s,5`oh0g;i_=fCk_)mC[5m%,cD4rdD%?;h$PF@cCNK:I!gQKd%[5jmVSO!ps3IDQ2+kgZ*dN$J$(PLPU1cP/m70]nOLO8t=CW_n(J?c3g,[HkVf7TH*?!T2&$RdUl6tm,=JuDI?PihIp@j0<_!:qC>%RjKUG?"jcsFH[#<RKLr=]cp`r%OaqLI;2Dr4G>H5nMI[2a,e0)k4ncIdN$:B>FORhC[,Nug:5QN\%o.'-OP^K/)+.TI,jRH6a3CI%/??0lG*j]&!=^Y_SLS#aBauP-.?cC/iT?-"T#$cU\1R&?F1@@.m)SQeF7:Ars,APR@?&bBQsl^G-`T&O=5&o$7)c+l8UF&KopR;R%=`+:[+9VRF>&fNWCtHcill/N^qFVJm_cMUB_^=4rd6aHp`C:QARlF9pU*U=&ZY=!'-<cu`'&rF*2c4"?PYNP5^HG";Ro)[!YV[s>%KZhJJN,^jD+rKFuZ3j;TYBfBi<@UXb24E%,J-F=hYfgb9`9iJK&QCIjSb`O*0kuU[74f[Yf]"A0%glO>9h2/_<Q$5XU!WIkQ#:Ka%>u%WAq^]LVZ6jB*g0AAlPko]u4(T2uedqfT[2FM?`,htRW1af\LSA[C</GHI'dB)(Q#+ePMF*\IZ"9*bB#^r2'u#[&)VSS=1kgnA%pIg:-2);LlHpo>5>I7\!='$Z3__Mr/YD(9,)(n(>cij`:KkMr=c]q=@UhjbBnmHR^ZOE_\'3Artk6)eAA0`3KNbT+>gN)<IJ?bad%/l!d`,kbM("YQRW3=qp`&AoG;/Cb1Gr@6c&P)aWqkC_V$.aMH@J:OOg=>l2Z#'p,;3btq2q/l0/KlK;6/$K9_gp:+,S;!;.a@*F?%+#l<],Qm@B<Z+N5Uo+noUFmoChZ'hNQL].!gnm3)')A86_/o1QdMIcd7U,3DVrX@V3/@X5"Qr<sKIPfFi]_Qk'Y5TqL1P.:7jeTh%TYR;gc:a@r8B@U%EK]]Yic^*H:L]AfY5"Q&3U:n$?([q<0WU_j4@W3]g2!+J*"Y+]]r$LRl;VuS$Z@ABdY9$iY%g%--nqP1*=UZ*%F@]EL@7Xa)BLH$J,r3q@2l?ce><&g*Q>#rfR%Q<tClhT=(-uep+sfdG`]8Nd,gLs_o1?Hc4Yo(LU?+mddG\Bd8gKKUDF"rW)CRJ]%25Xh&s/,^u0`ko;_r[j(#30EC2?CuH",NQ!Q6N_EQGtSi*JkRQ4.h`;k(cO3iM2b:-+ds*b(G%:LqE.#,fP5$ZH4U,#cc0qbA"%\%%V0Q2CT)fR&MUF/AtQ_u^bt'SKt9qn!,]\i@O0@">Fi=2?9(HW_4EDU5-I0PfqOfr=tBi6"oAJ/Ibd4WpQ]7r"V(Zhl;<S(WjSJ&%H()rB8GAK@[a2>jOR^#a\H9UCr:A!n>3<@9"_Q!1K?G+$I7U&;-c?*UJ%(pM&@uG77J9&;>&j.FlnkYO,_ma)-'MV=@o/CUG-5^o%7;P(u*DPUih]Ei+!15O6nlc@tR3P9gbNeAf8Na4nku`2GF^r;W\uZ_*LIS_`OPeO8d2IhQZWr>4-u+#XW\<ZA8P,DA%QP"Xq-m&p%'_8CG=7DWPY[sT$`YP3COk9_9594+^l^;4?Bg#C36*=Q1?e,T'F_P@F.BP'K8W<iXS]I9Ib'H?PK*tu(3K+YR=qb96S@''1p$jk^%Q0h,TUtGLQZ<kik0=-tL>36Xg(leqg8-%je.X(L]_pa('3Z.0`UYf.HM$b^%:>Xk;=WFiH54G2AhU<Se>#)Q+Y!h<nH9m0/jOC?J%PkBVn_cq4cDr-_U&"50;"\fBRCB/4^Z<m)`ACSep_5KOUbN%AiP\>sO,#V`g@sqAWU/lKGF>^b)W2jB@M;>_2hRkR%_75q?:afGV%X6K9k^8BN2$ra6,.Ob7pYNb^:[\ai\mK>/\3s$fUQacmg>`K#4(RE#2#`)'`*(6"4]7L]768kkZX.W(2nTDopUHi&3$cuFn-2Z2+%",As3pQN.N?J].sp,GptlY5@9poVjlU#kPnKd.k.csk&Rc5sED)b73s8Q$J#24$/'7"Y^.dN8Q#D>FYM"gare2gqi3LIsCCEuW/c%7#Mrr-<rlLRX_fS[QSRMR_3NsX#stm,tF@+P*g)ee`hT'aroaK&1PkT;DjkN9;rD+i+K\7qkdEj8IU4W'2g$p/QoL`[qt`'DEH[5%hGp,0`Ae76'Li+-\Q!F!.'d-\1QM)Ge;$aFCCIYN+sXD[o`g)mXg)o,+oub)1pt%lg(2-Q6i#tGWli'>V\;`-8s.<&3QG4>g9bV$%X5bgt_!7j%k"&]Q&oC%T8(t&;V37o\?rIr"QAZBQMcUO0Wat;V(`*lgoR?fXY[^M#Z0,nB(COLK\%QM]Qs<j1PFW_;iLmZV^E$dT%e8XGB_^IVN3Zp*7#Q!ZC!L$KjM6*-G,KcJ9Kt]1fJuU0^dT9]$T_O:(F:.!e!k]ne<)F^d-(g:UC>)%b=a!CG7d291M[[%h8F.Ki%"#!cI6#INW2nR2)EKL5a72;c%9en!G"j"J6eXss,AQ#G@?/X5shg,iqGu:E6M@Y3-'Q)gF#k8-2]eH/O[PXPl3oaLs,+fc*0P:dC%ac58n4LW*PMq[S<0&0F.gZ,Q<TBEN2DG8]Y[BNljbYhSZb9&!Noi^@L4F2K.fnNu^Z@bhD%A-1rG1nQEl*IP@Lbl6\3h,Ul(`Fd;%)RssZet;_fO#VL?>3J#pkfbf`89GF#g?CrJ'Y'c/*V59meJYn5/PD;5ZY7W%i5(?:PUoPg\ee.@3Lc]t2*lDr]38Q@k*MPS3m5Ip%kB1[oR*KgA,lh!2Os,H3+:<S)8ENB194*Le[Fe0?S.,D?%NB2@=$RGBLh2>['%up'()l-XL*j/Ho[6m9DKK*6-CXgVH8A^OLOI;^%4]qqZ'W,l6\Io%h;+@kW])rC_`I&"X7a'Bt#*g>4A=^8c33bi;W<+K-!k!\@8&qlZE*/7]9%-OK+%oOC[;Oj`^gTZdE'(b(4J=Yk%8lX_&Hlo6OAm,QPUJFUHJ-C^R$4dVf1cCUc:=Li1->521Q)m64OuW?)<G4Ma$X@NLYoe5!&l%XsYdS+:Bb_OFEVlJA"=#nMIq+OB%:salm,KXE4+G-;NLP\0*pK:0_3^e=lefGb7$>mp9C_ue3#pa]FeTH@eSAL#3TTP?^s7`'%J2W%qAJN?_@)G5s!^"A;*&\3>FY6#C%:32&^SI.9t'K41aG\e4X7Fm#OC`'KHGpH]T/CQ:[i]:I:0#=@Ob>-/1<8+Li/A3Q%2_7H4TmPdr4OT_*9NGC6'oLBddiJWA2:p_q%/n"rQN@nH;%L&M8JYLi35T^-bFLPcuZ*ps#Bi+t0-+)j*ml=I9RM9GN.D"g7;\[<WBQELO,Uhk%lGRPqqeHM,;Fg?m,GG(lLr>CI%:P6RsBl>cN?p=./$rbMAE:Pb.`_c7Ar<e0:1ApDoVD[agbqF(3A%h279H#bHY,=C>P;PuE+`M!A@[W6'hZ$p*.n]buE-7DX)8ct#%!4PGiCeRP@0EtZGiu(pm\l#i8o?8Qh5]at0i2II0`Bt7@lK&$@)VIm8bEAdm''X+NI=2*V7&'!mDc?h)^5;GqAQ*m2@1i`*B3:Cu%G6L\f@pe/q]$%YBCmdh91WDh&Q5#&Tg(3Koaqe)4d3*,ITH]l85)j667XG`l!Cc]'o9#Sn$?W12jI)J`7)d)P85]*IBHjlUob>?6%Z?GS";abGa;RErm=r[MR>5\2Pf)p`l-knC*$@ICRX6\"qTg0ZlW28Il#gl8ofRoo^'i,FX9-Q*a$ULOMX.6@h(#E-R:p=0W;TtK"%5%?\aKX.Qs,c7@h1f!?Zl4+,mFYls>cu:>He'Tk^$:RPhQE>u-@!Zn6Acjh#acf;?E1cQA$>&kf.=&*@BZaA/9N\<8&^/$t':pYe%=*JH=qaP`Kf]O7t0<?FfTXp*Q:+Kn,&GCJpO-Bc96?>,T;VuPX(^Z)(LaSnWOEbM('m_]2>h`UYn,uJTM5EPifMJbu^7lpVm#L"*%#O+KV?Q-mfY;+FHkS;RuE34IIBj.(;p!RG$jpA#p1ajS^F_@ttS'VsR*h.>WW/@MmH%,W>o+fWHOOH"g5k2MN&`K-b<;No\e.NCR%lA=p4Tnn,7-U$XGa\sJ/.n=(QgQ09j%R2&M`B75o2KaCi)r7Vk6=&4iFumZ8M:5[%2<9G%1`b=L2F$*c-gk&.BP-fjEF;KP$\&;D%VJQuAnPG$01dL?+BbMnZaZDiSja1/Gm:7>ddgEl>==g5<#n";o&aF7I!+Z^6ff3VEjgZ4gl!]sRiJ..008((]-*//oeq$@K1R0m?%3f5r$[4rM%(\&ck17*7B`1(f'VM8/;2EJo>E&G'%@b4:g`s@="A09?R0<Yp-)]1!XMEVWFBU!*o"/emZA\m(%70/#U2.'#'pa*cd%/rFePd*rMS%'3Md?@-hIVl^DY,#t\FI,Mab@O^J>D4t8a,G<k=%n<,dRt)\QK@`E"c3MkjK]d">:.@LrcSZ!/hf%8G$=_<U1Y@i,%P@5DMlKuG8))hYbg-'\L*0;=OK*RCOT`aE1TIZr@lU7l]D]Eh9FULdF?aSE7p`V*s`YqmtJJ/`g/k+W(o/'MG5b\%"j3TM*l#cY@%:rKK9dWR3l!FYF7!6Q1q+s[A*?7s&C=;,h6RA0a;Z.*t$3h!`=NU?K%BaW[J,=gY'>`*;q)Q!Ua,/HX,@\;aU39DCW'VKW&/&gq]%$pUG$`H6Ab^/gY]I2:=1LHnJbnZ1_`KW2A*1eL^h11!56dfP6oJ>/i?'&:E8OeL==[4(P;'OV''kkJ0KS'"cL/&2WfBeNl$6*rlZ%L$8<Nk:/DfYt@hRe2_"a79Tp1&hF_5OQ:Xa!gWoVaaroMAB3(_Qun8)e=0(BZZ*Tc4(5Su<Y)=rmK<kVeDo(?EsB"Pl]kV?Uko//%CZn/?]3olS33!W+\\=,O^?0.h0nDK_?@UVJX_dklCe9mc.O'=d6jN7*P7;<@V?B=G?.C!k.SEhNkJu*G.k2D?E:Z\Ml-V2.rSm,^%`frr2jd<J`1a3*HFYob)*WK[1YF6Jfkp-E5IGZ30hj!XB!Q&$3V)SHA-=\*!Ju5%.'Pq@sU+')/-YBpt:K%4)#Z=HIefIUI;bNOQ%JH_N;<godl,p3P*5bP=dNe$9Pi:<I-2ZN=QHn2gY789TSl,8dp;Wg!91>u(TNU$KHJW^<.KEs+BUp9q90>2<OYm1dP+"'`Kgr(KH%Alk`nY,XsL.p1,ka39RaH<e&(U=Bjq/*1FU/eluY:is6f`bfr0MCG0\;fTGOYeCU):-+5<mm?up`-k7qj!^E?ghfs,"$80bAr/I/%4'mSs;68_(b^()Qo1m29,1?gTVJP<B?0Y5ld,E+iK7;F_!Deh.coTM*dR6NAK,o_qCbn[T)NF-C;"5[DP'hGPC]eY511BMtH5(R"%<f3U(A%AR,INeA2P<&\t_Q<nS/:^gs?D4sn&NMK&*'E7d(d>K)c#Fjs.LK".M`/@PPrY89=c33o:$@+`=tfNUa*_pLQB2]r?Bm9=%@VKLhZXuVi2UQ.DOr^2l^^j1rP'nYfUc,P6JlXi0+TbY7`fVS39R2LBPMhJ,IuU-N9q<gb73q;9'ah,]rHhS=BdIkrmHXjrH>+[o%`4Ik?Cdf7(F8r-!'\Uk3a*iXD=Irup:eiDX-*k`2'FGJu-ZCTckWZaO6G-fQ6M@(-g_Z\I/Y9ae5BAQ5F?T<kq`Q9*fo>,#q?"%\%7["._QIBTs]P82(UOPoammLe,1d)k3iOE,`ekZ'D'r+Aq/6-gS)3CbRVU8]H,77ItQ*?H&OVMDea@iiPH=E;NiBk;f29%-e50A+5%Lp6%bN%.="$D#-]$<`K.J^NMkQ:7G;0NGK^J^8m:'M"Io1n[b//\!<9d3ODse*Pt%BKCRK,t?>)K$c2.*tr(>n'PA`%4$j5f0*bN%5d86,o'9d7p3@*_A\"V.dRiI]0bS&D]@k-.)kHp"4Ma2;67`asFVK\_8^Nh^FsD!I@V4*#&mE<f0<phD?L!mES[cQU>`(O1^j;?_%I@N>A\eRsP9,!;He6CT3l,`Xdd.i&LraSW>dc1bBXgP]D=JKksT2Wq[enR$j=rgk]-&944_9Hkcb(+[)*^gR)27B#CI#^gmX@C\2%;fUUJ@gI"Pj->H`(hb[mC2u-2[cWion+[lan`gMl,)"9rUP+@T'6CrmX4rIJmNN%65Z(/;3;^2G(l]\':lns6*(!b[o&=T#-e"q*%B3:DuSn07J7+R7<![fB-^trEkHsu#Drq3MY<=Hc>U+qBmA6(]r1EY^[Wr]F\0BK?,IiIVf@Sn%tXK,;8,JU/'m=\WVjn3qm:rjO;%e$=p4Q1T'dpC%=O<f&$MK_GlnFh_tV9dj1C+94?(G@Do]gh<UL3N$t#ellTPWH6U_W%:!8P=Fo/&]$g`3_+k>C5"W:NkCm4B:OL6%--Q[QJEmfF5Xg@k)Oa>)$GkEN7fJT.'kurIo5Rl.:6?r(m@)3>Yr'RUZU;]#M/+jIBT9I$5W1s#nkR$(>2;;sV+F0($q6DjgqH;+%7#BA6]RLRt9POclg<%\X;3[n*l:kC7%!'r*4;4/p\WsX11Zr<@,U1mkI)r=M's(9lA57pk:W\7&=OWrR4k@KErtA^<bBbR5BXOA0%qBC+\AU-b8Y[IkZ(h9cD/1t?]X3qZ:%PFWWV).3g[*+N>!F3[0nch$:Uh.qj4:$T+ZL)<J]^k2<NX/3e..;]AjL+1WS:'!Mn$FuO%OXGZA>PT3(7<LrX-=)?H>m[GXa6tj.1tG*O+t6$g(MRF,Mr,du\)Hlc*Mk>a4!Z]n['GQ(5o4\o@h5$TW2Gm61ZlA!>BM3YO"2?+%=lh'o.kL;KB,)+c>XL[e7DDjZ7-MNL\'X2M"Od!p#)5pZ&eGT5,dG(Z:P`FjL!4]G/_O%f)?9HIe$XdGQ5-g=`-_h8UM#8*`lGGo%<MoF"D+nuU7*c[T+S9N83JuU&Ta'APr/_oh#4A2/6U?SPmn/9.&pX(qdk7Mr9^rau*#'DP]DasnV)rR%;__&hM1jaF?9>950aUi?%JK+;D"d:AbF(ZBYM:4sZ\rYg]_ng`<D,gpf=R_m66Cm::ci@",^u_(tMeA=^.E:tt*?><`QW0%\USa)fD,,U)$71QgU78m,f9e2n%<1-M:RjM&WGdrJU,;h,IQMKOQ\lDrLi!kqZ`m&E7_ZU=3b2Va!)AT'mFP"'pBf-\.Mr7EB)Ubn=Pf4SG*NA'qqii&[Kre:OQp0_e%q81`Rb,@h#RAr;[Tos+s:h6DK8n/L%BZ<EgRdg'uCo)s'`:rJa")';q$"=lP5K7OeZ,ZicaNtoMW4E-NbR>EWJ:4S?$?^5iGX,?/%]LZ>lV1k)KUGK#,#2RbmN^<:lDG$=9TI`1t3)R=aY>SqPrYT]$o-7,X>>^!4WQSKj=NjcmT@m;'W]4gm;F6&@!#=5a$r@,?##SE(%J<K$J;nu^?*U7l1E\AdS2c+"VG.)o3FkMj:fTaI,Y!Z2HA;.M6&JoPf`\W5e!'5Pn[O+%#,M$l/1D"XbL5$t8:Ra6IpnoC7,@sa4%S1.;^>p@?fjX'r6[oO5o[Z%\n(]6"3Ym*,!V4l8aA[,p84tN@^n.V?2r7CQS?`ugp(9aK&mB1^[GGh/o`e4jl;0"Fr`"nYgM2u@\%qFC+3"VqP3@2+(Y-Taln85*Z`pRs+$X]S&[ok/I+s+7"WD(6Y9'ZD.>^4<.ie2Xh.Ig<@+oEE??.uR[&H&5-o))\Ghck?EC''6EQ%3.@pNPQh]JYT'B0<rr(Ie*<T><<MS[h)eR]-qZJ.82#_/-#L!&^QtZ%dY'(F@Vf0i?T,K*4=G6L`^,_]\9JbjJ6$4oJrUJN&=r=V%-"!8r%%N3eF,SC3ai4-$DFCW\Nqo[7E.!^%-pXP*)'tV(:Q:-s,+jgb4Ru4-Usq=ciB<0:8rBkrQ686HK;+NgmQcnI`>%#t:ujE@%/sX(5N[AH/%k*[-:9/tcb#G+T1G2)&TgI**JQ^EC`*R*bEP3c&N]mZBeA^6q/YN0:n`0FR]5)BLn9=/rL<R*s8ic7U<dR)lAhQH&%pI\"JD;,b!@BRbW1aQAGl7",W&V.Y"76;/0?brf,BM]?p_Tuf[AhE^<MAYD;C:k7d\.<saA\)rSO)?^M!G%j6c?,(igg.W`:s,G/%`Z=aY$K9%&eu=qA1s)#9\`6^gPr0n&*<-EVCL&M&R;Q?%TKicX=Om:a$(=3T1^?GubDef]mNGtPO9QHpU&mo-SkgY"&?LM!;;fT4%>r@gTF51'87RQ93#oK/C;0=i4h&!u^f4=T,Y=$(G1`Vos!;E!=T]KoF-22JP$GAaSR>YHSU+mt:a`jjPdqcBZGR'L8!fWtYTcMeN%^&S7WgS#5\R9]!!Et]^1Eh/2@f#XX5!?0V@,#:>'<,7N)6baJ8R[t$c[;Ad$VR_d-I=U+`FKlf[f`F[AR`_:(/=UP@.,.ASrB[,L%->DpfO"Ye=.S:n;4:tds"Gd=%CC>Ci+=L3s$D4qn!q48(SW-W#!hB\+5[c:f.hI-$b/t>2W6Z5_I=Eh7K3P:Nm=^V#rc:o:H6g#j%<Al,gB">#Ca)mF2'QJ4#V95&ZA(<HV#[>EKnF@9fpFI_W@,jDXl#_S"o5Y-\./KZ+S,fAu".ES&8e#5Xjt)[m_k<\HM+.\slA(dP%%S<;<<q.f)TeTBBn22VY(8A'U6/Ir*7_Yg2[tF%'(`"N!0aK0A$jl5u#L-J!O5:qbcBU6*C!PoKWXRf8e*.$4'LL>(Kf8a`Dlr;3%#=HDO;`?4LLF8<+M6!&K64-0gMBFS6"bd;<3Jt>lW^h]:fjiPW5TP^Ue2iB']Tm1789S8FbV(s!E"MAnXq<oXCq`po]KoC"[48\s%Dci;LDCgV"G\H*fU!AHMq@\Z4''p^>AS^g+;OGX2UEAOIPM:h?Cjb#1$k1.RAZnPSpL4KBYS/GHMKbQDq3E5-<2DY?=dliFb92n$%r_;TG/)0"RBVkC;'&FO\WLU;D8#f=hAZ_LchN>?h'Pl`:'8=!%YL;h@hNQFaUdeRglau@0KaocrO>+8^;#hUi`.JPV'TGGZnOR3:%+WP3r7Y9fuHL'%bW33Leo>0^J/lMuB`LN4?'Mr0B3B[[eF1a/^'B?02Q%TjKJeIVtZ,R(h!Z0%;popN\Y@+Jk*il4*FNi]oC!7U)%L*heclBgpP=Ja03"`0C$a9AVU-._o>\=S8OnJ]sqd&1Qb'tcSr4_X<4/>gL2le;<F":^4u"_*i(@c^qLe3"c-!u8pf/Iu5]Bu;r7%V;YSsV->GjjRUK(.8g4UC&0W]'I>2b2q9r:%#Unna=gA#?=OiLW7(KU2@3B^X9Fht.cLYJeXc#Ri)mU44KKISQNrH'BG7PuATb(F%d$Juj+iHiVV@J6ODh!_0:iUaR[QAV8&M%B-%hu$gPhE%(PrZ_h5)$]\"FZol;]:!aOkY0)pA!i!_n]>:=@:aHNs!O;`ShdJn!&Bi%'))peU(_6SN%9G7/;r;`d.&+hd\\KgR075:D$,rOU(?G:6TrIq)'UU<ALnEfo_M]@K9#R>-tZTs=lgol&d_IA=r+Nl'eU7l;J<RW%$5C)/HTm)g1L8NO^Y%R"b.<ujEN6Z+U$*-NGbU-"j3j5/\?'QVcd=%?gPajD8jq+D,9:MdS$l@*pIU($i?CWKgb_Y^bfqq,h)Pj9%,nFC(!)O7NGf6_>,Ss$!e7d#<DOV9Kg:rDZf1O0pejB431!HNQ5Ui/EFQgTR'JguYPfeLeJe?1jHHFHnW!UMGCO$(8LS^ff1@Kh'%RQ+!?HJJd8"emH""OZfj<[Q=qdZdTE2"/eT6`'rgU4Q!TTFP;q\-A9C&6B]I'Ec-_5/!b5k!TZ`QZNAkp&;8/#O)lO\^^"3`9oL<%r'%:-Ja0X/<LV4`:7n2181e/<dRm&`aaQZb\"O7hFJld#KN+lj`MsX`cg1YS?=,Nim`e(KVUWofoZ'NtcCleRF][]U)p515No)pe%'('e;\H<1@1?7=nU+M">><q/qF.H)*K5W)&dG"=o\mZj4$j5hP(oREZbX<X11qF>FVk<V1>8+(-'V0DQq]qK%aYVa/JOcFl]2@!=%$Q4G8ZAeUp^D,4^fFutZ!^@tp&JXn;lrh8,d<i4,:afXSF_*sYH9e]^W7Y$TR^a!+beD+eY^co)Hb=G4/>,9i`>A9G;W9c_XO=#a%pO:+/h2/"jXjX&E&<eJA?0QrXk.Q5)4/Z<o(sk,)oRIo0)r#sB+\SZ[SW8:Idcu6VK?U6\o,dA6EWmAhnCU#RSVCE&j!(0O@2lr2%=4r#0mN3>n:?AMNCfV;XY(1B=ac%#6MZ5#mjX?kAkp+C"7#;<:bj]O#1_:-2lE\jD2OhkB)Al+]H&Lah\2^!)=*]nc>UN_@5q7SA%7@V:dJfpDjiLEWLTKS3R]qL3-%4H>r$eeiG,..aTJ3qd`a#U1m,sF1sU_)9dD,u/UjSn)BnW0M:g_g(L7S(PCaJF3>LS;F0cdK&m%QI>SK-9'i5Wsn`-n%SUdhb&1@`@&;=(&N"skDX^GL2a#PP>U!:jbR'.-kJG+Pm7t?K5_#^dE&ITTPt7cL(A'-;an_Fk$0@[Bs`ta%nCRm<JNN<'rkhXX='4Y!_$<H9(0T)dj&HE@!Rm-#5/I7=:!"FJ6o>5uE(C:(hs"GXTJ/>.d*P)tQVjG4ck`Ji(edci%@&'oP2aD=%Xb#@(f=/bLo98*!'>;>E($;#XYS0T(+cqOL0bjMt.'3VQ-_:rm(X0fgaK?s\c!Y9M.(b\N6(TT?_P(jAE1HS8_lBNH;%)YrDe6d]%_Fp2-Kp>H[:+P?tGKN+])cf@]R$*f,hKQg2.s]h8TjJ5b:APtCUX0o5,(69raoeM<9n+-W`!3/<1e.Wj!Zg(5;T8I0(T,b@%QJ#U%",oX_+^+II)@[9D=$##aN+43_f)nGfbO7^D)@I/%IhfmRTFm(R^elDRBADd&:P,=imcaY=Vh&b3/Km=kfYk(efZseg[5mdu=7S]T%nXd(knPu[HX\Zf4E3&@'%4<UM@r_(*n;Wsn-@DT.1ic='WRFQUGdN\3]O%?&9;@k]C5aKKd&7BhKn7G`SK()p?^)3[CDAn4%D!g?%QcForV^]#0^;h?+e\l8MRSZ#sPc#s=n43gM@5hY([TSM;82+_u[?27[1`B.+K!'SOq:],B![7u8%LHeV/6,fL&X[eRf69r#2PA0s%(MP.+BNYsI5r8k3MZS`6Xb.W_PfcJOP@eO'VJHtef>"<42l"=-o):018pW:]5CG%eX"`)'J4?$^kint;Kcq9Dg?Zf7Te=]$]p%A@%/AG_AKV%EI:d_B%"r+JV9.3&Hai+E:e8;!):(ra>`M2:ULq77>'RJ)6Z"-FjUY'2oU7)trViYGg?AfO76E(Z1cqP0.a\q$\!h*:7%I8J6F'^'XhJ868n,`\O<o''k'*?<jE)@a$NkEmh=9^7WdFK-6oF27Ui\7MXlSTADFfh\HI8S.k&MA*WsZ-7N^%ur2+NMR8C8mB%8%4JGM&V4i`YMJD_JBJB0cFqS4).jq\]rK9J*i',!2+13_-N$9KDE\80g=1ckiOlW3FJ<"uiE(Z\<Y,k5%#BN*T/<E>0]eZ?#o3=cs%UQRN25oN:Y:O;FB"i>mj4PHp2V3iW@_9t_'h5M>FrL4_3c?ZR^A?d_^JEq$<oi=t(7#t_p<6(][@o?MX&/ps$E"jbeda>EKO5rc^%*.[1^SOL\)[_)mRfAi<lDVm#$Tjnu^GVrW=3kA#QMnILsaW<f4<8H\O1q=!Hine@J'd4]R>(1Rg;NPmokZ#2%E$s>O%G$tBC(QA>%^rRk&ZGZb>PkFY)bjBoaP8?,(%-iit5k7fLDbtXiMMX9W\h+<Eb:6ph'WOimD.1P9N2=t)BmFK.LgR!*#-^^_p7*MOFNcPT7aheF%EbB]%+9"]HWcO@\I)D8kATbMIW"p4?Vd$`?8+3if(\@l7.4k`<QF`.1^F@Wka>gu6X?dKZ`_oo<?jfb'`@B5i<L0ZclW^_W*,;/F%DUTmc`Kk+<R']INKVRNG?I_&=C<Y3/d=bX]on7E$pg1l4&A(d'aNQIe@&HV8A^Dj\(+2l<1"lY,/-5GF;(#MWi$fSBN#`B)P/:jc%@$l+YX3h?f^qJ[Q0,gDRhIBUPlAV!AiX;cf9FiTBKptltW@Q>Ket*?XRRS5XTMUoi=@S-u@<p>IF)>oI<L2r$oJf>f6NWq-f@P'*%9%[+)I<CI#UY+c.@9hj2;`'dR-Z^WW9>LNLRu=nbH_6Wq2>rP+"efWq@7F.1q[XC@PtC%n$HFE*8q"KCEH0qH>fo^_=[R`79nm]n%^B"[I)$1.^YCL\R[Ys(9M!QcC8lYuPFjDiAod0%\%GW:cQ@t2MdO/&GQ?e&$"UG2Q$sq;C;)N#lJ-sc&D$sU8<1n43XWTWEF[pb\%/;n6`TQ/HJTL+ipU)BC@T\GM'+P,[6>X4oom#/iT6XNc*J'Ro]\)HL7q&<=H8N)^FWTkU\oilDN5sa8;"&*.E(kSJ^m0c'GY3X'_%H_Q9md/m)[o&Q(M?8\&%FgZ%nS_O!m'SYi2T6O.!<iPj:N^`>0d$4++0d8-;6)?"%`>PZLT\X(>RjNr>o"5[p=SKjuVNc<Z5D7a6%M+UY/-JaMEeu#jAB5*5i08k<UAadoM/rYG(:'.%Bq^0-3S<-D&s4iW:A:ae:SQBXI@FG9n860qk2Fq[>F=q9->EY*C,Rg59BWLcr%9(5cR;[GYM4.=Q)a`]-_3"Uh:aO9?8Q,&tV*@"8.^>.1"Z=DZ3r\*sol&&H0&qn<2dQ\3`ibbqn8\sdtq'S6hpI%\dR.KKb.@Hms%.d\(!@?Vl*J[YfGFRHe-7r7%cL/OHX1i&fbP?8p.%LV(R&K"_S*@/?ARjb-Bd;MDQ,o1k?>k'_iGI&`sZk?)HoX,&=?DUEbeS$F6%]^=Ua!Y)JLmkETeW$n<]_D`RilFn+GfBJTritm(tKg8t`01p-LB9kh,(f;Z`3YUYd5o.K$T=V$2l_1o=,>]ZS8^)acP<I;5!KKTI%']_e'h;Hor"'2V*)KM%X6:j`2I*K!Nm%L:W&M)$tCGGWrYS7ZcQ;qZNL1W))1C-]Y1+$*<Bd+Dqi!lE/;ZCQ+PBq_;?b+4tO83f1%GoqHjntZ&@@StXWD@)3=g0:!cofcgor6+JLQ8<(Z!9W?<WMXXj/=/oiK:%p(Qc</H:AL0T/R2q7"i12>eBB]R,t4CsJof9E:FALJ%e!u\-n**"%.,;eY$(;M"WDiP_QroS/[Rh9o<SaU2m:BN<:8u<n:`c-0$:`/bG(<k=K\oCg^<@qdI#;*6mMm/$RP.-]j\8PkO&jHT%lJNf'0s`p82;8Yo$sA%un`W`QU=4fH8IC6PZ8;sl'J4>CbFmSCj`(0`<p\&)jJEV8Ak"P4m`g0afj%\`$?as]h_^WCVW1\&>">p>%-%r;l/+KLZ*6EZ:BQ#4o>feubHG=dOiKB-h4iMI!;'a^H7AD/[9*gNqBkcR"5E*6XR7)id=,Oje2S'I`e'IFlk,c4J4gE&C>8d#Q%[V')e+M4h6U'tcL?9>NR/cbK(#1\rl3d[s"ne>EbGoE_>YpcWOVpi7pXh0ms[!,`B7<)r?H8DqgD*%Y1EEgF\bZ?d-VL%jhNk*Qq%l@ZT<[II^>,(?GtU82II)bYQ>-kmYl.tP)0C`Q']XgALhVX26\#,'<p:JjA80f8^>C(%8\k%OgYdi6Yo,7h*F`Qn]'YRVY!N^2Po%i3_Ys;EG4"kgmaObS+c.Bk#5u<<o@M;_TeQrFe!j*o3>BF)@9&)aG<6R5iJRMT#@fBTrqX;0XOqF%OKJjbT7:b>l;-QL-p)Icm[c%1tA.Y$cu[hB]:Yp2ksOpY2iZQ"6_\WHdjW#ptiDa0icZW03_TSkR4/HQ!Bs>#msUT[_J-$.<Y;X*/SW/q=Kajn9h<klEk9)b=t:O%W",EWX"q8JC=')ah!,`6e3:8sEM'6Db/Bd4"3c`&PF*[A''2!cN`ik\93^2;iL[n>S#<NLc]40oadiECf&fMZ@7G_ln("b=CbDVZ%CkcNUma+E4!TuhM;+#$_-&ifEH;M_t"KkThi3"r*]K+V%C'^?3Qenl_e.@-:aJAO<N>_kK'2'6$O;:sHW.DCB?3SrZ!=co0N>gdm%M+.rJZTWqXUBZZmEMJ98<P"bddAR(.dLLeEe.C!CBORY?XM_>5%0;9?>k5roC4K!VdCMdV!?T(?7Ld!Go!+$@%4N4MVuc?2Q_uK3%jBHY0UBVe0_F>!%FY0eOGE!N.GF@0&Y#,;)^qrPM]S[(926\V_C"0p2,s'>`4q0'-m;u@;CXXu[\S]eLb.2B<i:i7Ke)9tmD:=U#%`O8Knf*/TWK@_HY9g_N#fes:GZe75G?9?k!%8jAWg,-`$&oAPk]$&ea9RiS^j2j1gpr^SVD4:`"j4Z>?6=,9)\hnqF]$7:U;dC<W%2Do.!V1BLGqVEd<XlWo28='N3>?02%h+b&e!k,D_qOXG)Zrrm^dL`p&je=@:f^+O.1cS?-FD8OVaQ.KTY"JjFC3c8Z/e&AlAR-3>%Za`X1.!-`XG%kn0M(T6t-IJY5nKue_+c]Pbe9,J]1DUlmdA;Ei-<6Q$dL[U);81'k;T7':%8dUg<cJ!P+A;"bW!%ebc8Z`LK9N3:%U.`BI1hu!SK62.NQBm/4EL2EqnL&>?-Fu&'_-E^I!FWB:mCP2?&#_C][Rl)t8G$T",`*9Gr\^Q?!siR-MBJJWd,9kA7#(un9XDto%hk;36D+NP?L$?qaMCDA#eYs#f4PD)%)H[4tm*NP:S;,m^mZ-6,gS"W^b;qKLJY=iq[RERCd)l6[A%fXRa4m:>)R--)kE'B)i+QAR%#&e>4((Hp=etN26@<%3[^hm,3DDrn]=PBLcd3MmPK[+a/[4N:^Z+*4)k$2S\e$Wjsc:P(`[:i*Mhm@'9'T!S7Non\(%5;%R[:jM9%XtKf(PjRYVb!FDn-dMEV@(UepM[!"F*L39gpLo*E^:6Z8.(&=&B@1Gn51--VDpa^t.Da>J8WO'GOm(2SG`$3/O;NggDigEKD3Ehf%@f%^$c?bBAO<+j[7K*+c<;9U@g%)e[''f:,V0qN68N(9"j%3R%WcTnK_nR%9Sb,",9cE#b1J1)uC=;$R&ks8aN@WoL,B.(T"rt!&%rGGdFJ4@T4D**>_?4:m.&k0m7=Os8KB%u;l%58;/2eddc\u\I*]1*0t1pBQaYXnp9ei)T)\H;A-qCnMI?+Hb&6cr8FX6eUN-Rm>L%EUoE7NL\cN>U/"!+n6o.Uk)%:Z[\iF"%SH=FD5-s/F:g#]TnB'(!FVi1$NmP;e]l,d9U0,RPnJi1INRQ,VXL3:sAWH#]4:!RI/B5%E)B0*c$\9@+gh'.*Y"dh0"pZ"&5Z<<UdkN#d%c/8ABEVL9c=)"euP$kC!tof&ks8a9qk3Hi_?:A6QE4Hd_IZHa004*!#bqH1//\&%;)E".OW?MO58Nrj;qIfGlbBMm".lj/8HUA?Of*!C5SU1E%@DfI,-"3:..ih39c>!?U.KueMJ^cA$IX@M`U&daW^fG7XWmmhM&m,=%RoCNUm<ub[Pi:XOgeGru)H:(&=mI7"W1#R$3K'@`J7<M^#,mU6m![WaJW5hH9c=X&`A6c@cmB2A-=,&q_9jNs1cQE*Uk*fmgecb$%!>G_Ei0lL,NO#c[K?qI1eKu$nhdarrHtee!kfaB0gGN\Q$Uih\m$]b]U,G'O2JIsj`'mB=fMT%jBt]7e,134&d3P/;,i3&M'4=:f%Rkug#P"ck1;&tD"m1j"FW`3#N,%4b\R^QGKUk)GE$_&suX_#Z`+=sW9s1d@&m?/d;E@(;]r=8LUB)GaH1,C+!1J-=CA3i[o<RcJ*%Z%OBdNQjA9,aRWpFth:sm*dJF8)B_aNdKA0#S7+=0G<2#:M7\&LPLY?qf*\'Y\kMbd*Ik3glG/*^a`Ud9:gfeiB8#Ogu]V&#tY4%%jDC%a]:aM7U]JK(hJ"B0K:/[p&lXgFB]U^66Y9+E7mgla.n;tt-/iMkCRM?+PbVYh_J],^NWr]jDfR\%7e6:D$"A?SdVqE(/'l)q%+2Bo3J><4JJ"*5Wl4t[[aL%=t1h9c`8K*aF#t]c[)!O(M8K*,P'4!rQ!6iqtY%o.o(oLJnNsgk`7cHSe1C)-@@WI`qOu1D[qLG@b%+9G,eq(>]\B*=A%4&aCGfq9T"j6EFEMOX!q,uQE^NOhZPjSAe:U;8b8#P8Dm_q`g.pqUMam!NN7&0/=nZfXpiD`e=(8`':RbT7%;%'$SXuN`%^d,^,s6glY(OTbIrZ\b1KI@9iU'$3WuK?rpE/[mVY`![==O8Dc`J%CRoc5''aR)T'dj:c'$/T/m'CKD#"6M?ZF1TP-#J%i;F8p7>##@5q;jr(eg3h6";hT6\>C\0Jo/#H'=pF;*9o(f5H;8!L*mr1<WShBh-Y_dXgAuKTDc:_$"e5ZE@c,=7G<&P9k?i93HVV%VMa+!8.Po76Z)fepkPoG&L2#bYfcOgSl4:b(&U8KmX4eEf)]BiK_O.6j=HI."OVA>K)i9tc0L9*2<8T<>?[A*G:nS`<.#kp&<se>%g\'PU5*iWu6,^$6dnOmLU8X]3+K!uFb3W"M0%u+`6@);C'WmCn/_RB!*:#lVcPC4#_Ph8dlulr<`0&l;"Z/<=7[P9f&qmtS9JVe'%$Aj<@$;M5?])mlLVMH$%8ZE"70\G>lIa!hg,CTsu,%ph-f"q]+Rr`HpIC;:NGKJ$:jD91I!"78k@I.iPn?u7NK?u3nmcc-!%Y13k%YTQRF,"Q6rRAIb$>&lUKO0&kk/("12gaQ?6^6IU/1+D<(Qt]n*W:ZXk\REEKjoW:2a>L,?75tp3Qu91&\%-Kk&Q;?/YF^Z_nTXQ#%Fn;Du&r5i_+DjG`C:SdAXmd3T(lRcB=r\.GC7+8mAFQF0hd(q)*,\p,<f*-Z2=TTF!'lX@C"S[,U-Y-f3!"QhL4Q#8#nXErEa1/%%be<%J/2(@L':><u<UX222;&Xb)(X_.*P9W\!!Yt<p#uNVI?`KaTfB\,1LPss=K:tJ"q2%WN"#pS)N5dB2k#!gR\3#]\gci%1RQdB%3,n#oSPpq!$VP?:GDXB3@s+W`nU*]#m4ImF/:kbN=2@UT5HeD$Y<&CYG>?&=07HD_&;fBP(jHc3=!&j!Umn*s-QDog<A'#Q/i=Q2%%3-Gd2=5Bgm4*5>'u70)&aN-N(?]pp-1*1g7l^T3P#$I_d\_he6u!G=M/:MWqdGX@Xk9TMVAWQq42K0[hasG;5h9YiAE5"*2iKrE%"H"g-k0SKS_uup"?tHFQV_^kBJk4+dJ.]mu=sC!lp*[#J3%DR9j1+AHO0]Mm7@`D:F];,1k'EgJDgpGi?K+rX`9L\WXHDNMo1O1H%[g;hrj^Lse#)LrdB\Gr$79:hco5_ZO5`j4u]`8D(`IDNaqVr5Q]K#Jf"pTqG$?f,TM*=oJY%W5/j6/;<MnTQ$1Wi4FUmPG$Fo)RY%SJZZYG"3'pH,Rt2gHu,6@WTd@K0X`]:jTo)AB#.2)QUB5@h[4Z?PJIoSf#P/AmRXoQHTsQL)tF'%aaM0oAslp@\\?`7MN^ej`D8r%rGuBRpl8gH)$7)Bjmmd(@b>s6."I.7R9`"+rb'=8j^<JDc>R7R,Oh8(Nm*Zc!/.V-h+;mS$Af&-RpQ\^"[m&`ebW`r8Hn2"]IR'D%']afH@Zr\H839(tJ;Ke@f$$VU1!s9^b[#gYMnTZ<@j7OMpkO,)k[7n"70cr!:CFjUap7duT'L^slj_K)/M<::kkVhKl[.1=L(1mH%`IC,qEQVi'J,GC97/3iCiS<28<UOQ89\L-7oC$M$ffB;Yn$Mo.F#TJb*iIPSY*T5"4!'aA#4orAqO07OXV&sq"6qT>NaQ179L"PB%#D*YBE!pks4o"HsgO1u'H/\GbC8[[f[r#;#r%fHZRZnDT=F?#]\N'>[*K?WYBpA8&V]b#>nOK".+%F(NnpV:u$o*KE%+:-9^cKYm%I5g;n!eS]^6VdM%q)I2sa(UD*DSCQ:ipNa7J>#)A/%k4I)IQtG:L'cK[C5O4KB<qi$;re.XmokKhC:$@.]SLA^KnkJnTR7jmE'4D%R(dH4>m`h/&2m0IEsG:U5`fT<5#&bukc1Y1<&VnjrgdU@7[G86+6AQlJ=1oTJo]@\n:`99gB9pnZbITt*7>n!+Ss1ch"S;4-@A<<%@q)S0U]:8TI`D#kfSb<KE/$m!drDU/>3H>S8#nk]2D&8uG=An9@t/hf>M)%6$GF(hi;I?>Di6oT5M?l:Sk")L>OVCdo$sfO+8tuV%>"!p3!<^7]`m=#gkW%D!!^Ls/0.)8i:(#VP/]A'6$G'nfp6F+3bU%gl5/]Itq[PF<$bOcLK=kBS-_AJ:_;b.(DuhaCc)]SV@4<h\%,)^tW6gc_N1-#F7Ydl!)?aOG4L=jq6LZRqrnb52E*qHRc2LjRiJO%bN9Ri@YLN<%WG3i@b8./)[;t>!=%AF&=[nM^N]up=L9]>II%@#jEl`udZGdEr.(MRbY<Nf9f-(?$\."(1C@AZ0g]cdi0gOZrDICHYHKLG+J:&I6bX/.V0^>%"aB5d@kE[2Tj.a6_=[c=@9roY%O`%2RfN:03L:"-mM[9*Z^Gc;QciC$N:Z-Zijr42SVZsp47>-Am5]/SZ`/?@V--+^8%'ha%K!"#2s4.8kLgolLUq.Jdl\4Y(CNVU2,KI%%t+Fr5n,[q``uAs9Ye<0goP:$)3uq,!j_Zj.,Fa6e3]MIf!W`0=nUsA5N'</.e!hq3kRGIa3)uYqit,r%Nqe3ee-Xos2EEKgl9G!%#=Y0;D5%(_32OpE$"s.$O0Ru-U/&S!Y*cU:*/A+nNp=fSKCYkb6J(_Ikr<T$<ecIbeMR?QNiP#<`g<OjBl0GsE<_KPjJ&di`5/^^%j"lY1MRbiRO9XKP>nPTT!(<q+^[`F>h^EYlPPAmF?[=B.JU81[I]H(Kqti)$nbAr9#TOUEpLr_ACc2'[k1q"=Z_mi/?(%Brf-B1p%8,LT:X4N)@;,r]jm/D`UUW$J(!p,K5r#FTrOJ(lU7X;ng51a58\U,tPqJu/('mp(#oZ(&0JaX$6\N'XQ\M^7#^=WHZih6F%:H/3;%@>kTt`GNA;82-#*6XQrIr]CK+H1e#_0I#gGN'$<\LRRA#l(]S;/#%O,fa<.\T]1:h#hOk5K't<NXeA^JPKBsLHj7MZqp*tf)g;[j%\BkF&..,_(kNjC/;Zt'GNUI,W%ROOO/@G[4Xj5OboOhgOb4q!U9"2qY+#t*,p41oO<@a"!,D_C=LQ.:Zj=Q-GbEJ6.hTcG@J]r"P%jVu5CM13HTF1ssFPohCFU&^V8d"!5[dKpMjQOh2'"@3KL)2.t9Or4Y.$V7C$da*1E#X;tV_Y0"l6SZLHaM'_%Ne7Z1Dp8SQp\,_q%o#<am:igaU]StnHC%45?n^ZLF]I3#nR+SOK;(gD2+;/f%Ln,<OY7=1YgZ[ZTFB.lq9KP<K`mP(%p$KXE,A$UT*A]8]/>@U`L?-,"%SPl-W]rRhEDsDJb_X::TmP!Mp^[EQC[;W'W:_-o.h^VluVm5&;ngQZHqN)X=qVlW&5a[$b;[hR:ffHF>PiA'KJKRb6+]n(%h#,YD%5D5ZJ!>[m.e"+W3LZYAcK>.a2_aGf*ll<>.g4C0_Kl4m,M9m=ED)sQ^SjORl:8^+r.:$aUYc6V`7i^U.#cH:/o5/WJR<VDC8ATGE%3S?-t_*:Ltg[H@c"f6#6d+GQe-='sRFD1hI(QWaA<99e:0;F)#2?&`J<q.1a41-RoDIFlU'pgcSHH#"#-,]/SL*NE3c5/4ik`'$i%>a3O6_oPU4hp4#:Oh4V;E;1akq^g@oA>G\K26W*!mVN4LnXC"Me_Q*LS<edoX8;[rIQrTEYmWl06fJm[%Uk+1nPMGu$/VY1n19t#%S,H-:pCP@,"0s_`)M)]EAZ&NU+h+&.a[V<gf2b"mqL^%dQO,DmcJSQPT'=;ReKAt?1Xtm]S<aGJo//LX+Kcn2>QBR#nU2tKkcbK<%at.26fKG-nZJ.n^T]?m^n\01)T/.KFhm_cg`O3s.Y8fVH0gc-RKX^bMI^jiSm&-t97;f:Wa8NtXg-1XWC$EcNpRf9*U^^eq9/0Yu%>r=7ZNh,>ZVSn6VV@JsV(bi,qj1S[jV%15OGVGBf]46g-d!9`%PdEATGjqgtR/].s\B$*9CN4K"jN6=536b7*Q/atIDhN@\a#*g.%7HMfG"Y221\%jbOkKDoejW:nYS[iP7H.hSOW=LlS_N$e`a@\]_d>FI[H/=mjgoTQS1(dRIQZ,Ou`6T(TR:+r4jL]2\Z<u"\o/e[j%7Z'BIO'.bL2-!BSb?@&_.)=K0G@@LLj?7D,D^5>_58OjtCA]VJ\BjbLJ8iR-^D7sIQPSoafoP86`h,^$6Mr93$k0=%aqHsP"UNK[%.mVbAkPs@u?X)4ClgWp_5_qXa!eg7pD.%T5\oR-.DdIt`>\ir[=jF:gB7<ZhrFXa;iIN_sUXd@$jG]o#_84`uj$>IB!TtH0qCOm!%Z%9`cCP2KoL/fS>i.1&RnbkogKiJW/8DB1Ef]R1=^aRMqAT&4"`WbKgIRl1]Gn.bl>f=N8Z,)!W2P75W!:^SZhN0+XJ!8]Z(cAl;%"_.0HQY(&*c95a>S1+j9QG[(l"%.OXAp"Pf=9/t4p""kN>>gjCoYlQ%X3Pe8G@aMe!TNS\%6u%7m=$`^&2SAhNTh&!`-:i=XMdqf%</2u<fD=gnVi^J\SjTn-m\80TkUmZ)L7;FDA"b^n+Cc1iD7hN/=>sFmX,%t?+g.'oM'^dZg)k)3ju(%INdnKH1X*[1msqZcI*c(9%;u%_qN>[I7IRl.S;g1/N0BZF5cBLn6C*,1FGRdKBHa3"_$Zu\/A7"%VCGr^?]J-jVV[2Q)n**=g^EFDjnP1H00Zc]m*_)PCYUI&R%B,DN#!&8?VV87s64e$FV/=-,u)8liYY@hcag4ELo.g0Ul/3"Hg%)dBepu"*nn*lZpVK=qSJ^&-[FqGV@a"qcEKl>mKEo@i/4]$UB%mrSiQp\[UTIkVmH&%CpfHck6$=g];g1Klll\G&7G<l7YGoGDXJAbii%`GN]q40Cs1D++&@lT:FoD27XTh0l<#B>f+5?kN&L5Yr)X%O8mou2=hFO2G"j23:F`_m"8Mlo%mJ5Xj#'_,9XB#\n),E`FVpMbVi,P*Y?90Z-?_eKPDY`]oc]am7XjTUTb.^LWfFHk7jq1R_a&<%o`dTuS%$;>]6XUo!e(<ibZlkD#e&mlkY_#0"AtSto&GK.Zh>P](6Z)Dqom;ae!=h,Kt1;@"bhrjW-I2Q,a*h/1Tg*S"'DJn(7Q=_%;cpRSV?O1ap.dFM*AKiH:+06K#`9jXYcXM70d'dr+R(3r@(J>DQ"+-a07c@(ac\4fcXsR.%,O'%J0=N;[NJ"U^PEkG>l4f;+nFMP%H)u%]&'WmBg%)4^UCU`Nh[s(<kLqbrL0;0I&+:Yh+Sr`nA,>V@YtE<eYQpgCebjl:-m]@Xen$D-4*6[Ek@GhlR$c)0'=\is.k"k#%Ec^3$!V0u/Ve`U(Q7_pZbiq5JZJP6ZK^A7+o-n5a;?:#/YA*%.:I+QWolJQK)VXg`QW1Fq<or/Dn+9V$%kk=h&C27e0mHjh#i`rH%/'kC;1LMn%bMm!cd6J;WKh9_ZV!#_>()niQ7?"c<MAukRE2$AED:IN;rHu-$=*BM0ef,&Fi0u,g3eEn1Z7gfV;$K+*HGsY-Ei*ER%ngPI_nqCQ,KIJ"$[M3IniIVG&XDF@XWYtqJB"GpA+&WLNO'#%;8Lq6V`SZ2LJ#;m$(S'6S&8D55J^`7T.0@CVefVn_YU(Q0dS?'$%HtLNeW&M![YO2Z+q4LC)`.[=V4B4n$[jgM46W<)i1l]:VCL5^i`.sU`CL3a_I6b;=(L^"2/n;iBbolQ%M4p*'9H1l4T+iurPjrNF%m#0EpiPu-&8u@Gq=j,Yl#i`U(>e`-`7@rjZlO7\RQ0GB)-nP<6I_Yk>Igp2"/de[].m(#Qg]U$0K`Du0#a)YE+2W`U215I@`<BcP%:kPc]Z?IOaEP'FUZN\#i$j^<H_8oN-L[?s6ESgF#&1$'f$Sf&Yg2:K`\Ykf1!8%ehRLdrLZbHpU"8+sLeBBjO5YqVn)bVM\5GC0g%m:b'M?sTJ85`*4[EZZq$gPNFa(.?L#+Y5_-'TC8HMFsaf[KW\\?%(JDM9O%P=2_7!@('X)(o!YU&C=]S59HEE%g6H\@MZp!YUq!Z%TgRqcKI9#]9!ijrr";a9eKSUg#:jFZ-D026eqosMK95:n%-O"eb]Ghh18N/t-Nsc)4s-ZQc82$r+G`NMAZ1]%kF%>Z>*;q41Bgi,%/t>-$'$=-5[mOuu.Y-13dK5)WXVa4^)'Km<^$H_pONh*_JaLd65mGKJ@38@,,2s<QpctZ7IU6)@lpP)K1_+LSauIDk/9?rQ"I[T7%=&^H>DGn<n9W!SKn8:#_a]3n8SsE/>Pds8C@"p'_QQ9<U#$mi5H>lO1)HN&CO4iGBe<Y_YZHtCH/CH-$,aNLcEgqiPp2%f8;!8Rg%7BZ#oZF_uB\$ZumV0P/;J4[(Q8SX1RA@a%O"E>+=n=Zi/`>,jT52S?;1$QWrI[SRi)%,mY-,[8Lk@U(qdgpn:LK)aP%e$@.@0tq%%8r/h<#['F*6t$NA#ia(Mm`CeB:O3i3MB-1#/P19DGFG(@STNYQE0SkW?]<1`mtu)h(T[4NA]@/!=?u`:XpE?%9+c0ug;=#Xi:qS'%"gJ_\/]FF1'cDd*=1(dqWZ,V\'E',LOm&`6g@/um<Zu5&m**%=U0s^K[gEB2jpc-,pIGba$2IUgN;R+_%drXhU<tHo8;6WA:?-NN%`Uj0s-WE0fH?tk[JUk?$*Pn7)&[`2AmH8tkp!,rKURn!V[#I@VAs__"Fl'bCKULc0R>Q6ofqL,)%%;dhiT>@In>2,%HD@`m/?>6u%j^@@g1hC;-c&1l`%!`t/Q!q+%T0ip<,M]:WZGQR3@*VnX-Pi]-5.KK,l)WZcE9MH%Ai8\NkD%l^<<K">G`j&QXiTUU.c+FLIH+4n%0/e7HfQfNZG[-_uHruGj(-Y^9[dIC%(FW^Mhc?Gl%N$=c,(iK<DHg1%po`t!F5M!%LMa.u,2Iq'f3JEO)p4Lghe_1#p*;bUZjC/g%Jn[i9hG&*fI6-9b].c1k$Qo0!"#sVS$m$WbZnq0fgcob*Y"@S<d\$$[pL*,kf0mj$K^h=S"d@3jiQAeCM0"G-/#k%IXVIq7Nh=-E%Qrc.1:r_&<,lNb1mTa<`+?nKd\_hCF#m>e7)^FK&nmuVrX(q*D:(4tt*l+#*5=9QB!8r#?9G\3>A[WG-l/EB#`oTaGYY]e6Bh4j"%Ci/9BgK7!$-<(Q1&Bkr/"5=fTQDkVil=##,DYm]/4AoNW7bk)noR+uQZarPR1[I0*a^nJf]LL+nH-,qJs80qn"TqZtFq'[&/qsUe%rE:i6P)QPX[\e8jdhZi[O^YrMh<W'ml"1>1Q1nDSnK;b(c[&gb-<Zq"O"K+<1C4@NC1>;?^tq>cBH*:.#@cTgiMe&tptLO&3fPA\%@(C+^f<9UekW?ktA(UJo>Y6"]f@lK'Tn#+kGFoaA\6i)FZ&GGRHn]V66h:&0Dq26+o,qnJq_oOPkkWfW1uk-eUH0b<66k)+3jV\)%W,tGF7RSeK/#f=V-Q:'QIH.c]QAc=jZ*r*Z$l5F1@kgnW(Bh%L*#fp<NO6!jJ9*tY."^09UX71oc$"<'+\g<"%1!2j:GutHfVo+6%-6[m/@"A_g>^9[VZ\0"2KRf,u.ZP&d4c&u+Wsu3EdR7Ihp.)6@\1OZK5]=s.a/c5_K,laF-g2\?'7'2p%NS+(*]j"Jkm3*333<3;%"F\u$/egLV&pLHp;nBfh4+1[ODt&k,VAKdYlNdejY"WgHpWK9GnKMKR7V_i2aBDmED.ou@e1&s9HYeIEeR^jZAo?#<<X(`j.ZYA,%h2ATG$XDi55r>_TL!#W$p`:?AhQ$6,RJc9gfiB\_(Yq(/9(SmnU)V/Jf'#Z!DOcN=DOcMC9eY#UonSPd*^iMY@\P4TAU6M5DOap!%^\a=.SfEu9jWdGu\4@Q`e(XuC+`8\$jB,,pC.e-Z+HJrGm)cMkRc9;^p#Md/mXELFaS\#T39Oh=6AqIaE-Kn&Ma%#Zo\cB_CYqZr%4(]"`jTQrZS,W</^5(p]5mke%7mZh&TW0o2F'*sRQFcm/NX8"1hT[&=2Z'3)&j8GG7+rTn2Q6;gPoHLMB(*W6fA>AuMrn=bPl(-!%`TjkYkF'pK@\S&JA^0GYr*>\Zk_'IomQoipkp*lXro3Z8R+hk+jYKVg&!HpF\%W(\]f$It?5kDk9?22Jg6fN5dZr$lZQID!&\U).%Z>6/CW5Acb^Xtga]f%;8V0Cko&q>\>/t;iB.Z$W]NKoOdDm7FId&[Fofq8cE8mdE-RtunR)gl>V095MbZ9_2iFmAJ4$fsml"Cs-S%@qL%Ckd!L*=SB;)c?ZA!rZFl3FY/LYp5WAh@@RS2<?LG7_S/"6Q26/h[8<N@Glg<W\VT,R#UI*.Eb`tRoWb`Wq!^KBk-'<q0)@h0%r*i1gSb=*GNL($`p<*2jd)^HipIE)%2d]mH3$&;:/tY9dgr9BPjMbbDEVL@UEdrVG_VK!eOWsJR:`e=HA-"E-0t8_dUS,3QVRE1m%[D\XN0X$5qlgReGrC`/(r>\o`$>C1ZCBtKK4(f!>2LK@=1o56?2@PMQ]DBBiSpWV#W9ub13)\h>HDc[imrPh[pI'O[N%AiYS]\1G%>l#KdgGg.ik(h!kYm35RbpGI1ECcl48i!Jg':DT<1.Bul0:fn2F2ASf6+#c#e&!qB$rB(X#KF]Y:R&3/gMu9D1Y;Y4\S\D?L5<6]%+3J!ID+oqACCFjLhS-6o(]'+!PD*)i``IuVMU(U>esG3Hm[=@55rWg:8:3pN4judmoPbbT"9(?Z.\\OW^bU>[r-IZ0AUC&<Ym\H-%3Ls!&4*pN,6l1mI'@`^7KA$O>E<TTP],c+ipaIg$oQ2^,o_n@E?u_9(FepV_EtM=,$uWb]SafZcQ0D9<QEB!Rep+i&p[K<bIi6ug%K#id8:PQI<4J+qq*[oCs&s\V7NI)HO)$c*IIlW'1ce\WE^;Ct!#'8Y,JE^"_%og98#i<)ndXgTaK`K%1(DeJ9>u[K=b9<*JIC.A\%;t!p_(,10C^(,AQlIfo,D+EX`YPoig2J.c\Wep1(L%Wji9I8]Masmf%7m,`\WI:^Y%';1]&.n'r_*f+@o4jZTh3e:rmeb1QCTR+q%Q@\N@)2=cllB`$9C$oSDKnIEa3em,_#4"kijs<Ik6r:*(A=2a^FQNGG7bgjOn!r;*,fOQj'NI'"L@P(H*E2\!:+?LB4?Tn*MJKcg%U2`;n%)%oa_k@*mMrYDSbc&)0KU1g(<`4KN^^%`_GWYB6j"2#s73!"u"HaEehqH4Q0>o,Vjnr9Je1N&Jf]$$r)0Xn%SH1\Cqa4g]%g1!^4Glngk>V'ABN:1Z+j)Z[)\T%^ZX96WD#oK.O?[`GHCm3bf4+a!Ekhf-FA9-/FNNScrXHgu=*:hcib_UP,osVB'W%ApqkBD<r%g:3B^h`[a\TtTCLF>5["Y*CnBrQs<Q^NX]Q'CKb@NP4nE65XS1#-*O;_%fMpjDR7V\:ef]+C<'*j"Kd$k1)0a9R!<q,[Wl`Pb#NV%a61>ag%c@8Fm,(LNHkjbDJQq>I@f33jQ=A"r\D$n*7:/D4+id@*J_\AcgQB98J2C6V>RK4Y*H=HNJn.QkH8"q4QkusHT+0I1BTAq%F`Zkt7IiBa,Ya;h)?\!UA_Q2_`m^,n:"PlrCh&ZBT9m*oOa+#LT?+WRVXBK>gDX?grN/d(QA4ldaOfPlR$KTqFR?U5rU/^$LoHsL%nFi1-U<-i6?-]UXCX18_lXIleIBtPMS`ANq/"(0_gnn_fR1gh3i%4nYG^5(TB=GtrEn%'H<%nY@`n+od,/t1cH>6`u?[VLF4o<B>%0H4)3nCbl*jjTJt`o4fW:CKOS!@p,jS2Y:ol953(d*'.$fq.E)-Ug&ui0>^LKrY9&MV,T/IhO3GTY`9deqJiD?efLpZH(h/ann9)%6!K*/XFBmbUZlg-5Vq]nl"raL]+@<-h=9Xh_`=c!=\P@&kq"_<_qCL350`Y`Qii('S89Gd6,stX;o^O72:^BKB^N8'H(?<)Y_=.q%S>XaKYTGiV>W<I!IpV>p"WYQ!@e(aO6Ai][Djk&k\(fm"<,2$W+6^(`DAmT@P=9^S[lWkAoo5TV-Y>BNkLZA0#B"CkN'TQH+W$^J%&;Gh_%+o0q4Q%BaW%N1_(]r]e8$Pi,o/^F)hf!+6g.9DqabL>^7+Y3[7Z3;\ee[COJj[aNqj$[e3\q='ok91)M!Uh*bIm)]A(>X`%Zt+UAVs;Q!Ys3Y*f?4.E\$[W2&!;p+J]5IPV_7;raRe.ASEWl6&a(@&USW@u+I08OV84bGjX/!Sq,QdlGJEm_#/Q`=brsC[/L'rF%CXeX?*)-U\Zo526#CS&%'?B-[PkoPU_M'T3ij2b,>+7ZZJaN%ZcRG(fmrqFtf)42uW\1MPe`!1mZ@/&sB4;*.hVj51?sG's=;EnK%I2WsK#oG?UdQJ8mGmQP:(k6dkNttX6a=]]>KaNL8!(YdNc<jXU`?.='hj\hZ%<2`EGl.o0ae5Z@?M\Ci/$D&S-X-'=KKlfCmUp37%_H$^4`Y'hAK"RrlWAbe?LVM7S9f^i7R,Y(4I#_6\NNeOl-NA66qn@&(X,W>Oi\b$14SCEqk/^1MH,j>RAWG7UDHJ604Yl0#&Ydk9%D@0.,dp7b,2Qn3Sm"X7*qiW=.JPW+g([l&)FEi:eX"o(qR61h71W.KZon/F:m1O2JB/:j?]24LZ8s7?aY1ZlW8M.SDHk)h3fN^H<%!59Ei%+3mF>a'@$_bA"YAm\^-bUj2%1p!kdK2[E\pMsUA?AI[Xl:&eIF4tL=eIO9Bm<A]!TZ_/)ao>KbcN89@lND]9(U=PS^&('A%h[0YD]4Cf&qSC`*;AoTk5a0T:-%0T7kVQDt(#$\_ZE*_.pPmtk_Uus,6ek;@<N"&<'Doc`Hu9O;P^E>XD+2Xi2T7N0lP4KDBm6]1%M#OD"#hhO]UCo8`r`@m&X&#`FV\"q4<M'>5gKIaf@-YhoJ09,i,0p/AnoLiNgkWX.qq.6X\.[k(.kNNeUPLMI7d&e*?uF.KHug,`%8C=$sOZT[)H*g%LV)siYs4j4Bh&KEc>VJYc#bQs*_A-=Ubom"W'3PCr`'X9#J$k;UlMKDgSg/X1\Zl_sB(]5,j#b\PeJGsSpS9mO%-Z?Wn6\Eh.,CBt.%;LOSIriK\^ri`,i8^1a'pn\.^M8pd:^Q#(G/q<Q5Pq1pae0>ajd5]g)-B=<dh=GsakDn+.,(;n[3t"-7$6#N%AW_IP^"?)3aX%>.gt%Vf22U$(XnO+)n%d]oGPL=2\B?[.Bch2S?h<_O'V(i2#D4_peOcEB)BESIbiQqUY[0cW@21gI\Gg`"T'1/V%`0H>=_!un4TtG(eFrK"jG]of5;FGqD(1B5[`lq@=-Pd-,WueeX2bN6oQP:u:?]WtB48Y_![75N;ic]roP?.HPXGEFiOcOr@B(W0"%*6aWH]))m1ZDX(Bb/N&t+*u@T-,PEO^lZ5r+p-bo+#scbk&lK;cfE9`"L\U4P,gc_dRo)m^Z%E>m<&#dVAG]dYUj7e*8sd"95CE*%XFAg5F4d)d.@=$:_ic+AT^M.l;cEPA_"c1[N(k[;ig_G5:%I#jRtaPX4,[OrCE>"L1SRQ<a$a53Wl>@?nGO3(qf6oq#EEsq22<o$%_7;q"a`r7-b]Y/paUk7F><#t=!k46icLU"NLtO)^1c,>dHX<:]SOfqCA-?kt;:l]*K*\$RGpOMDU<Pl/_0Wn\C%iV(63mXTkr]`^%<4e$4VV8HGllT$;,c4XEA]oB[Xk#[nhKkcAQl9/5E]aecj%<"PV7TL8GKs1R&oCb6gSIj?_4C;rnVA]GNkW=MkXpZD#D5+R<VK_:%/=a:1XUCbsB!*(d!)H=p,(i38,<KN2KdnGl)aB'kG.D_fW>_NJ"`1:,q66:9X*2/.)13Gl.s]@J>6,IqM*?7%AB&t@"6,P.0/WcO%WkC@K",&On,,8uQ8/J9V\lWe8f^m3d7/.Pg'r"I6X$j<=K91".TdK]Np`uHFQa)i*U0s9so'=)91M!&)7br6f%'!3_U(&n/Q#<r(%3"/Ok3;^@.j9#+sgcc*h+_O=`a\ef`.SQ:t;am)E3dAu/Dh1As'Z`1K/d+=NKG@"=/#/cm`0@Ek&5BRC31I2BrKas4A539#0%MLr%5DlF(+5i['eX&]YVqOH!oK#!Ar,K\ph*IP:$UCY*eR5A==!9P076P:L_#kY;jmJ#,W;:n,*=RLfVmWhF(!QK"8cZmo0ZFZ'-ae7A%rnEg"]1L$OI46R_:Nh\g84CcL;4]hNc0)"\^*=JSIQFBu^4bM-rX(lu(,Qf>4-#<D-%qofU'q[9idIT.\I<Rh=j(o`2S;_1C;WCr%PW(:N.,8!c"0RW-6/7B;]a2NcS2XP^rS2n..dj3L?R/a4(UX<B$W/V9l<'S0&DFBE06cX&8n95lAQr9VHTuadnt9U\jM?_$\U-8j%ceGKf4sPJJ0T3l4@%pm$oeH<Ff6=T7S<)U[RY0?aI^MebpHYFY!WEZ((m$aUoIKCJF:l"pa_j,9L;<F./t7aZ:OaL$NUCXKr8QqB%L,ab/_0bGcW/^%Xe2BK;UE3$K<_l6Pg^ln^D)AsWake4F#KG=iEJa'*CBXu^".c&-KnAkZ.k)0/WU,QdDBAlB%+K7WFa8]Y28rOp%IJnJ-Lc[!CjMs/j4*6)KWs$dm,/!Xs+KWKXo=C,-28!L5:LnAoouC[sh[[I=/*UJs=e-S#M;q(G?PKW>"L&:hc$HHh9X]?Fk`^A\%4d`aFj[5(/Vb8A:QD&?-8s]iu>fg%A*];emDFg7?)aK?4km6_m:ZG'URBMBT>feni-DD(]MTFdO'GFtP;!lc)04O9>mgkE4/bT=$%d[a\OYpXrNa^>O^-eleAJL'plPs#"(P1Ys($*bibM6SF4is=0P5LLKDqBUt^frEbCi@S'))`\8%O4h?PXVuo!'fpsp;(,XW03F0"%fa9`OdO5gV^\MQr/.+fk4c)MAC@R)sKn@mYH12+CLn.Lk#21P\5:%p39H,L_kR?boEenARYcYTeARRnp>@.Y"g%K&.i1'qBCe#7[%!id<VLh#q2,-jHJ`K]-*=S^9G!(q`-*iKp+K(6D>l&th*XiX;+%,f/c&]p/Y(oBSH5LAaubR%=K7j]r<O;P/P6JTE.@[p$Y?"JZf%\u0oniZiFg*,!\)Qqj/+c9ueW(2"770ns4CrIntr.2kUK@4#*`I#QK-'1HG?-4rUR-Ft#60U%N1*5WZ49LO_j0U&V:S6Ri*Di;gS%Ach)s^Y`Vu.shp%g4-5PB,>ViN$H2H4s`3>.'Ytb,1W3K4_,!nc:S>g`fT8_m-JJI3@k!.6DumpMTBg='GGOgZlq/:7=(/(l<m08%OeTrJ41ju>H"F4(pl"3p]HYgo,d6R"itCD?,/TW5@s]FjE4V*QN)O!7LGnW$LoDp%Xu@^_F_-p+MjV'W=t%\Bd+"?Zi)<R?]!CdP%Z'hGnll0`sGWi]XC/J\/Mbn2&50Lu$Y*'m'M(O'!?Z;0GK)'K]E15D\3H2I`Bk#9"EWAT"V90Tu0sP;nI,18<[Xb>i-+BHm[WDXl%/&]@A7:_6,MM[0Ag6.iUUA`1H>@^]B@Z(Y2832mT8J56<MNbsoY`'iG(:RdIBA#9T4&'>g2[]#?Rb4oaI&;gY/c/<:6^H=J9/k%0%kn*=C8b-&.EIc'A(2+mVV-.+4Zrs/n+O4c=Z=V36m*2V2e%Cu:49+e7J?S$3]eE?fW5R0`E.Eb`%DQAV-<LfdNdo)5+6BBFNhW6*%bq[`?kDK]39NTeQ#NV00(eI4:"OT=Bo-jcnM7sqU[7N40gORM%UgJBXL,aKthl<cIhh+M8e]#e$@.1tNN`Y$bh?Lcpo9guI2W4fL%$1lHA2-cgs+`FpkeV-0!$rNmp2$>uS\aO(1+/J*KYj5tkI-2P<kBDHDWqu0'2aHiV5o:ftQ,MhU18[BIRatBXmg@VeIm4GF+j]Ld%Lm<VOgH:CbU)7.tqVc`@*N&^%>WAfqc@Ubkg\6PFG[&)<0t<i;+/[]n6T\^UB]p\=Sd!Y)K)p6EeTm6h_%7Ua-tG=kps)8DEeX;@%ClT"=9[e=rPY-!T3`Ohqr<"rJI7H>3kL6!;=>hTt9eZ)QOVos4;--J.aUr?2m143/?N&8u>K:l!dmF4qF%r?$At>LT%pZ#n:?NH4%YAQ9oQSHP("!=(+>B[GPWQi^H1O.g/[mK-;BdG]4f%S+rc*YfEL.VX[>(^]A_q8lAK9XVg2_3N]%!"$t]3^>P/-SEcOT?-V3j^06%NR4;.L$>PSFXdJ4Qb(I;XtP$[1TeQ8P%h'(3q==PA$X;CT,?<XAZG"_*cam@b'k.Y=Jo]ECtj?<T6`l+%h:Q94pls47.\@fdPMGX%V0S#U<2,i$iQADYZm6V36[t7$W/cbkQA@q/%4I>%'qLmH:.?TkMj'Q!jne<GbJQfp)CUhlFf&YM10tTSP`3-qd[:bB1B4\Ns+1O$%)PiW(ipop9D)d`5nFh1?LW.Ji\m^s^p?0X:T4`0D]a(>+2uo3*J;>#>JNBHCm^Y+#)M0lE=b[ZD2A^K:+qEu-W1K,1mVa3-p,?'d%:^_J$o=WLO:\L*>ZU5MS!'"/fEa2ac.8B9SLPV?DddqThAE8ROfDsncEs8k8F&;dk3ZtNI<U"88>7+_I:0`;Qc^/'qC#gk!6i<"G%#fjfU!(uTn#Vu>PI["9$]8/HPE4Xln_=C)smd`hXeu&Y77"P"Kr:Md9UtETYN)l\VZZiWHat0,_\c_%)c:d35R?2n("Bg^=M%Pil%O[9\)$3XLZ+e(5QKUg8:$(7?X,p>?,F=50b%>,9K<PtJaCtC?m8^?\8C`9i"hQf@!=jAW@<6cO[\fp%5a^@Zl>;DjuLsV(/&hma7%V'UtK8:NBD)e5"$W!oFlp`&O/SG8Gj-hX_nb-1'\f:2C\;Go6Ik)%t8X1?GG\uu%$I]!lDNP5X]UrWU)1SH8'!73>I3O3]<I[26N%(78Co$I4g*b:<7&]$6Q7FrIK2VJ2E'4;F4MD+mHQ.m;"?"bMtrB$8K]TJZ%t/.4`)E-Y$@%>Z942IPr9Un^9UCQ^4f0HjR7,HN/1%@c*M0KT:`g6s8%Z*Y/fn<J$t7V5hQImh<ZM\b6EQZB/q7<=-..5SUY.,[&\6R5aW!AD)JnV^*hmTbKu=)Fa?c/(B:6;B`4UOt)/h%1e[a$B'SF9cW>k[-mL8E)*;A_n\)DEaFuV(Q1)DuS_og,!tb!Ena/q=1o>GR/%Wk-TBVBYcL4_Ve46='1\/DM%:Ga1kQgHo+lfuu%ZDs%<a+GR-T(=EDiR;kC=Ao3QA!-3nnJTM.,=@qVIl_'$N4kcSiKOJ-KWYFdcHqJ+Q5UC!PX9T*C+-[4aI$(7dRoLaEJ6VO[%#97%W1\\/n-kdJD.]3mhS/psU6aW/WlV&=%TWF!ad6$86X6Sh_efEPSDm4)cn?KX.di\,AoFA]V?Mb[TQf7b_J<$Ui?d)qYBMX/%C]WZ%Mc^qqr"C_-nr=Ksc4];sV&_QLXlUGiq!EHSN7%4*:bP0YkZS4&38>]EY-*s)YTrQ7Jm&3.&eYH[]Y"J`)rb&PSq$pa"YuVeO:jf*%jDt'tBcYT3:R5]dGCQ%:FSDsnY"-5@SKWCB$.3ipi=Hl5e2cA//)MfFZ-!Wp+&Z9`m^jY$)#bH)NFc$$;u*tBdMp*#FD04iCME3`%kZW-WXlG&7>1ndBFH.o5[o_PM>?oq;f;"rBL2N#-IC:n$A"q<#WX6U"LN:WFSad:R>p!c_3ABM66C\^-"=kRa&CrZ-7^!*9__33>%lT:,?fZVoTGQ:<MRfpeN/V]PZGf"!D]`/FTYjN&?;PnH-]T0HhC?;3jN#r%/:^jrA]V/u#G0I$:Q]#DPdmN/n2tBRE?3`pYEq59>%KJD_=1bK[:*mA?f>?8,g9%.-!m*;Nk!?lF`>QhqKLMl=?e&DqmTbPD^0RlLN+Q6aR:</`4JNcm6G#LAq-p&4k#dI`bqdZreKQkX2%KOihk6bhd'bSD,nL$+]?+e`8LjekunV1a:$6k]?mR!;udMP^hG!2KZD?[3//$1#I$qH2Tu@FB'7J[sqe-?`WXoE]DiIYB.hQaNj_%m_BB#^EA+BH'3$ND:A+o$2p;==&hSrYSQ:'*;Thh\)H@35NJGp)2+O8SZLTXq#u_A+-ai"+=L&=C@69/%MBu#![`d%!_0J^,kB,J%K_\;nC3ZCZI\YW+cd9AK]IrBS4BXe)<?k!!k@M,0VL!cEWW1hWlmM9dG*?]/ouMDcqS@-Vs8Mf:&)F2G,fXs]'o;/+jINRXfDXm#%j1cD#>5Q1n<a2Cr*O5*/=LosM!l1GpM]=`45F]$RWG>Y.gJu>>?<I$!"J7@pZEDO_%1(q6/JRbr@.rt>A=HFVTJF7A9oO\0mZ+](%[%"q*GHA:<QBX*fZUe[MgmCY.lm($Aq8l*f&!**Krg#St0qN4F3F$SBY:eesf<\toHr0I<YF_lMM%&igZ@g'=ks)5L[QQRngdnD)%^U]8hYlC0rVt^@?@"0p7PO:`533M2"O9iC;f\,\+W67:eZ`*m,1=O:X>,p$EA-a,*E.F[p4),L?YSJH!]8b39-(&,"d8Dqa]n.cu%n?]DO*5m_[KD]oo?-6KnLF>8*IX!NcB0TM>&G"[b>?@WR/u'L&^4fdDldWD)iF8fC"P34koVY2@V$q:9+mh`:N2(16KjB*XX5;lZ%S-RC>pbNgZBH^_U`F\p/^9_e?Nag["I8lYhbWOS";DR#o=6A_mU'[N+(M5[k%K1m(p0Yad+8d<qlLj?YgOWe1B"aV"bWbF6joQ4S%-J5[opYKhE"WaBP6`sQ`5sVl*/[M^2pmN:^'^!Qd(!GIRB3*Dcn@=_?bo-Qe$8c)';*i*_rJbQiG;DQ'ohaNVl>J]@@Da,t0GSls%doDR.:KY$C'lV.,"/Fb"I7JY.5o3CPMf340[`^aoPOHuOqTPcfH4NKZQ*r_]rW)9>G@C/9gW-fA/nQj8,(f#b!C=r<?E-'9L'FAf%\#KC+GVG:Ap\<TcV8nn.cM`YYAD<TSPHK&r$OAK`lL0@C5K,\X5iAHkm;ADXXNnMm"a4pc'.-Tbh8]QD6MK&bbu]:ML$gZ,S!3p5%R\2nWiCBhQN_.$V+4JW8n#QR7Fje[,^>nhdYEk?;SU[`]Q-5b=*#oM!a6,Xcq`8J=0r%,;F[]O&8+]n$*f-u=qQ="ACu%FKHN<c^%7D$(TI6gX'lH7?tFmafp>stRD+*8riFm]Y$9eN/pUs=BCWe'::2X/KOkHnhG15H[JOcQ8po$qUiV=OpQ[H!R@OIiA$RAieOO;)YA%'IVA'cohru:I"\!]Bd*U.s-jGHEsjo&dQ>XoC@&+#fZ5Tanp'"Q)*'G]`m9Bjffh:Z$RVIm)W^(Z$Ye4lPB;2-g`31Fq;ed`tP<%%^rS.Il\h^g&7K[kVUerV.]a%?MQOon4+[sc=4Ya0lkl8[b$bgGh=8-_S2"'66S$t[rf;sJZV%'@4C6i)%@#0=beBTC;Wo/P'h?P%%)(S$DV9h@H03%[G$f+1Bm)T&CA^<HD^iFL;*/=XDb&c1Y/(XEa%;=P0?nN0>gldhV2['B,U[9W\@mOEVN]6\fp3KHf:!c(#oif%E%/9Hr^*4QkGVG`^WgJ845UFlIs58Lg8U5T"N#'n`cpO,haSu&0D(:j`_m/kiLYbmV9iuA.[8Q$@kT=:MrF=!`*mK)"Q;XYf<C*@'5%j'?iepn?O$W9j%t\*VsU4etcn)M)mGXAu=Vj*@+SCnB>715&]=cS->B!6".QWJ2ns5k(e2<UPFKl1As__eD(I1\csA'j]'m'WTpj%Jb[:WJ6B3.pQ1PmF36Id0A0&2Uj>Oocre(VXE"iij@)%-\W7#uEZYjdaup:>f*g>d,L[F/ggfG><5UUp\[U+3<O[_GgXah'Q5'Y`%fM\*-4dq'$fNN7Q+^);ck%+-;XQ3"Z/l@F"M^sPbZ%M"NA0u+qXo#7[]%Q+rlEo,*&;RaR6EU-f9T_!D9PVG"KX[&80WB1Zg<7JY%f=JF+'+<UMUA#IlTt^J-"SX2aWnZS0,1S9Tk.FDlJ&D4!P>o$#aVU.6X4m`/I/<*)99Lqc4tgVmHN;42YL)S._"85LCnX\]hY+P:%n"a.C5!qk`q[DJagZ,Psr@5(`^$SYahCHr7Nt&*c.7Z".O67J[4ZC,e-uP)#f/&(8mb?:o)NQXl`QZ%ug`CLEOe5O0gI'0m/e"V^%J&^LA`MaK@4$4s0Ns4('GAY0i\31C>-u!\uLks%;,=[UG"49WtG*cuG03m9RrDA2<.5inuLYO%oEI6HYh@(b^bT2oj?J],M_&ZIi%!-%H/-(uC9&-Sm37FHtb*0>P\-3^+t+;XDP98LHrlLn3\CEs5hJekX)Kp;a!bM>YO?)aa8.7@Tp/B:-`,9dHs!$pcpfIBa#7)Vp,%Lf'nNfFT>9$b],f_JDb8(\Z:>[`9jpfGIY5J&"H\2DZ&=*JhRKHC\UbM8DqSWj?m.%]t>Kf`K2`dESXBE8X?"^22un9/r3KZa!D^%!O*^kWujalD/A3(("Uta>\Oiqm3'</.L_-h450g:=@G\oon@3,<LC1jlgc!]HU\_SbY$Ih)B97j*Rb*j(kunb3FYg`_>m_-P*d^-%#W`k/!\^$/J)3hs_FtTR1"o,;:4tX&$A1HX\E.nRK7:qT9D<4m8/2?.h5GLA9OA!Ymaa`(1(Y*O=RSb.c!QKeR(jUq8ei+GU/YR+%5;@^LN/CMeKn0t*Y:qtf.P+85TF)WI_FJVF7MdoBMqej@8f@neO,qRW_bB3:-a&"W$jc3o;aZPO\OFq#+El)QS?Ra%<?,/Z9GNYk%Y,l'/:AB93=MmfE/As9:;.2hsYsZN$KalSRPnJ22('U2\%1b#lfF;u?!T&l0,VAIT,]RlR#)GjL6$Zt>8?6r&e;6HpL`-H@'OHp.%:\PID=WS0;ZTM\RC_87=7C$[h/-fX:ci:GUS=J[XLdM)+jt+Pl(Yl.KmN7[3]Sj+'6T*gRmgEHLNe+N!K*Z+8KICIn&;tam#.AM.%G))aIgqsG23ACG?S%XMRDg1:oa7D@LMqA3QE]fu09Xml6_]=57/B=i.dsBhi"NGI)lKXXCA1T[=n<\_5A%@FV'q<b.'O*'3/Z-<c%%R`DVV+ma<2`\I0Uk-#qUH\KGhSHe/\YD4Xd>k7@dV@Vc72f&Z^#A_M9:AqG&si^)\XT^S\@elt5"[GX.Zg#"Z0c@40o:0D6k]*I%\b5L^?iS?ROk:Y@7^l5eC_"BWA<s550aeH\5;tAW0UjFG'q!6?YuDMiP:5rk>JZ<\gt)+%']u"rij6i2">-c;HB+I$ccONK`cI)C%krlR>^s%%@,>T[XANZ"l0J]54(o9#Y<u]ClL0==a3acdSH_6EUSd.M+4AR(PM`Pb9b'.`lPjUsbhtbV]]*k!6^2oJ^DuYK9Iipg3%](7s!\Kcb<,Q-8C(uRF,1Yia/7Z?H!I*X>h_u^uD^k);In=2i-kW,6_L*,%aJER2LT8#8-FoVln%Gc3d/D`Yl!6"$L7\l-e&5#>&%0hQ'j>G@?!Yre(M,7]UZF2U@EAreo'OWUA@EV\0=Gt[$@p>1t?+NA*@=ou=W?$;#&oJM3`]uBkK_Pf#))0f4O(tjF1jsS!d/;KNZ%8^[Nn\@m9GK+_`r#?GF8o./t`\Yc7hfA@tS/I;rmVI)A@9u[^2F)C7;Ch4h&FCOU7phTSgV4ScP+#NR19]QN]`gq8H^_Kb6'hR#[%1!CAak;tE=8$7p\d\"7%?$BSs'`u=&FR+.M=DiuIYCZk2-7;n<*C1JWRB=!c?,+TSq6=3Sqi82-!`_cMm(7^dqi=X/!77aXo*ASE%5kI:)Z\ZLN+sM&]7*OlSiIgskkC/Cq+VCJS+W*CJ!o0u[6OkarTrXD.lljId"pR$LQ]!e7$UZ%AXA"d/%)G"RjGUN7n<bh)'!;dR%AdY85G:8c4Mu>&d.g1Z_ft[F4,$.=RN%'UAhipGn7NPpGYU/+*"?9VaVO:n"%5W3,X7s'h(,ldUo"mDkQ>]:Ho!Qtd`Pb?(I8;7b%b?u]Vi\0IE_KRI.7mg:-E&T"oQ/<D?L:$\Ba-D+Z`-<dT]T-iTr0$6JGcDtG`h'A9`Roi2ar6%a,kiiu1iUc=aN(2'$4X=ejW<Of%="Wh-Tg2CaC@.b7)\#(qU+0+cbET.:CSl33ea@O+Fo9\5/o+sM\JGmuj3>X1+QDAfP!^`0^&Z&ii0*Tt#6k7_>C0Qd"k4^u9@jpK%qQ"UEaGB)M_r2X!]se`9S"8s:%LhbQ=4ruDAtbt7Si99S6R'e7S/QOIBPWi4TD4ulrAie05$#;E6FHC$#I9Ag5,8[2Ru'GJ7b6r>%5\Li30U09Q;AR$[9`Y*[!'A3]j!l0>j@g&>+cOAFP6B+VMA5KFHtd.&$lVcY><lR<\kc$hB$BTIDdQ0g<b)s#U4g<]F85Mak^fN(%!<-k?ds\92PPM_i,%K/k-qG<7fq#%q`.4`SeW^)i)U=LC$3]1=6<O)^]uE>=&:Xj="X[')mF$C+o&R]@n9B"i%Z`VPaX3)h"H%_A%UBm#-HcuE$(Onk3EHqCX(Ht!3(1u,@Z<]fPjTVBk2AZf*"H8]u5\Atqh%>0rUQt8=+pLf@7NnhJ:ro/H"ZR/8h.b0+_KUgmg_;0e%UbB#n^"BjSQKU(cMRmn0O!b.N,Lbbo.Lp"FHk_>?P^YBHZh]cWe(5`P&uNJ^+PO+]WN4jrX#)kmO..laUK]D>,%AbpV,Q3Ma'-rE%6lXBjWH"r-0`#>>TRg<7*9]b_Rd`$:Z)q;EDf.M!mc([,p]-%&d%J4bhL,QX0_!ITfBLJ=!\+E-;#k?@Gme,Zbf.s`DX]*();;-6%o;[_Sm9AWM`Fl0bR$Qh!f`Mhja'SIf`(?F>Kj!Adfjr&P+L<d;K7K<-fbq%<?1kd5n(=%n2U@jBVBLMkol?MX[.3_<$@KKUDfe:d%fAjr`aL`EHO]/gahgTuIjA^T`*]n$Yk3Htpa2@eK^FDSS)F-52Nrb)U-@Fp'QnAH\2M-Cd*2=h-JQT*@G2isMq,c,;+$@;K[flDY%ZB]snHm0_]PV0Q`+41A^-7&XAm\e0BU56N?<k33Ah?'gc\W]:r?%<<b"G.9JJafHkkg&UWq:=2PXuCnsiq!mK#1B^2=V-D!]l`Dp%IAV>apl&Z3V/s;0LA99ENn>bK(l7;C?49q_S%lAIrBBag.Un?P_+o(GHH!?MLmB:@1u:@H+!=`WS67(;A?8=&)_bjrJff[Yr'(*A%7<6s7`&,Xl/7>d&ds&@?8*Rbn'3;DfkRh3IFqVc'$3u"L%bWD_"\2o&0&JJY_C]JkR6`'P]&:k`Ec[Mb\mUT;RDjkm8V@E:!o_:a%\;>`,@U0$^`4B&*!e1IbYqBuf]3Lj^dKQ6)_AUE/l-^=k@Z?L&\5asFU*tk?_8<*g`(63tU6.&/&gCV#?ZQC$-ZL]F0p>TQk^pe7%R7<@+J5Am$dlu-TTd34And]--93_1a*^a57imd5p#=GEt-I+-L/C\6aN0<]J6=$&-NEccj1"6A"ATE\XL:X%cjKM9D>p)\tj-#U'%+4oLt.>*8Rced[AIkk)/a4/dHe;5^#jMX-kig1ReV@`%p"tUk?Oi4hQaL8E*9O_;]c5r&alOjb#X@p?ngM3F$bl$'<etnGQEKrC1%8ZW<$)a0@*X:#F^WFYdCVW'lY(QMIY4_jLWHbhkrV'B'!pl2O2&?iqg-QM^Xb<e_Fa1=)Q<VSCdM0/jdhW8+q8=.=6Q:[lFd""]`%97dII/:B)A$lq'\3(?92MqJ0DgE/e]90ac-/d]N&]7c/+"M;$pDpu""(XkPHX=(h:&0kXl#W)KGHLB05@!ePKl^5FcOf_B-,fKa<%OipYoG:G!r<Xq[Lr11FD87JKNbkX=cBEf2_+]P[t*%T"39E#DDFn+p^r#Gbcg*,PG6q#8VM&=LpM%.l1S^<km?3rtcB-Y[YZ!esH%&^'"9R?8+fP.rfMf4PD*rf2iVk#Oq+TiBCE]s)!iTCA37L"j`i)Te<Wl/b7"21Gi2]rMJ83ub'HLCAk6SSa/YF*DIEIqJk/#?tf/%^Ors7o?'X0P.q)m,<iMS@GMN+I>7ZjC;_<4=\8T&7^e.!EW-FZb>uaWiiF&f6#U!Uq)]o05'o<3hgmmep3ZA,Y!DhQG#seLIg:R"%OiBul%PY<#[1VtRJ6;Z$h"0Djr_>l"r1/Ykr12IQc/4BVM>95A<&B(P%'8O@KZOPr4(4"6rf2gA"Z,I'^ujrM'Jt<[Um9SfA,Zrl%R"C7A61];Nd"Edlhm(^%=V"+'Niq@eIqQY:FQ7%McJR=5<$`_aaknhL7(fTUJ]BV%WbFPl&]LWsm90'rP.'u7&27Gq(gAo=R$A4H%f=`m4@DLAubo:5A#%H`S>K$;AG?jf&`[5,A`cFbe%#iLE&K.2C-9-Ucj*BI7XPn"]if=FRGn27-3Fgj4G2YTOls&C:i=+D[)!uSC%cm->snMrd1`b1Jh+%mLhT7P?ODIn2"k#aUpOVsc7mEX$_KX)JV3D<$^TDL,%k3C6KMZ2KPPnu;C0'J:ZL^T\#j`<;J,o9)k.%`4s%LjJKEeZt`@5Gif4U/8X0UjS2i8GS4QCn&3$;T`Vk&n9LQb2JJ?Yt3_]l'nab3_7OJ*CFqQM+XhA>G;!L.*lCd/5WI\?,=V?Saf;E%mV2k\`DJ.#%Ia^*'s2i$f-$`.W`RD3<fF]ZRh.Dk8TQ"4](+CXkRipo1]aA3T%FZ-o,dcBMoCHKBj,O@N,0nH+6LUYFns7?rZ.P@%o4Rd+PhTbYOHb"Z:jL6E3%DDj&a)F(jQ2Bqe,ttKmQSsc[C1)s<8(t)V-GKK*4_j?281H5It3-U3o,tCiR,SQ%$GRGPl?b8;a;T`%))+@^6VG;]#lR?GR#XdDWB.>)[Hma$3^[O?C*&Y)7!h)FPP<]L82#j6gb32)XY+r<&T3BH0f>&U#R#ZF.`ZLbFEEuhRBglDL2ZcZ%cW[Il;_U3M\QJAb+u59Y9K<!)Q@oo^kYH4/ePWS%(`"P<fGG-oZ]di7kTjf'2dOhI;g2g<`%Ogq>Do_5mnZaU%(/caY:t!iLhbeK%(e-_4ZE6_R5nZLWU,6S617=XR9"'[p>T=:*i'$_Pa=B/]h[Y9/ISDBfDN&^Bfhl7l$R<YQ!5<uZjUY4el""5EY3;p,pNA?YB%s&l%C!9pJ!7Q`W#-<2R9u7X5nQBB_*],'b;8gKc^`:9i*8aXkoSr'g(Q'@=U2EXa1t.\a'8i2'm.Ag^7(0.Da_:#nXFTuTo3)@8B3.L>%7iTdFW].u-/:=aTS']R#iAjHi4l)4>"(UcTH#8d6<oGIDF2p,Y-@glL\jiA]jp-j4@6;G^!QW0:'OrV)&S'?8-H;a]W,(s>@q$G3%j7ZTU;&-pN1L'"t4Jb;5-mMJflQQB;eU'??"dI=3J;cD_'##6+2SS2r#uXbX,?s7"S]CX7oRUnK+V$n4g&WgC@g$==>/Z=.`8U[J%L_c[FIOfGcr<e*ifB>$)f$L],5@4B4@Zg!>IA*XAdX+%kZ`R.?2PG)g$r_lI/m_\)\aR`*\gk,-i_'-?)@8g&Ao`qP>XA^Y`n-pA%C;SeFG0q*CWI24U7'?kaJ(r5%<l`]e(hW*OnQ*F?5,7;I6q.q+!8)2Z(F*RREb![3o<HH"<k;DRF!#,$)M`s'dJ[bW4m&5h&1bVQ%5?M9(Drrud4R`4..n\TAS\:&OSNW7A)(_:ONV*;*G@1-dIZ2J&Q8^S5k)7JFF(1dJ7]l#2@>kq"OXaPTk*_n=Pdj+\4)2PP)K@;q%ndA`A%I1moms\+-Km"T+-J,%G"$pc$8O,EmNe;_h-]3sH7ELk59-p[IeOM2\`+BafipV2LN*edp?oW6oBj=.Ep?PUbR*`cDC4gfN%5)jW+p%KCj*(YIkKb>]^_af\+^+cArj<bc$8;IID!U'4Lq#I6-'>`CIrMi'`7?^ssM8X$-"B!Xf[Xo=/>adPDG%89paOC<DbR1D9%^5r>4iBVBR?m5qP3<CET1qK5XaG<^*m/GR5T0k1^'W%f8]@Cn]e5oji4.QUtN+ZQ9OY]2k"QH\N8uH2`)\'L=Q/Lr2J59U."mu%j%jjsas\gp"sI@]UaeVDbAL_sUPj?&;<@Q&KAX5lpSgnGrC`lB>*_1[3`O_r)&a>36^:F<'$V-oOdpT\0mm+Xk)7?*-^;;?te`WZF(%SH>dMl[ALe<N\Qt!l;@=W-3PJ0+s`5anP[C&ek#_LH$E)F1@B,k-9(GniOl$`l]dGEAdO^NihYK'AerdV%l\@P<:b:^7MLKqg\]6%bN2QtdSQS1[@+tYHo)R2B2FtmqbEcOR;Tf<"FTEeX_*n<)d2rk`&T8/,3IE0lfp,RG42e%-'L>3&#hg4C:G"&?_s:]6QfE*R2F)K%gH*!MLQVtLa`c9+!V#Z?=aiM>)5qQ+Hq]mr*9"H?l)jm=$9n<\XFW/3#YO??4@aqs.LqTS"pfCo.g&P$:`c0`;)Y#u&nU]lh2+6a%EDVm*-k<74'ZFdC4@a0m.+9DfM[#3^Q7S9!'NpHH+HlJ09GV:<-\G$PZ[!.5:9?DsMT6po<^LX;a!$>>N[9VZ>DiV#U*^\X/o:(!%YM&HIJ!mW,hgl[.RcKr]Y!I6EC`(<+Z<#J6j:+Je9Ru(9?,`mf$g/;f1?nLT?SC"C4`ZruG//FZ]X]Ls->W#3P]$Jlm[5;?R/l2!%E"Xc:5UKD!b%7kZg^:Sd/$PF07*INJ(h#7X%8fTYd$l<O1lP"61^W1\(eqm60V\q<+qkq59nJJFdtrrcFq.E4c-AWJi,(T*Bq75"%M&B%WR)1kJd:<C]"!p_nUBqJqE%F!sJ[/[-8!&DO,[qs%aU3CEq4ul$8Jk/GAeD>i6>6OQd:>,@f"533V9''co?rrIB7e0^%o3[_%-5_lRgnu?)1Vr.7$W>YO!*K/F#TP'#T]/=]&iLD2HqnCqAcdO,Y*bB#$,puR4)p*n-<PQ6k,'G51BE4MGCe#WFF^D')VIeXP?ctA%4_$:aGGloc_Id9E^!aklA2?ND4h7G1RG^(]Dac8lN%EM.?nN*TDZ7/F,U>9p/n64@R6XB7=0*\9J<lj%(*PFN>2h<P'-7f#B5`A)%*YVHQ<7k>u9HkVMQpaX/0enYV*G-?+lOB\J.Z]DqaAmlVaEUBPo2>@`nsBRISJW$$ba)J7KIp^aM\p_5JFQt6N5rkiJP3'P"pe#;%(hcSCi6jWBf6'O%LW_I_1aYTgh%MC7aC>j\3qAY+9]Rpb?W&)3fNKIS#oucs9Q\dYG<cBs`&NG79;3ke(aRKC:`3Mb/q.O+a\mKH%0`f.VRlW;G'4A<aK(>9oK<jB,GYB;(ZRloe4=7<Vb[V8I'7!9gO9?Vg0W]9U4C"Yj@#>\UJH!&@N_]Fd_WSSK61"IA*_9B,hD7>,%DG:Wsf%oZ`'c5rMMu67*IfmN"3/PE61T)\t(/3\*Y#i6W\.T1DH&ErH5'>W)R@5#A<qGf4F1h7Ws5q`\P44DFWRX2b3:O0SiO"3B%Z*$XKm>$h9G;ZV0!oZ7>-*jdF6tBeeQs0g+/m\HlA7LT9ARbn\3=cdT--YCh(#Vb7R"3TD(I<0epqrr$,[Wn(<e&QehWU*J87\mG%`O]5\_IYB7@N1mt+7Z*oXLc%W*nC</gJD/Hk.92Wd2FaUA[U#_J+]P'[IqdSfuS6\#qg#J6i<iXE5?UUn_aNd4J2MGbIZ%'Q\^G(%/ccUe]o6[gIW+uSe&6);hZ"Wj9O#>hA*I=IbjW@nhqAi$8D]-L?AB%S!o-^YiY,%'!Fka7-6]c#M!DO_PLL@URLe<aW@a5'C$4f0%^NR*>(NnP$C't#I7lcp(r;20m#X`>7&4J(9CMF52c4t]Ee.s0MajB"rQ5-sRc2/BB)o7&]W@dlXh8O)?MiC8I.l8Z.LT1N,gcthd%LHkUoH[kY3\)75Ma)?J(o<5q,k.@P+l9B,]htt7Ah`h#'&-'i1IIY4)q=5>/rTEWun^X6prL<fMYP\?B6fr=$qXE[_qCjS!^Xg@)%Y4/m:g%e;uKtU.Xa+![Obhi]Gn4l\F1ll>0p9`.k@KEOFg;h\ap`%T9Z]+YKl2Z`0\MWeNY(SPAT%aK3FS/N'p)/sr3(i7gk\n@X%^pkR=E:gr26&4\mLSL1j;FAEC/S9@f9<FZ=ioSKUSf1Em&=%CTQX!S4le,'@cDjE#XWdUIJN&U6EB40F>`Rloi;aL+#qkh?OZ9]9%_#RG8C\G"V]7"8P+i,J@8e)r\cufWNiie%s!c2p7DgRV?Dqn=Vc,U>!+_J8q8AJM'pG-/Z&\N8*d%o.B"`naW8a#PeV?:HT.(`."%Z2%V'>_4+G(Ee8`Oh_'7m`OS0Z*f>UObIu6oQJ%f=]Z$f8lbHhD7mgm`:#+lcKf4lV@XNLG,OZgdeZ?(#ba=BNJ;l%LM`?NJUB;N%N@\e:7#RbCLl64SD`t%j%euQl/eFOT_P[GS*O"+aO!u"Mh"Q.3ASmbn5#CKK!2S>iGA3,[+hGciOWc.IFSD%6DHa*(dbjt>K0Al2%P7XVW1Ghe!&=\gUj5Ws/iY;fq;+U2_!=_,V3SG6n>If357RqV1Ju@BNU)7Eh4SsZQ'm?u@1HGMYmte!(6_H,rr?[6F_hDdMjQEnI%N,b@:^=aPa02g%rQPbPGfiK328CPuAR]qp;JPk[f?oD7(inF=$LM:?/-oZek04W@C1)+4]4_W0d^3#Ir?(8@2HAa/:h\Nj\L2j6&%6T3V4i#27K[L)P9L8a2)s7dbTYj^$P'[jZ.o@<Z-Krgj@==J%4+HrG5>r)Cqe4:3r$3iL&Un)ZNOaIHB'a`QA0Z\)8='jU9nE_#Z%FpSX]M?mJ.G_W2R=M+YsjCDi&AjO4qgM(Koco\hQ3W''0b?0%#:"6GD<\gZ,__`-]YOnZIgL=8u@om$'9aP[HnOnrQ(U](g&9=fi%@V=_]=lE&%Ai=jj:mDmW@"b`*A`$X4\6%X!ZaWJb&\al`r=I^F9:X[;1$7($D2^pA9pk%1G`#hIJ9'"WUS('YOMMG'8tR)F.PW]#%)0*s(Qs5Mp*>g8CT6t?OURQ-V%8`DlUok[YBGb[e_].lZF2ooro<r6;9@"0/KA85<MhJOZhBIO0-rPq.MGs'@G3A4L*60t(5A&5s%-ct3.h53k@%=/+p'7[6!`mo`%VehpV?:5'0-2SMQV>bf6OSF5kGhu*b3c7>pAP:.S(\TMQ)@[jV@I1Ub#eCm.LHrd7M5)m1=j^M`%?DOn(W>O7j;I3`M2S$275rE0)-8tW495>mU$](-nfQ7lU]O9p_'WPjB_$9L8@;HG_Xb5h?R$>r/7,5$O;SnG+;g]<X6:89EMg'L/%e"9^uOIL8')MDsIU*R,/?>Wk6=!OQ?La,_/#)liGHHSS.@4K,M&r++;OmXh+L^=UXB8R!5A*Pl#$_Mm,?i/OXM@pP^WV*j($6e@>%&$OiRD4-)/2#pZ@IAR2KDQl9R@f-iQQ/>%\'+u5!k;=Bn;[<[kAgV_)/!>-l#eI6FKTND_(:HVs5Y*lg_X9*(,W#r"`m8[D@gK(F%\Hj@P%3&%#U4e1(=]piROO+OpDrOG(BJ\<9el)k]UEh8MFf66&c3dnk=4/:GKI4*+epIt'#_qlg$/laH;?TA^Es,Mu-2n%c8/*1E%KS\<8O>+$EmK4XY%/k_b5tDU)W8M@T#mnMbiiDLU0(&m;#RSB_$fYEc1EV#+)[GUP@g;W5H\OKql@ooa%[hMk#C;sI$-0XI8pV.;%6:9,-bSCHj_^[Qn=s>43Wk^FaY!PZ=e-R@eODlTLp8]VciQuBs\R.HViR!QhF?=<einqq<L.CCA0H+,AQK0_OZd:EWHT)XK#kF^k%@:s:S%>&7g6,f$Z^pOV4TTGIFRum>6`"o@(7*I8`(.L[D/-mi,4D`(0=B3G;?l+AY*nYF1`S?;c,]j%WEqO'lo0IPf6=*TH<*+m;%=fNth@Zc;=$uo?_Pn'Qm?,848fF2\4HJ%l?($rL*VINu+l3`7WK8HWZfOXb5nLQE%#*=0N/ZrJ;4nDfVM^nqh:2Wb05eOk,89"f#%d$@m&EJ5Q!lri:d9cJ>gX@g^:NU<:\J876U2Da:&S5<Tmr6couMo,)f#4T5C$sKg:clo`%=)i?d6\sjSA9Ukg'WNYdb^*VJhDb(p%?hJI$`6b*`8p,hBIZ;X5X:T4akUL7o4B'm)./;BU>;h\<]H:qj\*=<1=drldU'gUI#V$!e%BVC!mQS^`msP)oM^m@uH-qBZi*sjr%3?8np.B="Z+5G8[N>F<Q1;UQ%T&PQ?ln))Y=RQ03D3qO8&[@%q$5pheoYlg%8VY#WU3o2"AJI[I$=/cn109n]ZuPM4Z+3k5k_lY8%e_^oeq%XK;&gl<eNDA>k+m0Ju?Q@YD4s:TfB@:ti6-G@]gJchQ=%Q7G"OXq@c#`65rE4_aMn$_e@^Am6cE_O&1dCU2BTpZcppj*s%6XuUpOC/uR^.XW(*4]>f?,q3UY9.U&fHH^^99T56lT72kdQ["R`tu[VfOmDGa3djS2AHh!o;F6t,,"m+j@BM%$DS(^$aY`*Bmp^"%mg-V/MFYKABQ,7*i?@?l4S=Wql7@<n*A*C\o?XM!@ndYI`/p4KB,I(i_H[`p+;S.SPR;b4ED7`>\F$6]bcsqVdaA_<`CJZuhqu)f%Zd0'QOP+e"InYjB6X3_^!mE`8B$F14`7t@L")[J*Ke@J.RDK.Z2P,uEMO6_dH,,r5FWd"""XKt[>2CleQq,@O+m([tEb+.ED]<^W%>=jLY60L+^GoZtGK<(1(TL>U]\0t:&]$eQc#+-?_Zr(pFm]/e_l93D+ZM'nWOEnX3dh14-=T=.E5,kdpD/aaF]+Qj%"!a>pC,@#\%Ln:EtWsRX_(I"9'D]#cZ=%S>=Ls"[80g;rhr8#i!=n.5K3(cb/SITh?m,;%lJ0UjA.E)/9/gF[A!Tt;2(hu:`HOgu&gj9`Y]#fK2%,5L_:>$Bm4piAXd^;F.T5nYr4a7>I0;N].%V07f^R0[.\fS<a\(;)eR#:<+)ECoY%X^hbTaalCd7e]9?!g!4U\PUldp])`d\K-'c%cU'5T&;/_'8Uukh8dY"\S;ode'As>Xm8IPZ8-6HsLIbG^aalAReWQ:G#C_W4cWZas*BZ%:nXXqkO3);Ci7rDf+:=rH`$pMlA]:1^%O5.UoQQ#`fAkAjRKQK_ji,)1dT]dq0n@%n%LL)56I]*cP+4)Q`qp*L9XBG&D??/gXaf@+K^Q(-?PaQYf,I]$u)+%#%+'T(j=F;1&%4l37V*#j"FRldMu_VT][g-P:qK<HpDM*ct3dbRk/.I^3'Mkn-u7?"<EQNTC!>XPOgpq;CRG5D]E8?A'45.$_r`[^6?6Q_K3/u5r]%Q&9>`nX#,:c:ico7`W^.4*KsAnJ[qnBjfY!!M$@V9QT:4.`iJId0_tY.)4TXD^#9Me(Y<u*k>!@S3[oWLo3u9*`C_ZpCQQ\)PmfO%G=l?UXYR2KCDW4a_<3ISlsXj@rDFP\(uW>_5!kW@[+&Zu;bJ,]IXVAT/<H:D+-$*`MMHfFk)dT#)"K?(P/][b+<PTJ"Y1_)#6hG,%)LH-'lr(DNQHhbZRO1TG+g.<`fYaq*/*+NM]VVlWM5mY`9;"8*Ql>23]65^>5"<<[qMt:%;5h^>GVq^>+*"U[)4'uAIjsn)OLRmS%,O^6Vl+c>pD^hJr#W_tHNThfoT;U0>N>HS!'CQ=,o`.@Q,If:-r?8,`*:UU68IfQ?c`?eQ.,s7l_sH`h%W=B&KWt=dBr9NpM21@%%^XT>DL\>>R)aZp=@:][8WODknM(^Z/U.lPYVAO8P>gA#SZQ\`^d0H'aDZSeLh'YufD'S0F6NZ6e<V$/;DqWdZLl;r')af^nW<L^Q%_t^j49GTS$l<GXA.mm":St-RZXdhTKj?7i#-E^hRcm->p/]jL2V(@mMLlqb#Z4s`L_B!,h(-Y3A!0OS2I"RdhL]AY[@M5".K]WDW%i'BUR&L%5h,"-sSo0S6E6'!mnD"M/pgG4Ts_,ulAC4lj>K[L-8X@QJPN['Lf+pgYI704aQMNjrW6u!#!.*MH<KapGR#WgJf":B(H%'T&^'+rE*B1R)8Z+:<I`,Zk0TWWO!17;V*7bVoZ_5V,t0hM,DM(%`=o@Z,rr=V<8pN?pe_L_VX)@],H\I5%ZhfaqCdQp'oq971)s%:g4UjQ\igg=[eE/gAEd*Un;Td(-"d@!4#2;&P%_Cj^;"K7#D+8&h0QBoi`jhIO+i[7#GAka9<;&7;Va^p^dishjlp%Sp7u''JS]r%:u)X?J9uMHOIBu7E?Z`,*/2M>!WYcI+2s(E0GZSF.8C#l)eVZ>S4K98,W8%j>o"BB?p`X==[)RAZOFcs&6mPP)(tG%!Kk<Q,T%U6%')(Q$%fumU9+haJ3[=/;-8:FR:3;NRQBQZ'8-.\c>M1Kf.&:X*JI0/u5gZJfA@*&t6r]&p$5kFlLqbr\ZiD78gRQ\iMI]8sPSQN?%6pPfs!2'K0E`rMga_=UGb\>IZ`2"199m4(B6P>Sd`j!&'"t-gC8Dp1E/N1;4OeS_LLe+fPM4g\,*K!0_3ZQ22%eU+a9PZ6!@\H+D%$\"FXPE=!d:aIDZ@HdlYUoj8re`7$N/,8BQZ`IjkV/X(O]F+p1Z8EqF"UMZhVPWf<L9@e[8D4C^hBs;,8Sj8D;`CMSfMoVNr:2m:%MW-.L03,`f$Y_,Q>aj"bD$:bb[[+98+K,Qe86\qZQF7D[+`0YP'%9mg5?Z]tN_2iHd=Ki4&tPP[[\?\?doK.9fRf3'1fiZ\D8i<9%'3dfW$8A9S6eVkYP34'(/*4u]NET75"(S><;un_IKN&[/R&EGP<D;LnmD"a_EiLY7:bb,R2IY6[=^,JU.M'#_iICnC$&:Jj[p[8+%B44bO9Lff1E+3]N6O8I,k8*F1(VOpYksF+(<A:NZE=57S*k2@U-9?'Am,Un8Nrh'YP()LUQkn<VD;6Sdj#re%>9OL:0d_(VC=:5Y%!4[/8o4/Mh_'*7D0])G"*!f,<<e`oX84":P%%=P=YdKDF_W-:9F(-!QJB$3ZqX9oR/\)/m6>n9+@F-^?.OZL7_dj(U%PnM3K'p9U%?l4ii2)#GB>Nh6U$H:p`,S]Y]Pf!S<@n5;UNqEYQotXB,7T=(BZ]O&j;4`ReiL4Xh_S.6A(8OrDEA2^UTRmj#iJ@P]^CS"Jdu+Tq%(3qdoVfh%;J&goub,,%;a+:]-G.l-2Ls1_g9^p>\QAdR@A:@1$i6r+k?PsS\J(m7NVfL7.o;^.PZd'*,/X2Z2o.u0V[bBV:mc7=s%.EQQrj=NO)Ltnj4(FojV/CENO.slo4eunAl9`*%g6T/tSEnuDrB*u4l%Um-[iM-$Yf*cS`-:+F_WL,*edZS-`8:T&F-DQa*<#OA"%[EJINSRLF7=jAi791l(p*pC^m`6=<Lp(Vdq[SMb.(!%i9ro-O!hXFeDbXU^VXk/9ua5bibQ!C<u@:q,E9d4K,NBO6B8EHgB`2t*T%eeiT_7n2`:HLR.BYmV3WV^eqS'"AR]8eN>Co:(HT5fX1:7JP=/Yd(M=%4,;Oe%q2tUh%7e#V)B&_'DrDV\1e$#Z`-no0_d(&PNtU%gWSr@KkXHu<PgttVKlB&!;\Ds=Q]t>@Nr8&?]5hPpA_oh>FKe0MMsO7PI@;KGibrH:?)R$4r/?/n>O):mL>"<cjT##Ksu`I2$r5W%*'fF*dDT7%<fKE*LsFV'Ob'\U8^j\cbpqou0;_Gd4A0*JHlV/r5-s_o^0?+$d'K8$3@4=DU!f1IJ2ee*+=%XY&t"&@&:Jdk5;$=;%>N`gi0^!Rb=<>@Gd?n`)N?D.n(*0ic^HO!&+FDV0dHXF=ZH$G32NG#o1r65/N@dS0-1X?HPJj)Hr#+D>gZb@c3eju.3$5uJ+<9Id%+U^QqqqQnr$spq5:r3dD_XU5eU8qC8*9se_@heb)n<JEfjGS/p$94&g\kCsOMHQ4&2I7g#:%&(1,scXO,No,b&_R%+g=s_.\2\cC%DJ[Il?(!&O#[-5:Yl&+?Df;Ohg1LmA&<"uA+)5"Zatr8f$-SgTh02B95_+&kF^_Tu8!ab#Od"E#kqV=R?=Lgokq8`p2.=ocHVe[O%DetetIB2OO#n)&1FJM\eHV\`f*0nF0U/?CSV'%na?G8WOV*bCpcUDe(HHk`417RnUF7AU)V%f70iRs3s^ilNH11+!>`&oD[D`#f)%N[j%1*No`:Da><&pZ0gP?Z0!1^b5]U6!u!%HQWap6FLSqanMN&j\(Pm3-OjioO6l%=drC)p7-MuXW\L!7JE0kdA:+1J2i-,'-.WS%;_N.cP#/:#`bt'G8:%qT'00[@+nT-)!tGgT3f`EFY]hll8b7/m6`?$]mF2q4h$_m(@$<biM&@=05hFq"UT\/ZdH/Vc0Q%!#TGC;l%kjpH=8G)Oq'TL`5_]YkiUMA"!;o'Ei;sJuTA`h=?XFCq(8l=Wp0]nTD:OeUWWG,g,/K>pe6n^d1R:BD6]mLOB&4BPaS5*r-\P/!&%abRB+61=&R'tb$8d]BmJ!dZnZmP5@bG*#qlTPSX!S`H36?TuCOl,pb:V[oF],V1J!5ZZ1lb:Wo>D,mc`cdB!I-RTT*Ssu2(PR.XM%&6deA;h[pE3EdO0\K#YTlt5J,_>V"X@>J_>6#fHDXRaB'1+2niN-QE\+sOpB`R2TD`Z#/!k+1p+%jhf`QL[rqA7Y?Kl&\4gak3f`%gK)894(e<]k..G3#573d+n<Bin&-@&PDUo!^JtKl'Heg>3-)2&ie(J<InQ&#ilD.a+9Ia#^]Zh>D+L>,$(XYDEPde?H6"$R^sEal%,iSQu;rInI]L;n2PD0e.p=&FDFr_l];V83H`jKL*8hrI/'BWD#P/p5Bbblk)1+8!pb.rnM^Tgu/Y1$p7353E_RNJ-EnE%[hZ\Oq@%r&&lNoR5W46i<h0IamUYMUFce!K;6;LJ[1qm<Ur.rf9)Hm;Bf@!K>N`'E4%V7BnlenUCO)1np*4";!>2!Wtua<[G)9GkZ_ZE]t3O%83jO*OTe."PAR$T-BSL#a#2:qkj/Ej&=q`M#U2#::E_3$fm-'k2EU@-,>L#mdQDU!$hJr-0j,hq#h"d0bjlbk6%DcuGs2W;+`uaq%'-pru_N3OUT&"Tu1/a3a&Q00&VlL@T"Ta,ti"K"M3Z#qp#b3";:pa'W"MpJP=XE#0_$#q];)poB+IbDGF[1cHhD4$m!JYojE.U?R%hgCKe*7EJj'*O4h\e@%hJ0FeRE.XGqn3\-S5tm^AUJo#9K'tOfjhM13m:F9JZ!l$mn*U^N+>tYIQ9Zlb?H1@gbU&qc_.,MU#$)8(%5OWhi\3V5dZpQ0YOclN_%:\&.H^5=_&<gkdQbX&>\q$P>R:RK@'$cSh8bbYHFV0ZRo7pFl-qd4n12K@g_Hu.2;&()H6WB$m7`?V<%jW4k>X-p/*"+LS1;V3>cLR9o;aFpcB!)_FW+T*BJlth1T5:a`U8faiZX(j="LkN<6a@$`+&W>k>,-cs4<es2O_\oe:%U4#kkg7@X%#+`O\CdJ:K$_&ihdGD[+Fun]%R$gBnOFea/=TfSa2@n"U:o**_O>S\Agr^=)?l%.E.'n_Q-=[h=+c4De3iq#gH*Bp0d1h$#iO(^A%.e7Ap=^45siI)s>_8)@XmdLlVKFnC<bFMD#lS>H!\FS`/&9OEuMs=2QQoiEU[tkA`:]dA2GdeU'bG*5SdB$Z?2q*T1j/'DZBj@"I%9.LR@![6\W':;gre9VX!+><tNlOF2MW<*_/;Lt>cjJ=Q^=o)pR?5bMK]bC`\NDP>7/@i@WZR_jlU:ON?p#Lh9:M6qO+0U]3$f?U@%Z;QLh,dBpm)A%#C$=ouA2'le0ME+0kY4CPZ.#[r-6eY.$)C@sY8n<5a2!)uD[$A3B)V%Dn.sN\:)3hR-24m%-XTV%T[\B-#h,Te9%-h79\o,HpqhLeBt;D@N\5^s:kqc5.fL3OL]FBh'&#]QWBKI7p["UMDA6eVkY'#"q*<e+nSfdphfOESb?TOh@Dc&L\h'`a$t;ZD0m%e7q.J+]4U_$U`VT0P%8?ZkX]/r]nn4C'i#LiH?n_P-bsO8ZorVD.O-t>A5Su<=E-CJ,Z2RJ+CSQroT\g^]2cDhu<92?[qmrG>E_=%J(gL.pOfZaIJVD7rg1CsieRR)jY+@Ecen]\X$:t-2uV-2p]'P+bhmg@iP5-eR@bi'muP6\co74Biu:tLn6'Vlb)C323_e>S=F9uW%PCHES?d"$e_B8Y_fF.1=d!,,KSrUeH4+/]h+8[Vgn7$7NT3a`%]DPV*h#A#EBg;<0p4(ouKSI."5A<L&/((8!mpA9VbD1TFnF[Wl%?hOHppE-K4C6u6&D[0RQY4W*JnD(Ida\J\9V>V7+pq6A$lha<3f=1aq\TG[Q,Q-RTc[fDOPC[&KGqfif3sL"8`p'E"('j\^kC\?"%)Z!j7s!a;jkrl?L.m$b+jRUl`"'01*i.7;1898(Zedncd4)CgBUG0R5S$KN"cXgIfR'#*g_99TPBc7tkrBG^skpN1d\CS\;p27FW%d^T50T?k6h2SI@er+2Q#l,3PE[<at6l(:-;p`KATW<IeBKl=lrDrpm9[=eH)rq^coP4/@eQbWH"qpUW+X\D2*kWen&=8Ku+g]&Aq%SaF1?kjXe"nZtA*jgWR*SDW(!WSR3U'DNI@GVi`Vo#55GH@G_Ihu<Q:59'XnjdWHfr:[1`r9\\mq"0K:J+N&/hi'LAn&PItqP,-[%s66_Yrq%"6IetdJ\a4hAe$"8se";$\Qh)#!XM<t'm<3k36tDkB>3k%!Wp>AP2"O&n5:BOfAScq%*=]9(`ts7!o[clgqDUX+V_<A6%qA6*Hf+e7@rq>Bekl7jdZZ!Pun9Y[PJ,8iQIe=BMn`=CJrP^F=qXm(6T;UGi5PY*Tri123-h?m'J,7>As6J!K5?m0.0-C8TLI\+%%pOD]*cbFp4^A@i\s2RA(n7UX,o0<5V[G!90;kCbA,s"3f]DdTceckSn4O)@(5<Sn:s4?o8PQ(07s3nLqVfH"S;n4L9BtgcNs2X]b%>dX4\;nVMB[m/2V:%2N4mrk\a'"f"GI79a0=^7G_AE!MO/ClT4(@.]Q'mCD+-XF-eIL'&f&IjrU<cRB&[4JGLP#FSD/:72f?*%DJ%rm1E/Iejka5Pjg2IfPD7*tdpfmJ-9TYhb>M[TEIOM>D'@gKP&?Yi";drpBXQ%4Zk@@t/,!\.ADCI*XZr2XR/\qnLs;^DG(;\Ll\O%Q7q%89:9d8\Ma/2m(sLOpq<la^$ibkL<,]6PhR;Io)8Q;GWGbPrql`fc.@FVbBMc\Mg*uq9=H!*DJRf&EW9l.>5R_:m.TSrT:9$u%r0RA+\l?]_]J%iO7@pX7>ar35iVm.7ep:Q%2=@k3'ed`?k0p:KaSe@`UhHCsC&-EEF[bpffpDMqf.d2^n,@<RrO_NHrQFo<IgCt?%>j'i2kB"HTGEeB-r-$Do[hbLN?MqA-p>J)4rqa5jf4%lhbBMci>:R%MrjMh*S81d0/`/FUCJ-U?qmdJ$?<c;^]66<^#GkWbASu*E%cNdp8rb.Ye2ui9;J,.X0DY&(%1&W7Hht_Gu?0BtQG+J)W=o./so3=AkH]%QFSSQ7Nmi_JMn+L!JQJf/Q$_;(bH#[\-P(id[YupHi%W##*\AR<q&6(dJ#dPn#]\d/9"U=bgughQ0T]<'K8g)o]krEn_0s7]kphgP0Us)%c<=KM2*cF)]YA&6aP*G,%"a)C]WHY^G/p=n?J%^[6-)e\<0?lZ4YDjgBL!`Ad1WG1.marr"k/f"5.$Ma$4,QgRd<`l^F2[@TQm`5f?8STfb[msSUtJ$dDn^Ma'mqW/7&rSR>ks54Dr%q6o%g(4SB3DS%!&l&WU(F7&bj.I?F_f8^Bu61gN$mC@Bk_>@]T<ohr&c*_gi(@LY1@_Fjsp1P9bo/ogVXDR@1=6EbB%sdS@35I7J%\$dO4C7>0IIE;FjgR%r`ci3/nr:'1T&=cS)?K^&4kB"I?GEeB-r-$Do[hbLN?N%G.p>J)4rqa5jf4%lhbI;?&/X>$aIque`kLt6+%9-(iJDYpfMdb<DDD!?;I7>7//>h[tMkb[YcDLmgrX+.M"pM^*1&'DZ"r56#DmO/$S/DhOh'[U&7ariqEd*DXia1J:>\Gc6,r]aTd%:/'hbjgoH4<DE7Q4@#>Df(=XjC1@):m"<Es_i@d?[NG+V#V"D988T.8H1[[P;K+l>730,Re!HFt*m-\>(fJXX6p>K(bM(3:WK)?F%;LNL+\SW#JiVS7ukmZrF[q[;QB^S+25)-3bAhHHX=sh+GAFVp`'/1-X^J5R'2q=%cJ[[2SIpEZ8Mh0`om3ii[USKLF.n0q,765+_%QM^4e)e,o*h%Wtb7M)4-\mmN"$Y!<&D;E6VA5Fc@I(<Y_31AAFL*MR.9S=TDCg3U[gOOQD0R'cnA`HP8JaZO+1=h51pS[*.MTNS>%mrCn$^\o^JD=s,Jb'F,U3bUTF,^@EBg#O[Gkc;"!Nj9b/g5sLu[6'ESjdnifO**!EI<68VkcPBL?CD=15CZU$UgcAO.d@d[F1Tcc%LrPS@KqcT1=C!GTa4Dr8nePZfX`IU`MATK!/G=rMc_13GeOk.nQ;E'G@AR`F%^3"\eHbQ8rS[b2e^poP@oQLT(pFKU[Ae*_V8KtW%p24<dmj_d5nCLPL]&1N>\IXKuk#mmGBQ]OciU7%l;?aDGAo>@p3erS"WRiaB$O_ANq#%]X-%b@_4!@V:C`?42/R0>)CjW5sS"slG%ccFBrp25'H?B=Mn,p@(,AS2V0R1C2B[:jDaLS,Q6MG$DNps(TWT=YLpK'G=-0&%"'E,`[@dR^SHOkl+@($n>Rlin?2UIogH0]n86%AhLp@r#]*-9gpIl""&$o-7,Zo&>]+M;DKT##T_N5>q$lK\Kh]_!08Z+W%=O.4ucS<eW*hPpo41/'/WWQ,l0*#JsPc*V/45OC&9k$%3EW/^6-8?R,\hbs%/T'$GE-a<k_#4GCe^6*Y]Ge.Z^202Uct>"P3`n!S4do9&L,G$]MsQt&a.7I1=gWD:s"-KD;Z0^M7N<*@"+'[%EZLoN9JT.5m/su%ONTWflrYuZT))!M$WA1'Xu^I=$6"^!]WZa>8^\7h]AD+gq%1TaZj[kYJX(>(MIUDF%X,hGOIPtYB1<IdaUB]^%F^TU"C%A*+93-btmT\%pU!NT_B9Frh].il1Yn)@qrXt.qJMndrO`i)c7NI^AdQ4UP=Zfl<`^(/4?)R$)6YG4]dUfGGF.#($o)LKF%T8oeQIY?,j26Cbo[,oq<oi<Ftk<"8jZsD'c%@LFT!85QOQERcOb*\;>gNubZ[ITQhV"bS5k?:l,2!@ks$4-f*1[elXc>f=b';OSZ%U.#6JX]<?1CR(,_ps@=9gIYn/k;hobekk>!Q%9$[1>1Ain,jl&_LMrETI6N`9^!"hpI$8].VgBW(f*BrED8Q!I+OL"Pra&/^%o.u%_/f;:XF/h$m";k**b=.F^7]W3=r5fRjhYta)&ONE3ooHG/G=gt0&':Yh02>h!eoF_fPZkfMH"eE8_SL_?abM.IFB,87eHSlJuNNR%/mrP79?R#A0.FR/:cFli"X"KJ3NS+BcW&KGMQne;9J2f^WU[P#Wr\,W1Br&^"UVat5q)a0W/I(u2E$kfDFK('XZs#\ScQVo'gG'Q%]50>JSbqaUOAgDuCPkDX&U=)^\<bP;Q2.SKTJ=687]dJ[[D$T\^LCN)a=p[qr/t$4m]AqBl!*E0+du+:fI6/\^tLQMV9q"2rXhaZ%DB![r?R3PtZ-6q`KV^U"[R3\?H^i2<0.>u2#2,/(4i<3URu,HQk2)<e3/VuU0R"P2+8Gbd`=rL#cmDoW7LsNVA5D>g<98,haE>Ee%P(7@O2fdPX[Mg*qdurF`g.S`I2_!%;.?CS;QWTtE[MG=4?P3iA1`$!:K+kg*Y;5p_;:,9AB/D1=mGN''6Bn'Q\3W8L0G'Fqk9,6E%5(dt?nM7bZPi<1p^<4Tg5$N%5/^``7M"r=fNt6E/'l_>p5<j(t/P$uG``q(U<&>.BMY1;pe=Y`.c7>"n,uZS:7k,Q+S_/3emCA9j%'TT`hH!a!6&b[4W<Q2T\bUhIT^Jp&;dTYs`1fbYP$>)ptBHR)l:&[C;F9%<UWq$aD=GmF>7s`HdGcZ9W0T-b5e%h'r=3S4:=-3g+%fR+A4)VVkiY,pDH)$mNp;sBN^5Od@MFBh9M*ARir^OXpOh(.PM6ek_05$0/3k4fWT^W\ud8gcAOTgJjMAg>?d%VORuF](!$5USKH%$bB^Z'lif@b*O^4]#(>N$"=>^\:h>A8`;o<JC[KCkE5)M`_;\<fL2-30,OSXQe8jrZCo%Rm/O$6$,8UAf$7!l:@3*me=bf9GRN/]%0$@3!5?TiSeu--,'/!25@@m`nD5Ns6ECV7b>OUbM/t`<842V+B7gj,ErfCo"V,[7h2.d+TL!H/fHp@K!5&hG?1jngLbVa]&aEEjG%cTRYp/lTkH>s)60i're$M_MIc:.;;2mc?@ce4hbQ]Q,d[qBb)=KG^GkUG12\*;C]$S(]b*4,#`XJ:E#4@pf_]8#6[&lC>@+'-@A?%4mFT;guehN-TSBm&+0[Rn@?k/8A\G)e;MNae8lcX#:7&1SmoB@hF0qVP@0;D(clcTY`N;LADlL"I'E6u_t4LT[CL>5KK2_Md9-)A%C%'cEoX9bG0@539(I,GU'*&&pO3U/8H?U(di]-8:Caijs\O^mEG'qtM^YK?^+3nSZB$(ue7T6QtAWgC2!<VHh]$WKm1Gm\Jh?$:s%&d@KlZs?r764$c*m/dm!'h4uSEmSJM[%Y8J(%lZ!#.6\kaadJnDC0F`,VJ#t+"D#ia](#]2j)c#&>*K<-3(mHHha^%OATTVK/5k4%Yua!G[h)X\0'$sch7G'i8l6AQjq1[B`m78hk\@mgQoJ\";Bq!3/i*8H`IT<fRta1cKmS_W!ZY_CNM_.:UB3\rV\6AYXYL`/aqSJc%$*8r'AG3!%g<5TDB2*t^93u5MnCkjVXX#Zni,;_7B+0<aT;E5\Q2BBPO_Mh20<B:'q-@fSXta+h%2u-aV6^m09J=$54N(F?]S"/"%[X?P^p4ICWDjpb#1i;*lft.-q>U_h_,,9VDTi_&lCKl,Ms'(.LY:QJLm8%pA)3`6hoL=8_PX_f6M!]BMl:EXGT<s%F*MCFN];<!&%rir\I\"&et<IX7pjjYBq=^:R'"bSa.kXQuB_a03i!S+S=P^V^AD`:1?NZdZ)2s&VN54j!EgTD=4m;WiLY6k-o>oeCX3ccgdp!cj,%N&?CF?1_HnIlQE;:%%pWPkF,njVS^!.Z7A/\&3rpK,TY(5*-nnef#Ut!JhPYJ#n/"p5^<pkNDU<@)%]63Zgt!k<jr=4ES$HS8V>O%XlOoKgT-C)fVo)3b]g+n9bS&6m1n*MPPSI\OTs\JV9R$]iS[NZ(&;UE8f\kf15QfDFmInK<gKlmE'2mSVBs09Hg'u!^:\^dfC/>/%oH,aD"f53gW'bFhAlmc5mA=*tfu.c&ICD9("+GUqIQOa+.!0eAhjktCe>_u3W`GMoC/27-ke0gQj61IOpli%eE'mlpK2#t:UatbJ%<n=AA8VXBmI46d+4^:gS%tF2m=3mMPH8^9Nft3os,/#LH>RqR0p!DCkEkP3/[?C8-DQc6AC8VtpZeht0jpC2,:,/k394.!rUqudl%Bo`A6_4aV!b5!tL8Of=sVBqQd[F#[t/8;-DW!DG=.H9JR>c%Dqo+r53s8:Va5CEL#G<or@hX@"]^N\sK?+d^Z^NW#ZG='&g6:[A\%n(dA3m6%@fm/>cIrEd'ppW)aI#G,5jGa(4R\qF=p@SpmkDq_IglW!FSPY*>Ri(flA#HPk:T)\BAjn\@pp!nid_V?)r_sc.!MuE3c%G2`!MrSCTG2T4@NO.4GFV45*jHRJH4-h)Io4SQ6Y,7V@'8p^nGGn`j[PLk([<9Lg5^Ui7-3Q*?ph6pd&kt.A+*\N98(U(Tpq>>07%55E+FG<oq9kP)ES?#arKlJbOK?,(Te_`mo)pq;%%].i',484)%3tF24WN&r&**p9amZ670:>m^a:FQ\7.a-q<%Ad>mh$j`QPW;j3%X@8W?-^fH+X;\kQb@f^^qJ?/aDtDTLJf:Q)mg\ONHUBia?+@OA^UKK@&+S0F]rf@C$uYLcmqnM<;VD2$Db*N.lXcm.pHiRi_((L<%)4!,rV%QJ]o89T<f4C"P<EUuYAVm^c%RGm/K2pWd5QCSHcb=Z#X3^e;0)3-.);X'e3kmV,cIJb\g\#pf3pZr4JD[sTI0e<hSbp+#%SL69i94+*G294HnJ,J/D$=>g+atW!^MJ.!ljg(tVomG%#E\=Uj3G-N,.Rb]B#9:JS_l)V8#N(j<k*MFD%!_N]O/1U/S]WZ=H)G[V%C[tGbo/$n91[SnOEn&9lb0_g^B-tCE:1A"DNQTWue$pAbXJ,OO[>Dnd#B.#J`o^s$NR"e7]%Z^jmDJWU)!4(XX%X[0MV1b$ABf[/%MoK"6n_<,[[-'\+Z:'Z;gc2m^i5m)dlGp;]8#1EIlZYac\(LQ5>H_oBY-urhrb^"rQ:8?8AXWsKdaZZ9$4N@^U1Z?\;W?85Vl<><%eoX)Kps5T8YN=ApHJDuucuu`SW.C&Jc.:RG^U]nLXKTN]gBtCD`SV`LQ@3',BGtXgjf!"7l;X]uTptpIZWZQJNB,eF8S0DS/PYe$%#?7\n'l=5u,>eU"1_gBS/'ZGYS]3kkj'TOu5).rX>HZu=r)`1O>F27%=q<DPXh,LL&GjT+G]0msUWo^"\!o_c:8MkfLYA85E*#)J%W,8SIR(CFnWAcc7d%Kh$6AsHJJ(#\cb"0`J!RfT-<,j"t]JCQ2dqW#qbBgNhAI81kDSj&6p!rrSHLpc/q=@TMjo*`h'MbuU]@k`d%kd]P_fB2+3DFpJ43ZPUV2=BaLgn%KEX32Mtp9)PBAKt5'6=kL4mnLTGd-DS[^%V8Y.Fosij<?rg&*BuuW+_X\M7B/CU8/&feb/pZ%ea(E)^Io[3o&j(_Icp>ac\GQEjfZV6oU!0RDmHjJbt#n1bt.qrd^P^0g)Mu[.igh'G,o5Y_\pZ-.Q"+$^!Pb\BX(3+SFg'Lm^JL`%DG1bJ12Q6XbNbfhD3Ba$;<R_jC@T8m?,$@9o(D/f>[2D.i;RJ2m<n)?Z`A"Mph&.?HFpn4?\d\8U_%\=[jP1UGO@Q]Wk;??@Wc(X%NJa=rR9o&DYC-W83nY\6\>3hF_E-eiV&bJ?=2dGSZas;8l3!osJ,S^&lEbD9a6EMsT8N7$-T;H^gf*(gYb,e$a8N4UF/2>d8QYrM%),BgWjohXL2innRS0UQ'+W0b8AN\"i0C&ft4/9d)m0qo%`Ic_T8$has8*_Iu,WU<EGRD(qTnig;\cKX`;p#C>2]tFYW=T%mK;(rP%+MoK>Tm-UaL#HU1#fTf^&YZ_\@3QE_*,60XK]61a&YZ^p(_EC:\.G-c-UMf.a06GAN<9tjb9oDjk!=!j*q5it.NZJ9+Nq6lMR(Xg%#gBh:G`TAm=AYO'W8gI&3D`u&NW\CSp,HHIOphU563@RZ,TSc8&:4o.50X*?WZ2k);TR`*=CZl[Y9F6;ca`m%&L`COp@f2k+i)8T%c[\VA/i(:XBjInb3maKk&!?/@'"#%X-/WAOdN!Np3J8^W;dcA?4:bWn19YWTMGOV0-Q+U5W!oUDdoM:?JF-fqaq,cjgbEVY+TN&<%=?<O[`agFI=ob\N4<Zb%!NO+YNOZeh+>Zk4"Q/sT-:of\r0I)57)`k_:tnDS-QTM7n=*Lt/flk%ME'=B7OO%$GBk(okgbY9)BZ"!%5^neHLqGP]WXFr7pu,PO'VH0Y.F!J)CtH.]Q8)]C=/$lXWV]:0iG=5A5nE_XbRFpgC_hpg_`&5;W]-Nt$?`r"!a#;cJJfi.a2(_?%qD'0P\TZC]c0L+3hbAfrgVaFE$4#]O8M`#PR)Hg?Qq/3Y#XTGB80MEA9r`_3'Ij.QbDseU,f,]^?=mc6UP_$G%f:n[WJC@q7h+Gr%d*[c]DAWqQE,Q529[m_X3R=?@Jr1XL2EE)H5<0pLq4Oto&Z*&3Aq<gWGo?$rWlSTCd,tfB+Z7DMpeo!><8d/TAuL).1gi%X,@SAs%U>lQ!]GtKMRb>/Yg'8Ye0H1K],KunT=C7)66Hp_F;DENPQgbt3?A;m&I8-)g_nKd-?=JmkE?[_9&8P)ZBM9o8mA+AJEC7O*QR)/4%dJ;sWd]e<8f/LUn%((3ND%mNnG0nMc1$U?VnU8\?n`(tEU1,tUi\a[tes^Mer4,ke:7g6/,]Png8=G]38FHR[9`k>oClg85APFUr%22R.4X<;:+X`qg)TJF=RU2\UFTV#i33^*aug,',/fMT5BM+mY#&K52gT'3$W7Q$-Y&.;J>@9YUZY^HX>f^<Q.q?&E?`@<+9a3%Hi%K`7;uZZeZ<3s00r/8MK8ZTiBAL%GA-fD$P@bSYnU(N_&J1Br6oem$:sd'M1Lpa`cbOW,5*1rLOai[bOM:sOZgPM-hk,U#g.qW<o6%6MmG^P5QrAaWQhK&miF13AADE63*W-;.pZ!!".>0Rt-eC;"m[.&X*RdSAO[p_"d9Jj8+`8X0/M-Sff0Wr92j(V,$VnemM-a')4We%82p>.^5>F6Fs0llV`fTue[u(j!WaA,Z,hIGn^]tkc2dTP;)T9Z_[;Ik;IDZgBAF7/\R/cj$`TnQ@#qctUug?[^*??&NVaUZDDE9j%I/Drd/`20@1[1FM9i'3k]pn:1R!%-a[@^;oFX$lPk<12Ib(.GiAdt-@PV30^d<OlhL0!MaQ,!S\DC'(%L:!7$V:"ZYGB:1^YrWg^%pNC$hZ/VMOnr]9d3WkY)X,6DC`1@de^&gc=F<K#_(-T[KU)6[@dWFftK#cT:5XCU*']>Lc?6O]--BGFG-*f-#S=%B20T1o"1+L9I%`q6rt-1(bDC)Heu3%0XCqV,3b&e1%DT<*c&/BNnS=^A%;N^/PQPurl`C8,`nU/E=sDQ$mMr;eb/JS8%_!nQ=M,1[\\&I*e'-R5d*%lFqPuWLIfKP9&jH[S(R<B'AD\)c"a4H;KRV:LsY0.".MnE(L\+,?t8T'H9h(Tij1BMTRV&2KRU:QpZ$[?W+lm;/rpncU>enK]79^%ESbl7Qs_%2&8KaX9<F@3H>/:.KZ/[J`\nT1`0Onb#CR,E40'OmAP<0_1)!BFeeZ+23p$#XK^G8,KZO,%Y8O[af&iBUf:<".n@CXJ%'H^;gY_qb*fGg3+2C-h6A:u.QH[a5A8jG3nYi=>J6Vo)B#HC0ja+Pu;i9WP.KOnJ0SPX$d+IR(3+KBm8U1cXBHs$KH2m\AS5k\Ru%C_.8kT%;e4mZ](/f$c@g]n`'9pI&R<E.3FW^,Wd`'_,`<6[u;/#d11!VX9t,LK/:HVBn#cq\D#ikAAffa,I<sp66OHJ_k;+1]]7+%F5+Xo?ShbZCbn^8TuOE)nI)sImN]Xp?rtB+"jJfTk+iG4h^=$sVo3+<r[#[3ls,[+<eEX"ZK6c_-'N83KP#2MYUjeZ'`SR6-Pu6,%"Fn@'?u]-?iQ9@/L\TWsjO/Db*[!sDac2hdP]t#OchN:5eJX\#>TMWl-UJdYjh5Oe9`G5N(N%'^#bXFN"?Zj#Tl-S!Xten_2Iic6%U`r,+p/EH5;NRWk,]K#J*(c+3+N[NhI"T`?:'EN`ARUtRp9VPlr+D@WS;@"o5TJseTefcb_;IOI(XtRrF-Ggn]_C;hX6Ri6-^YT_%Ou=2"c,`--%ea35N=kWXn3@r'6p+jI/s0ab9YD8+9;4QoXXn?PE@=]h1^@)=B*Z1a_?cD4+L>]ICY<liJ35Lp[d[F37Lsn$l[a_V%S&cua';m0<)9mbbBUD>@"t%p)\Z+tQ"04$>E%>cP\j\>M'uII:7qVlbnh[Q)LC*c\\'4p^.;;CO7mH/0+MrfGIS6\mR-<V+!@!/l%?6lip89=o=8SP#T^Z@\J@c;W_)D!$]\Q^\%73oYi"nn@T?&UN@nuPs8gI`<A^1_ZiplH]IlDajFkleCsd'_R?0OJZ=\IrU^(`3ei%reKDGDDGC8raFQd_H<3*j6.tsXC*I,,_/fDAu(L,D>K4g4DKp#k/J;m&hC&'S3S,(8sUpD9E=^gZdZf[?,;JCAgrS"GB*ICi8\nS%HB<jA(D,3#<6e8G/JEh<M/_d'Wt?g#a_]E3PMFT<H&doaN1<V)W3DG(48pggNarp\;K5(DD7[76Y/n[FS4LRUSnT4C-,EVO+<!G1%nu#+j+F(52-AfU*KNla3[36]^>Ml^4\iq,'h7BjFi4E"$!n:u!,a%#'?8/c`e%#6&P:a`HFV/G;.#0C7&[A>Uc`I)`lm7Ce8X<M(%_h`*&_1$3Aref[gG]dNQRr@H5A%fEB6bD.<`DLb:pP=<TX5bDRN'?TmS&du>m`Y^6\d%o6qismM?OA+i9BA\`EO4Q8aL#-U0HMdZ%EdIVSJY!m)*0>%ESN5+S=@21EXOb+]nmqW-g5jCqX_AsM_f@=XO"NngdE-d#@YeFVjod$9M-Vk!O1`]q&SG\_^$5jWR\hZ*-R1.<%$<pNYH9IUo2^m+:Dl)*pb-NN<QnB73BKCN4d1M;c::#o8Kd=HR4)Z#;drX#$H6#@^aD4d#QAM53I8tC6SYh73>A,+HAWD3Wg4:$V%.%0'!T#<OPKUef2.]ELI''-8kKsu+dLTS]QJMYQB,s9jP:GET)s1qXbmQV-t=]8Yc%*D:4p(lKAb4hKI<Z;9f<Gs(&]XM-CI^uoP%m[Z:u)0"#M)<R_p$"P&f;Hc#24==tq1WG=n-`p#5M.VcA<lZt3)\4?2<JHj:r[i!h##8?=I$]i/nR@WsYTIr7WW^n+3GDIp(]L"i%f#r;5=t>G.5k$a@Te%4VD,CWD-3bh,8p9j^aA8iL/f73Xj;NAelhn+FR@hHcbg<KF/e'&0!l(]u2Vc'GL)8K5mAU\Y[`dh5[*&S'%Ve?":P<I-5EP>FbZ?9(s89/I>$HqShg7FTN,;;$M;7gqXFg$c/gXt6<?\$Mun(-r2s$nlsrkt_X\$&@4G>XJ5[Z5)]Nt4q,do@(V%WJPF1U>f%VEiP'A0D=!fNQ[Mam;<:BZIRmCI15n3Gh7h-^V!K%aKDNXX&Jo,(;/MCmKK3$#t<-<q90c"'Alpk;\!YAZONfZgV/]l%9ZsN2K-2u6K>k0QYJ0h+r:&f4hZ&YO]lQ.jds=[nEr#LGIlq$(PJeenHUs6RC)eO<fT6"(TeND8mh?#t<66h:Q'%Q"SH2Fh289[u%]:@7-*35-<Rab?'Qtr://E4OeNEIB],9Vol+;=LT,T1VqGd.$+IIQ'^jUZj5rq;8NfPL#[rYg[RY/,;Q\ANa]YBN,nro,gj+AZ`m%Wl'D`Lj(3ml=t?p#`r=l,??2cFmV#u=8dK>d3n!78+8<KC54dM)QjW'%V742_UP*]U<(lrArY5>dI[[EdGI."r:Kjs?N0E^i]E"s%\EgJ+5!CYB:KP.TDj%Sbrch>#^#TXkZ+iIObYeA1@R#%$m'SeHFp9c@eGNY:mg1/_F8a1cH&5OrZuoQ(/=guoC0>#$)Dk3[@Tgjb%X:LZ`kDN,b?/de=s7H6R];NEOo9%ePistC[^Y\XnhQDppfAO/%[%T,?m\E8Dc@+bZM*'5-XucO()DjS61Q=Tn&u)<&#r5DBJk=IR%QT<1ogI>4K6^9qRMpfs&o3QmUP^@=tpup8k^\R\4?[hY'D.5]/.EE[Q3%`=<-`&Coc(3Hdq$hCKbF5Io;2[J8jeXA&9WCQ^Vn.b&%>she-=W3jqEIHgLb6qD_jV*7OK)f[NE@[9Zm)Z=uoZC%hPU-c0AaF-+^sU>b!llo6=Ui-sJ/,HDN<1K"fH'N>Gm^'eSHj)@Vi:aJ%0/j4X]6(IBf@l#ID=GkKi#%\+R1C_qir8C_&0pU_[]m.2-DkZuO6]2i1%Nl*##)DM=lpRW?J2:;[#Hca55UjgPsI[WR8/M!RW*I3%-V?&`&ePWh?9T:KKI6rM#?2lIianeL=KO)^!]"/;MBJ#67%(12CeLD@Y>AZ$cR)KqfOks+4uT4u5fSYTKgFjm8jK,*Ti^o;,1\#9%PJuX3WsljikgAj:?X+jgbfZH6Pg^`Qp(A7(Z<R(-N,B=&LISWtLu=G0PMNqiJ],!oC)A:s`spE>c$H'uM7Ipa=(A$n`rS5$R6EVZ%'-`,ZgPl$U/9<P-R6B\ne'=)7Hl"&EZA]5G3)Zh\)/rWo912GV[LVmaQn>?OLcLq1I9#Tjk^a%9,b;F5JSfU*Do1HZSH`f2gq)*\%Ol_noCI%i2O5oIdahb+hAE[.2`E$%>i?K4X5*fpF'o%?iQS`BE-e4rRKMMa?18;Ma]8?**'kXF4/D:::@)#^heJ41.bc:=9Hjf$Q%=\f,P&gQFBgI4VA@?u$iU_@[Q*^AMY\##88^>e[AB-"(?<]@Cg&J9_uF>+pm"XhG3aXf&M`YEUuO_q>up+d"'P9jZ/[>*b_H$2`s%H(>or-QK+oO'48@;,O4f'nX,S<sYpP<_B7"ipl_nKC?#T/;iFspf3TD]dW.Z5T,cE82.2O^pIp?i5n1BaW4Zo:'!.P'_<gH':Vr&%Z#J2,5l-o`6'FGX\>]P4.jf]0BqX8E%B0I?0g/4fj1KUCZ)mneiUW+taV1K^>>5Btd+8Dd*Jt(pfn@p+I@@Fb*f-R</ScRErj)2g%^J)`%-$re@_VCCg:WZ'2,jfBam#6?W@oa79S@?n$@#]l$AW'6je@e-K"V]cMEto0*Pt<NLJ+bj7Zn#12"]q1Z)r+5].Y/ZcQ-T?^%9H!uq1Qd4#=t?MF.cc6fl7SM6$rK`^"Y:,]AiQQMq$<H^,a*t$k[_mrc$Gh`:Dm,gRG8Fn6d`&h1d%)V]!i/u\nKXuO?EL=kle<#%Bn$97,[fc#enV)qFGRj17SOO#+>oF71cA(tm11A.<<@ig`>psY`Mb:Sh%^k_-lb3(m3:c@Xkj@=2AC;)7bWg@;OoX(Q>%fPmi[Ih%s8020MelQ%\^uIc$E`TM<+7PO-Zkr'orIl0i.Nu\UW!91^T)a%<(:k,a^J-d!/FFac&1)8;;E+lc:\k,"m';NSXjXU5oe(:H6<t"%*hp]B-tcgi"_fl*kY,(g))aXfPQsZTI7$&!@&=[dU=\2tc8n(,Q1#LoKEOmKk?"fL%bGb$4e_cQ])BK@7NtXTW^qrGGa?6@-)'rU%>.'c&>#ti1fP>inaH@&=XE0YWV@_Kch^Y;0aX^1K30?g$*PNH!q"8]`83eZqf's=$d^TW%05f@+&?L9BO@7^noZKEQoFC?Jr<._O%T_A>1ap`*0#(bstJ9YD3P_2Ml8q:ER9H2p*gFNE'WHL'/\F%G'j-F-P;00,YYs1ojlSOF/bRW@K9n>*5FB_ZTB*uL6=`Zo>V84@4%h$6A:_RI`V%3''Oa\OJhD,I7W&'9*nUOOO6&d53M(0V!$"a1Le9r6$'P`\sl!"W@:_**t"6mna/!"d[iE.A\3H3ERs289^ee(#;*%VP>AJ",Z/c\As;`)>h9$X]YKK/8d;SG$#'Jehq$-0HT48,R'tpY[S@qZhE7]*uZSkO5L3Z9:WIW#V*\H(G,cIE9"[.)-<':[X<1+%oZ_]("_:l]'g@03>/+#<)B!X*W<b'B#=;Q!+3G$>-dbDWHgHKj/)7+Sqh0ME\V>(gaGoFAg7;gnfEL\FDd@U,GRMJXN$Zbf?jjT.%H[l3cqH86m]\^Xb*!]XfWf^>/nCR6$]F^2jO:,n<_Y.DW6P\:J:gs1#9b+'k"(Co'!+K>)^M?jU?I=e7A'DPm1fY&<fD]0hQe7$G%5;'m_iX;pqn3$K!MW#6G"DW^Gi\X.5Y'?&O\%W]0^'!cae:h@$;Lpukf(j&e82k8@Yf+'oIk5&=Mh4mATM,JR^5?D"n`]E!6h<Wp%kcV>c0K'oWF:Bf7!$KM!Fh'(6i)I8Qo?:TBDVR4.]Y>@,]92@cGGEuB!pPZ/_[YQ]cS_Ru?IpJ*c0(*-Qk()T!u(<M$eK6;:lo\(%J?1Qp@sGn+];nc$Zf!]%YZq/>C)bn-o!8&LWgd1?TMXAIT\"9%#a$4+-WQ^'q-BG),S1RNAD8q/RC8;%hgf@hYBV&c7YR%g0%A:>%QW_pkD1<J_oiGDS=?k^mpXQHsC*mIBP.>6]0F.n0'nS)Gagk:UY05N@W4d#:68Nc'S1qd3(mPd\Fm<?SABBRg*/-mcBd.LObJ$i-%n>bNh@=([$\a&]m@nl^3!"sQ'84f(sXk:Fj?J:p'ek!'dK!k(.'?XcrWAt:OH_?)EW-d:A?AR3'@0[&o6+7MqYlkpujnY)Lr%R&@%dmE6Q2'32(EYZD+dsXCsJ4jp/Nq?1T+uks.02ijQDI*BQ=563@%3P?@n`)I"nsE)tL:/&Bm&sd9Q/TcYn)-.]6mh]jMj"`'%%%AO%JQU0SU"j--fS28/*uor3);)#f6Ns+i.KS9n#5/Puc9b2B/90?"!hj*$>A3G+Sc_5X:^M:QAko5M'=7qd5p/@Vi0kc^PO=:FNe"N/%f8&OM"u759UQpN(nH>ct<a,X7LG<NV3+#aAEb]Gai+*56i2h^TqdWiONQ&KaP7\@X,9^'`AL7N]_'bY/J]t!!r;*H8(Pf_=klhWD%WW_34:C6*m&qZ-9'O$7_T!r;j0PE>F5>;3S!Xf6Jf&@72>t@Ls(pr"NK[rcgod(1pX4A&B1j#?3=54OacaLK?%Cub,cn#3J4]US-%:^Mf=*US>P`+u'B9mpKL7Cg7(SOnsV6u%&ar&>8-MD(K@:AlP6Q8+#=@FPj'FW``Y\"PFrdDt;X0O-WnX)QnYbleO\^Mr-42$s?R%^`</!3kSl^n0MY$mL6Ha:!m@b7g%A+=9rWc+JAVf,ZAuW0Z^mfF%+C"q$g$O.Hi([K<-'"l@7W#S7CfB?R&/7:;]\$8ZaU1)<sIP%>W3RZ>P8T/E^^2=R4S5jYhp4<V49s-?d8@j\:s;Xcd"ZD-[:R-)F>[`^i$He@4^Wep^U\go0GmPbVm\-EPn,"]9TRl:M,bt(g.l.%p_KJ8`[KGA]H]sKGOqS"?LfkfY=i.mHHlrI=^>klbdR0$XDY-rBAO*Di3[Ob%ohX/>s.+&[O_<bfZWS-K/UO"4l)IE"WuJ^h3Z-X%)@'ql1D3qV+/%#@c?4Djc"`)RrU)QKBY8j+d!1si:KbJAJ&Pn>T^acWT[>+)M1N9=3s'E]I"95bfZ7Q2'5P--b?N209:2K;GkZQ-%Fl<=[/GATc/jQ0E82EO4)AU&<V@V$uRJ)mhd[GCX3,FZ?-!*8'!?.6^a;P7r['9VFO5i$^Es+Pmj"oD)#[>LB)3r!Do1F7e\m'QZ%B[iCn5ocLGJKZc$B2T%`$O:F(63%PV1IZ#`q?H!LN!ceT@sH!dq!a6/n_o9:B#9bGM9Il&q"<[fK@#N7*ghkTaDA%]XP,sOguHe+%n/H9ij23ZZL;Pen/C&+Jn;JGs5!2bCdh^Fq%*tk?iL(7@#1X8P(rD&@<//MWrECts^u:^@W&/pI7V.ZKLVkpe=rSbA4B%3'%*RW!%N0j(n)3s16R(US_W;5e(Brg0.mDCa2[RAu0i>Lr)nu9^[>\C;?.F:_U!4'HN9(-?=#R+fS's:F1?Ii[b^0OSBel"B+:^3CK,Pi[B%CaiMYV5Q:fdW8j_ksVhk-T]>hFPKI"b&TqsaR4h,?c/SnrK+694RLM`C$@m<G([0BIW3sm@m1A&GF,9L3VeefK>2i1l`@M:#KA@l%IV-,F@@^=(Tr]Cip12U[P4?3-.UUM=9?YU9A?n&]&uC)e'BC5RA4,46PlLIgO63c]O&euA4-LDO1ra]%8ZdJ$Y4[0ZXZsPe>4_:S%8Lb`-$QGZ!HNh<7XcG1KF+_c.PZ+tgJ2eD_MHGFG)nfl.;.)hqR$pSrGk*[=g]'HOGdKlR97=@.C\0`5))@D]YsFM@]9>0\8!B^F%\:Q`$e)J"tHV:iZLpF%;rKal`FK#kWXdfkOZdl[+''87QULO1a[pm^@NBol%PH9BP$]1EW$hhcdBG;e9<JAt2nsM@`+/b8#Dm->3%n\t31rPo0!NL&^d_(rT4^4Cod<bm+'W7rn5+b+*RCQ$e9'@j\HQo7Oe9N2H8[_>=X^._ltT4ST#m$-^TQ,dm,OkGh"><+JsX:?+^%qH7kWe6]),rNSgD(28B%.HT8aaYqlH-;kn?DSk(r-t,T4^0b3pG=j=rf!90DU.0.R!>A['r<b+p#>R48\*ni%VF.:-`Qm.qTh=s@%J[RUOhJ7K25t)g;Vs[4$?;;SM;iTH+AF&e(VRE@#1.\\tQ/o(#qB^]mi2hP]c5HZhXVAu!0lUBs<016Og[WMA[1><e0`ZrMm>sO"%]OC>Fnbqge)].mQ.+(ci:=E)W6e#rtV43RS7.)G`>E+p]^'EZWZB+;TMUtR*&PsNTF,Eou9pE$CXFOmlgpcNDT@9K^OEI-nr8cSE%,-spM\MSO<j"B>jFShY9GmD@b8t_)X_,9493cE@g;7TE:eD"dj`dgb]6Dcrl':J]^9YH_tmALdg9te-YVF"\Uj,D*AWeP3Pj.+3E%Gm\S=$`IJ\;m-gAl3j#+X#F.Vl:em?4du5$9YIkWg:ihG]f&%+o[pCJkMRCgC``j'^OiGGHGTfdR/4%e)qaQ+*c1-%>fbD21A*,J%VS84mO)q/D?(@mTo0NnuP,VN>g>KBde42[%OcLhU>_Sr0EZe;qP,XKLf`7#=O9s<dd*u-0lEup;`X8.13+Ib1>9-GO[MP>-0KW3O%DkZF%2t^44hV=MooqpT[VDn0/.?UU]2F56mP,[&V78ps_WK0HFU/o2r?mSb/N6Ak1M3UcJN>+)>^7QmCqUM![*OT;?jm1=DWs"li%5c.l\#>Dg#l,_AD>lr2,Of;FD78psOW?3#@+)U9rIeN!=%mS5:oCU5P0:r45im$N(O5>6Pf?[g<puK]k^V"m_k0_AUT7?atm.luT%IeCtWDdN?IIQ;cNk/Gs0I.cX@g"1`Ql8sD<J$P!IpYOA[J+;b&!VVcuk5~>%AI9_PrivateDataEnd